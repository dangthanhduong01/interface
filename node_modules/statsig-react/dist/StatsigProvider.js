"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var StatsigContext_1 = __importDefault(require("./StatsigContext"));
var Statsig_1 = __importDefault(require("./Statsig"));
function usePrevious(value) {
    var ref = (0, react_1.useRef)(null);
    (0, react_1.useEffect)(function () {
        ref.current = value;
    }, [value]);
    return ref.current;
}
/**
 * The StatsigProvider is the top level component from which all React SDK components derive
 * It initializes the SDK so child components can use FeatureGate and DynamicConfig values
 *
 * The provider accepts the same SDK initialization parameters as the statsig-js SDK.
 *
 * We recommend you place this at the entry point of your app and pass waitForInitialization = true
 * to ensure the SDK is initialized and all values are up to date prior to rendering anything.
 * @param props
 * @returns
 */
function StatsigProvider(_a) {
    var children = _a.children, sdkKey = _a.sdkKey, user = _a.user, setUser = _a.setUser, options = _a.options, waitForInitialization = _a.waitForInitialization, initializingComponent = _a.initializingComponent, mountKey = _a.mountKey, _b = _a.shutdownOnUnmount, shutdownOnUnmount = _b === void 0 ? false : _b, _reactNativeDependencies = _a._reactNativeDependencies;
    var _c = (0, react_1.useState)(false), initialized = _c[0], setInitialized = _c[1];
    var resolver = (0, react_1.useRef)(null);
    var _d = (0, react_1.useState)(0), userVersion = _d[0], setUserVersion = _d[1];
    var statsigPromise = (0, react_1.useRef)(new Promise(function (resolve, _reject) {
        resolver.current = resolve;
    }));
    var userMemo = (0, react_1.useMemo)(function () {
        return user;
    }, [JSON.stringify(user)]);
    var prevMountKey = usePrevious(mountKey !== null && mountKey !== void 0 ? mountKey : null);
    (0, react_1.useEffect)(function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
        if (Statsig_1.default.initializeCalled()) {
            statsigPromise.current = new Promise(function (resolve, _reject) {
                resolver.current = resolve;
            });
            var unmount_1 = mountKey === undefined || prevMountKey !== mountKey;
            if (unmount_1) {
                setInitialized(false);
            }
            Statsig_1.default.updateUser(user).then(function () {
                resolver.current && resolver.current();
                setUserVersion(function (version) { return version + 1; });
                if (unmount_1) {
                    setInitialized(true);
                }
            });
            return;
        }
        Statsig_1.default.setSDKPackageInfo((_a = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.SDKPackageInfo) !== null && _a !== void 0 ? _a : {
            sdkType: 'react-client',
            sdkVersion: (_c = (_b = require('../package.json')) === null || _b === void 0 ? void 0 : _b.version) !== null && _c !== void 0 ? _c : '',
        });
        // rn
        Statsig_1.default.setAppState((_d = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.AppState) !== null && _d !== void 0 ? _d : null);
        Statsig_1.default.setAsyncStorage((_e = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.AsyncStorage) !== null && _e !== void 0 ? _e : null);
        Statsig_1.default.setNativeModules((_f = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.NativeModules) !== null && _f !== void 0 ? _f : null);
        Statsig_1.default.setPlatform((_g = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.Platform) !== null && _g !== void 0 ? _g : null);
        Statsig_1.default.setRNDeviceInfo((_h = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.RNDevice) !== null && _h !== void 0 ? _h : null);
        Statsig_1.default.setReactNativeUUID((_j = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.ReactNativeUUID) !== null && _j !== void 0 ? _j : null);
        // expo
        Statsig_1.default.setExpoConstants((_k = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.Constants) !== null && _k !== void 0 ? _k : null);
        Statsig_1.default.setExpoDevice((_l = _reactNativeDependencies === null || _reactNativeDependencies === void 0 ? void 0 : _reactNativeDependencies.ExpoDevice) !== null && _l !== void 0 ? _l : null);
        Statsig_1.default.initialize(sdkKey, userMemo, options).then(function () {
            setInitialized(true);
            resolver.current && resolver.current();
        });
        if (typeof window !== 'undefined') {
            window.__STATSIG_SDK__ = Statsig_1.default;
            window.__STATSIG_RERENDER_OVERRIDE__ = function () {
                setUserVersion(userVersion + 1);
            };
        }
    }, [userMemo]);
    (0, react_1.useEffect)(function () {
        Statsig_1.default.setReactContextUpdater(function () { return setUserVersion(function (version) { return version + 1; }); });
        return function () {
            if (shutdownOnUnmount) {
                Statsig_1.default.shutdown();
            }
            Statsig_1.default.setReactContextUpdater(null);
        };
    }, []);
    var child = null;
    if (waitForInitialization !== true) {
        child = children;
    }
    else if (waitForInitialization && initialized) {
        child = children;
    }
    else if (waitForInitialization && initializingComponent != null) {
        child = initializingComponent;
    }
    var contextValue = (0, react_1.useMemo)(function () { return ({
        initialized: initialized,
        statsigPromise: statsigPromise,
        userVersion: userVersion,
        initStarted: Statsig_1.default.initializeCalled(),
        updateUser: setUser !== null && setUser !== void 0 ? setUser : (function () { }),
    }); }, [
        initialized,
        statsigPromise,
        userVersion,
        Statsig_1.default.initializeCalled(),
        setUser,
    ]);
    return (react_1.default.createElement(StatsigContext_1.default.Provider, { value: contextValue }, child));
}
exports.default = StatsigProvider;
