export declare enum DiagnosticsEvent {
    START = "start",
    END = "end"
}
export declare enum DiagnosticsKey {
    OVERALL = "overall",
    INITIALIZE = "initialize"
}
export declare type DiagnosticsMarker = Record<string, string | number | boolean | null | undefined>;
export declare type DiagnosticsMarkers = {
    context: string;
    markers: DiagnosticsMarker[];
};
export default class Diagnostics {
    private markers;
    private context;
    constructor(context: string);
    getMarkers(): DiagnosticsMarkers;
    mark(key: DiagnosticsKey, action: DiagnosticsEvent, step?: string | null, value?: string | number | boolean | null): void;
}
