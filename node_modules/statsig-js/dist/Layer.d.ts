import { EvaluationDetails } from './StatsigStore';
export declare type LogParameterFunction = (layer: Layer, parameterName: string) => void;
export default class Layer {
    private logParameterFunction;
    private name;
    private value;
    private ruleID;
    private secondaryExposures;
    private undelegatedSecondaryExposures;
    private allocatedExperimentName;
    private explicitParameters;
    private evaluationDetails;
    private constructor();
    static _create(name: string, value: Record<string, any>, ruleID: string, evaluationDetails: EvaluationDetails, logParameterFunction?: LogParameterFunction | null, secondaryExposures?: Record<string, string>[], undelegatedSecondaryExposures?: Record<string, string>[], allocatedExperimentName?: string, explicitParameters?: string[]): Layer;
    get<T>(key: string, defaultValue: T, typeGuard?: (value: unknown) => value is T): T;
    getValue(key: string, defaultValue?: any | null): boolean | number | string | object | Array<any> | null;
    getRuleID(): string;
    getName(): string;
    getEvaluationDetails(): EvaluationDetails;
    _getSecondaryExposures(): Record<string, string>[];
    _getUndelegatedSecondaryExposures(): Record<string, string>[];
    _getAllocatedExperimentName(): string;
    _getExplicitParameters(): string[];
    _getEvaluationDetails(): EvaluationDetails;
    private logLayerParameterExposure;
}
