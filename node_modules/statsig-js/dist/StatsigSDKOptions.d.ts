import { StatsigUser } from './StatsigUser';
export declare type StatsigEnvironment = {
    tier?: 'production' | 'staging' | 'development' | string;
    [key: string]: string | undefined;
};
export declare type InitCompletionCallback = (initDurationMs: number, success: boolean, message: string | null) => void;
export declare type StatsigOptions = {
    api?: string;
    disableCurrentPageLogging?: boolean;
    environment?: StatsigEnvironment;
    loggingIntervalMillis?: number;
    loggingBufferMaxSize?: number;
    disableNetworkKeepalive?: boolean;
    overrideStableID?: string;
    localMode?: boolean;
    initTimeoutMs?: number;
    disableErrorLogging?: boolean;
    disableAutoMetricsLogging?: boolean;
    initializeValues?: Record<string, any> | null;
    eventLoggingApi?: string;
    prefetchUsers?: StatsigUser[];
    disableLocalStorage?: boolean;
    initCompletionCallback?: InitCompletionCallback | null;
    disableDiagnosticsLogging?: boolean;
};
export default class StatsigSDKOptions {
    private api;
    private disableCurrentPageLogging;
    private environment;
    private loggingIntervalMillis;
    private loggingBufferMaxSize;
    private disableNetworkKeepalive;
    private overrideStableID;
    private localMode;
    private initTimeoutMs;
    private disableErrorLogging;
    private disableAutoMetricsLogging;
    private initializeValues?;
    private eventLoggingApi;
    private prefetchUsers;
    private disableLocalStorage;
    private initCompletionCallback;
    private disableDiagnosticsLogging;
    constructor(options?: StatsigOptions | null);
    getApi(): string;
    getEnvironment(): StatsigEnvironment | null;
    getDisableCurrentPageLogging(): boolean;
    getLoggingIntervalMillis(): number;
    getLoggingBufferMaxSize(): number;
    getDisableNetworkKeepalive(): boolean;
    getOverrideStableID(): string | null;
    getLocalModeEnabled(): boolean;
    getInitTimeoutMs(): number;
    getDisableErrorLogging(): boolean;
    getDisableAutoMetricsLogging(): boolean;
    getEventLoggingApi(): string;
    getPrefetchUsers(): StatsigUser[];
    getDisableLocalStorage(): boolean;
    getInitCompletionCallback(): InitCompletionCallback | null;
    getDisableDiagnosticsLogging(): boolean;
    private normalizeNumberInput;
}
