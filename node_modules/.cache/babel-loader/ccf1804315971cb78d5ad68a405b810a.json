{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction Polyfill() {\n  if (!Object.fromEntries) {\n    // @ts-ignore polyfill from https://github.com/tc39/proposal-object-from-entries/blob/main/polyfill.js\n    Object.fromEntries = function (iter) {\n      var obj = {};\n      for (var _i = 0, iter_1 = iter; _i < iter_1.length; _i++) {\n        var pair = iter_1[_i];\n        if (Object(pair) !== pair) {\n          throw new TypeError('iterable for fromEntries should yield objects');\n        }\n        // Consistency with Map: contract is that entry has \"0\" and \"1\" keys, not\n        // that it is an array or iterable.\n        var key = pair[0],\n          val = pair[1];\n        Object.defineProperty(obj, key, {\n          configurable: true,\n          enumerable: true,\n          writable: true,\n          value: val\n        });\n      }\n      return obj;\n    };\n  }\n}\nexports.default = Polyfill;","map":{"version":3,"names":["Object","defineProperty","exports","value","Polyfill","fromEntries","iter","obj","_i","iter_1","length","pair","TypeError","key","val","configurable","enumerable","writable","default"],"sources":["/home/diep/freelance/interface/node_modules/statsig-js/dist/utils/Object.fromEntries.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Polyfill() {\n    if (!Object.fromEntries) {\n        // @ts-ignore polyfill from https://github.com/tc39/proposal-object-from-entries/blob/main/polyfill.js\n        Object.fromEntries = function (iter) {\n            var obj = {};\n            for (var _i = 0, iter_1 = iter; _i < iter_1.length; _i++) {\n                var pair = iter_1[_i];\n                if (Object(pair) !== pair) {\n                    throw new TypeError('iterable for fromEntries should yield objects');\n                }\n                // Consistency with Map: contract is that entry has \"0\" and \"1\" keys, not\n                // that it is an array or iterable.\n                var key = pair[0], val = pair[1];\n                Object.defineProperty(obj, key, {\n                    configurable: true,\n                    enumerable: true,\n                    writable: true,\n                    value: val,\n                });\n            }\n            return obj;\n        };\n    }\n}\nexports.default = Polyfill;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,SAASC,QAAQ,GAAG;EAChB,IAAI,CAACJ,MAAM,CAACK,WAAW,EAAE;IACrB;IACAL,MAAM,CAACK,WAAW,GAAG,UAAUC,IAAI,EAAE;MACjC,IAAIC,GAAG,GAAG,CAAC,CAAC;MACZ,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,MAAM,GAAGH,IAAI,EAAEE,EAAE,GAAGC,MAAM,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;QACtD,IAAIG,IAAI,GAAGF,MAAM,CAACD,EAAE,CAAC;QACrB,IAAIR,MAAM,CAACW,IAAI,CAAC,KAAKA,IAAI,EAAE;UACvB,MAAM,IAAIC,SAAS,CAAC,+CAA+C,CAAC;QACxE;QACA;QACA;QACA,IAAIC,GAAG,GAAGF,IAAI,CAAC,CAAC,CAAC;UAAEG,GAAG,GAAGH,IAAI,CAAC,CAAC,CAAC;QAChCX,MAAM,CAACC,cAAc,CAACM,GAAG,EAAEM,GAAG,EAAE;UAC5BE,YAAY,EAAE,IAAI;UAClBC,UAAU,EAAE,IAAI;UAChBC,QAAQ,EAAE,IAAI;UACdd,KAAK,EAAEW;QACX,CAAC,CAAC;MACN;MACA,OAAOP,GAAG;IACd,CAAC;EACL;AACJ;AACAL,OAAO,CAACgB,OAAO,GAAGd,QAAQ"},"metadata":{},"sourceType":"script"}