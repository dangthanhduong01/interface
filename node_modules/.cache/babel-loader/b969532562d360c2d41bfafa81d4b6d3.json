{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatsigAsyncStorage = exports.EvaluationReason = exports.StatsigClient = exports.Layer = exports.DynamicConfig = void 0;\nvar Errors_1 = require(\"./Errors\");\nvar StatsigClient_1 = __importDefault(require(\"./StatsigClient\"));\nvar StatsigRuntime_1 = __importDefault(require(\"./StatsigRuntime\"));\nvar StatsigStore_1 = require(\"./StatsigStore\");\nvar Object_entries_1 = __importDefault(require(\"./utils/Object.entries\"));\nvar Object_fromEntries_1 = __importDefault(require(\"./utils/Object.fromEntries\"));\nvar Promise_finally_1 = __importDefault(require(\"./utils/Promise.finally\"));\nvar DynamicConfig_1 = require(\"./DynamicConfig\");\nObject.defineProperty(exports, \"DynamicConfig\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(DynamicConfig_1).default;\n  }\n});\nvar Layer_1 = require(\"./Layer\");\nObject.defineProperty(exports, \"Layer\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(Layer_1).default;\n  }\n});\nvar StatsigClient_2 = require(\"./StatsigClient\");\nObject.defineProperty(exports, \"StatsigClient\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(StatsigClient_2).default;\n  }\n});\nvar StatsigStore_2 = require(\"./StatsigStore\");\nObject.defineProperty(exports, \"EvaluationReason\", {\n  enumerable: true,\n  get: function () {\n    return StatsigStore_2.EvaluationReason;\n  }\n});\nvar StatsigAsyncStorage_1 = require(\"./utils/StatsigAsyncStorage\");\nObject.defineProperty(exports, \"StatsigAsyncStorage\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(StatsigAsyncStorage_1).default;\n  }\n});\n(0, Object_entries_1.default)();\n(0, Object_fromEntries_1.default)();\n(0, Promise_finally_1.default)();\nvar Statsig = /** @class */function () {\n  function Statsig() {}\n  Object.defineProperty(Statsig, \"encodeIntializeCall\", {\n    get: function () {\n      return StatsigRuntime_1.default.encodeInitializeCall;\n    },\n    set: function (value) {\n      StatsigRuntime_1.default.encodeInitializeCall = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Statsig.initialize = function (sdkKey, user, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var inst;\n      return __generator(this, function (_b) {\n        inst = (_a = Statsig.instance) !== null && _a !== void 0 ? _a : new StatsigClient_1.default(sdkKey, user, options);\n        if (!Statsig.instance) {\n          Statsig.instance = inst;\n        }\n        return [2 /*return*/, inst.initializeAsync()];\n      });\n    });\n  };\n  Statsig.prefetchUsers = function (users) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Statsig.getClientX().prefetchUsers(users)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  Statsig.setInitializeValues = function (initializeValues) {\n    Statsig.getClientX().setInitializeValues(initializeValues);\n  };\n  Statsig.checkGate = function (gateName, ignoreOverrides) {\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return Statsig.getClientX().checkGate(gateName, ignoreOverrides);\n  };\n  Statsig.checkGateWithExposureLoggingDisabled = function (gateName, ignoreOverrides) {\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return Statsig.getClientX().checkGateWithExposureLoggingDisabled(gateName, ignoreOverrides);\n  };\n  Statsig.manuallyLogGateExposure = function (gateName) {\n    Statsig.getClientX().logGateExposure(gateName);\n  };\n  Statsig.getConfig = function (configName, ignoreOverrides) {\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return Statsig.getClientX().getConfig(configName, ignoreOverrides);\n  };\n  Statsig.getConfigWithExposureLoggingDisabled = function (configName, ignoreOverrides) {\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return Statsig.getClientX().getConfigWithExposureLoggingDisabled(configName, ignoreOverrides);\n  };\n  Statsig.manuallyLogConfigExposure = function (configName) {\n    Statsig.getClientX().logConfigExposure(configName);\n  };\n  Statsig.getExperiment = function (experimentName, keepDeviceValue, ignoreOverrides) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return Statsig.getClientX().getExperiment(experimentName, keepDeviceValue, ignoreOverrides);\n  };\n  Statsig.getExperimentWithExposureLoggingDisabled = function (experimentName, keepDeviceValue, ignoreOverrides) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return Statsig.getClientX().getExperimentWithExposureLoggingDisabled(experimentName, keepDeviceValue, ignoreOverrides);\n  };\n  Statsig.manuallyLogExperimentExposure = function (configName, keepDeviceValue) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    Statsig.getClientX().logExperimentExposure(configName, keepDeviceValue);\n  };\n  Statsig.getLayer = function (layerName, keepDeviceValue) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    return Statsig.getClientX().getLayer(layerName, keepDeviceValue);\n  };\n  Statsig.getLayerWithExposureLoggingDisabled = function (layerName, keepDeviceValue) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    return Statsig.getClientX().getLayerWithExposureLoggingDisabled(layerName, keepDeviceValue);\n  };\n  Statsig.manuallyLogLayerParameterExposure = function (layerName, parameterName, keepDeviceValue) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    Statsig.getClientX().logLayerParameterExposure(layerName, parameterName, keepDeviceValue);\n  };\n  Statsig.logEvent = function (eventName, value, metadata) {\n    if (value === void 0) {\n      value = null;\n    }\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    return Statsig.getClientX().logEvent(eventName, value, metadata);\n  };\n  Statsig.updateUser = function (user) {\n    return Statsig.getClientX().updateUser(user);\n  };\n  Statsig.shutdown = function () {\n    Statsig.getClientX().shutdown();\n    Statsig.instance = null;\n  };\n  /**\n   * Overrides the given gate locally with the given value\n   * @param gateName - name of the gate to override\n   * @param value - value to assign to the gate\n   */\n  Statsig.overrideGate = function (gateName, value) {\n    Statsig.getClientX().overrideGate(gateName, value);\n  };\n  /**\n   * Overrides the given config locally with the given value\n   * @param configName - name of the config to override\n   * @param value - value to assign to the config\n   */\n  Statsig.overrideConfig = function (configName, value) {\n    Statsig.getClientX().overrideConfig(configName, value);\n  };\n  /**\n   * Overrides the given layer locally with the given value\n   * @param layerName - name of the layer to override\n   * @param value - value to assign to the layer\n   */\n  Statsig.overrideLayer = function (layerName, value) {\n    Statsig.getClientX().overrideLayer(layerName, value);\n  };\n  /**\n   * @param name the gate override to remove. Leave this parameter empty to remove all gate overrides.\n   */\n  Statsig.removeGateOverride = function (name) {\n    Statsig.getClientX().removeGateOverride(name);\n  };\n  /**\n   * @param name the config override to remove. Leave this parameter empty to remove all config overrides.\n   */\n  Statsig.removeConfigOverride = function (name) {\n    Statsig.getClientX().removeConfigOverride(name);\n  };\n  /**\n   * @param name the layer override to remove. Leave this parameter empty to remove all layer overrides.\n   */\n  Statsig.removeLayerOverride = function (name) {\n    Statsig.getClientX().removeLayerOverride(name);\n  };\n  /**\n   * @returns The local gate and config overrides\n   */\n  Statsig.getAllOverrides = function () {\n    return Statsig.getClientX().getAllOverrides();\n  };\n  /**\n   * @returns The Statsig stable ID used for device level experiments\n   */\n  Statsig.getStableID = function () {\n    return Statsig.getClientX().getStableID();\n  };\n  /**\n   *\n   * @returns The reason and time associated with the evaluation for the current set\n   * of gates and configs\n   */\n  Statsig.getEvaluationDetails = function () {\n    var _a, _b;\n    return (_b = (_a = Statsig.instance) === null || _a === void 0 ? void 0 : _a.getEvaluationDetails()) !== null && _b !== void 0 ? _b : {\n      reason: StatsigStore_1.EvaluationReason.Uninitialized,\n      time: 0\n    };\n  };\n  /**\n   * @deprecated use removeGateOverride or removeConfigOverride\n   * @param name the gate override to remove\n   */\n  Statsig.removeOverride = function (name) {\n    Statsig.getClientX().removeOverride(name);\n  };\n  /**\n   * @deprecated use getAllOverrides\n   * @returns the gate overrides\n   */\n  Statsig.getOverrides = function () {\n    return Statsig.getClientX().getOverrides();\n  };\n  Statsig.getClientX = function () {\n    if (!Statsig.instance) {\n      throw new Errors_1.StatsigUninitializedError();\n    }\n    return Statsig.instance;\n  };\n  Statsig.instance = null;\n  return Statsig;\n}();\nexports.default = Statsig;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","StatsigAsyncStorage","EvaluationReason","StatsigClient","Layer","DynamicConfig","Errors_1","require","StatsigClient_1","StatsigRuntime_1","StatsigStore_1","Object_entries_1","Object_fromEntries_1","Promise_finally_1","DynamicConfig_1","enumerable","get","default","Layer_1","StatsigClient_2","StatsigStore_2","StatsigAsyncStorage_1","Statsig","encodeInitializeCall","set","configurable","initialize","sdkKey","user","options","_a","inst","_b","instance","initializeAsync","prefetchUsers","users","getClientX","setInitializeValues","initializeValues","checkGate","gateName","ignoreOverrides","checkGateWithExposureLoggingDisabled","manuallyLogGateExposure","logGateExposure","getConfig","configName","getConfigWithExposureLoggingDisabled","manuallyLogConfigExposure","logConfigExposure","getExperiment","experimentName","keepDeviceValue","getExperimentWithExposureLoggingDisabled","manuallyLogExperimentExposure","logExperimentExposure","getLayer","layerName","getLayerWithExposureLoggingDisabled","manuallyLogLayerParameterExposure","parameterName","logLayerParameterExposure","logEvent","eventName","metadata","updateUser","shutdown","overrideGate","overrideConfig","overrideLayer","removeGateOverride","name","removeConfigOverride","removeLayerOverride","getAllOverrides","getStableID","getEvaluationDetails","reason","Uninitialized","time","removeOverride","getOverrides","StatsigUninitializedError"],"sources":["/home/diep/freelance/interface/node_modules/statsig-js/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatsigAsyncStorage = exports.EvaluationReason = exports.StatsigClient = exports.Layer = exports.DynamicConfig = void 0;\nvar Errors_1 = require(\"./Errors\");\nvar StatsigClient_1 = __importDefault(require(\"./StatsigClient\"));\nvar StatsigRuntime_1 = __importDefault(require(\"./StatsigRuntime\"));\nvar StatsigStore_1 = require(\"./StatsigStore\");\nvar Object_entries_1 = __importDefault(require(\"./utils/Object.entries\"));\nvar Object_fromEntries_1 = __importDefault(require(\"./utils/Object.fromEntries\"));\nvar Promise_finally_1 = __importDefault(require(\"./utils/Promise.finally\"));\nvar DynamicConfig_1 = require(\"./DynamicConfig\");\nObject.defineProperty(exports, \"DynamicConfig\", { enumerable: true, get: function () { return __importDefault(DynamicConfig_1).default; } });\nvar Layer_1 = require(\"./Layer\");\nObject.defineProperty(exports, \"Layer\", { enumerable: true, get: function () { return __importDefault(Layer_1).default; } });\nvar StatsigClient_2 = require(\"./StatsigClient\");\nObject.defineProperty(exports, \"StatsigClient\", { enumerable: true, get: function () { return __importDefault(StatsigClient_2).default; } });\nvar StatsigStore_2 = require(\"./StatsigStore\");\nObject.defineProperty(exports, \"EvaluationReason\", { enumerable: true, get: function () { return StatsigStore_2.EvaluationReason; } });\nvar StatsigAsyncStorage_1 = require(\"./utils/StatsigAsyncStorage\");\nObject.defineProperty(exports, \"StatsigAsyncStorage\", { enumerable: true, get: function () { return __importDefault(StatsigAsyncStorage_1).default; } });\n(0, Object_entries_1.default)();\n(0, Object_fromEntries_1.default)();\n(0, Promise_finally_1.default)();\nvar Statsig = /** @class */ (function () {\n    function Statsig() {\n    }\n    Object.defineProperty(Statsig, \"encodeIntializeCall\", {\n        get: function () {\n            return StatsigRuntime_1.default.encodeInitializeCall;\n        },\n        set: function (value) {\n            StatsigRuntime_1.default.encodeInitializeCall = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Statsig.initialize = function (sdkKey, user, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var inst;\n            return __generator(this, function (_b) {\n                inst = (_a = Statsig.instance) !== null && _a !== void 0 ? _a : new StatsigClient_1.default(sdkKey, user, options);\n                if (!Statsig.instance) {\n                    Statsig.instance = inst;\n                }\n                return [2 /*return*/, inst.initializeAsync()];\n            });\n        });\n    };\n    Statsig.prefetchUsers = function (users) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Statsig.getClientX().prefetchUsers(users)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Statsig.setInitializeValues = function (initializeValues) {\n        Statsig.getClientX().setInitializeValues(initializeValues);\n    };\n    Statsig.checkGate = function (gateName, ignoreOverrides) {\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return Statsig.getClientX().checkGate(gateName, ignoreOverrides);\n    };\n    Statsig.checkGateWithExposureLoggingDisabled = function (gateName, ignoreOverrides) {\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return Statsig.getClientX().checkGateWithExposureLoggingDisabled(gateName, ignoreOverrides);\n    };\n    Statsig.manuallyLogGateExposure = function (gateName) {\n        Statsig.getClientX().logGateExposure(gateName);\n    };\n    Statsig.getConfig = function (configName, ignoreOverrides) {\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return Statsig.getClientX().getConfig(configName, ignoreOverrides);\n    };\n    Statsig.getConfigWithExposureLoggingDisabled = function (configName, ignoreOverrides) {\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return Statsig.getClientX().getConfigWithExposureLoggingDisabled(configName, ignoreOverrides);\n    };\n    Statsig.manuallyLogConfigExposure = function (configName) {\n        Statsig.getClientX().logConfigExposure(configName);\n    };\n    Statsig.getExperiment = function (experimentName, keepDeviceValue, ignoreOverrides) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return Statsig.getClientX().getExperiment(experimentName, keepDeviceValue, ignoreOverrides);\n    };\n    Statsig.getExperimentWithExposureLoggingDisabled = function (experimentName, keepDeviceValue, ignoreOverrides) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return Statsig.getClientX().getExperimentWithExposureLoggingDisabled(experimentName, keepDeviceValue, ignoreOverrides);\n    };\n    Statsig.manuallyLogExperimentExposure = function (configName, keepDeviceValue) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        Statsig.getClientX().logExperimentExposure(configName, keepDeviceValue);\n    };\n    Statsig.getLayer = function (layerName, keepDeviceValue) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        return Statsig.getClientX().getLayer(layerName, keepDeviceValue);\n    };\n    Statsig.getLayerWithExposureLoggingDisabled = function (layerName, keepDeviceValue) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        return Statsig.getClientX().getLayerWithExposureLoggingDisabled(layerName, keepDeviceValue);\n    };\n    Statsig.manuallyLogLayerParameterExposure = function (layerName, parameterName, keepDeviceValue) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        Statsig.getClientX().logLayerParameterExposure(layerName, parameterName, keepDeviceValue);\n    };\n    Statsig.logEvent = function (eventName, value, metadata) {\n        if (value === void 0) { value = null; }\n        if (metadata === void 0) { metadata = null; }\n        return Statsig.getClientX().logEvent(eventName, value, metadata);\n    };\n    Statsig.updateUser = function (user) {\n        return Statsig.getClientX().updateUser(user);\n    };\n    Statsig.shutdown = function () {\n        Statsig.getClientX().shutdown();\n        Statsig.instance = null;\n    };\n    /**\n     * Overrides the given gate locally with the given value\n     * @param gateName - name of the gate to override\n     * @param value - value to assign to the gate\n     */\n    Statsig.overrideGate = function (gateName, value) {\n        Statsig.getClientX().overrideGate(gateName, value);\n    };\n    /**\n     * Overrides the given config locally with the given value\n     * @param configName - name of the config to override\n     * @param value - value to assign to the config\n     */\n    Statsig.overrideConfig = function (configName, value) {\n        Statsig.getClientX().overrideConfig(configName, value);\n    };\n    /**\n     * Overrides the given layer locally with the given value\n     * @param layerName - name of the layer to override\n     * @param value - value to assign to the layer\n     */\n    Statsig.overrideLayer = function (layerName, value) {\n        Statsig.getClientX().overrideLayer(layerName, value);\n    };\n    /**\n     * @param name the gate override to remove. Leave this parameter empty to remove all gate overrides.\n     */\n    Statsig.removeGateOverride = function (name) {\n        Statsig.getClientX().removeGateOverride(name);\n    };\n    /**\n     * @param name the config override to remove. Leave this parameter empty to remove all config overrides.\n     */\n    Statsig.removeConfigOverride = function (name) {\n        Statsig.getClientX().removeConfigOverride(name);\n    };\n    /**\n     * @param name the layer override to remove. Leave this parameter empty to remove all layer overrides.\n     */\n    Statsig.removeLayerOverride = function (name) {\n        Statsig.getClientX().removeLayerOverride(name);\n    };\n    /**\n     * @returns The local gate and config overrides\n     */\n    Statsig.getAllOverrides = function () {\n        return Statsig.getClientX().getAllOverrides();\n    };\n    /**\n     * @returns The Statsig stable ID used for device level experiments\n     */\n    Statsig.getStableID = function () {\n        return Statsig.getClientX().getStableID();\n    };\n    /**\n     *\n     * @returns The reason and time associated with the evaluation for the current set\n     * of gates and configs\n     */\n    Statsig.getEvaluationDetails = function () {\n        var _a, _b;\n        return ((_b = (_a = Statsig.instance) === null || _a === void 0 ? void 0 : _a.getEvaluationDetails()) !== null && _b !== void 0 ? _b : {\n            reason: StatsigStore_1.EvaluationReason.Uninitialized,\n            time: 0,\n        });\n    };\n    /**\n     * @deprecated use removeGateOverride or removeConfigOverride\n     * @param name the gate override to remove\n     */\n    Statsig.removeOverride = function (name) {\n        Statsig.getClientX().removeOverride(name);\n    };\n    /**\n     * @deprecated use getAllOverrides\n     * @returns the gate overrides\n     */\n    Statsig.getOverrides = function () {\n        return Statsig.getClientX().getOverrides();\n    };\n    Statsig.getClientX = function () {\n        if (!Statsig.instance) {\n            throw new Errors_1.StatsigUninitializedError();\n        }\n        return Statsig.instance;\n    };\n    Statsig.instance = null;\n    return Statsig;\n}());\nexports.default = Statsig;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}