{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query/react';\nimport { load, save } from 'redux-localstorage-simple';\nimport { isTestEnv } from 'utils/env';\nimport { updateVersion } from './global/actions';\nimport { sentryEnhancer } from './logging';\nimport reducer from './reducer';\nimport { routingApi } from './routing/slice';\nconst PERSISTED_KEYS = ['user', 'transactions', 'lists'];\nconst store = configureStore({\n  reducer,\n  enhancers: defaultEnhancers => defaultEnhancers.concat(sentryEnhancer),\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: true\n  }).concat(routingApi.middleware).concat(save({\n    states: PERSISTED_KEYS,\n    debounce: 1000\n  })),\n  preloadedState: load({\n    states: PERSISTED_KEYS,\n    disableWarnings: isTestEnv()\n  })\n});\nstore.dispatch(updateVersion());\nsetupListeners(store.dispatch);\nexport default store;","map":{"version":3,"names":["configureStore","setupListeners","load","save","isTestEnv","updateVersion","sentryEnhancer","reducer","routingApi","PERSISTED_KEYS","store","enhancers","defaultEnhancers","concat","middleware","getDefaultMiddleware","thunk","states","debounce","preloadedState","disableWarnings","dispatch"],"sources":["/home/diep/freelance/interface/src/state/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query/react'\nimport { load, save } from 'redux-localstorage-simple'\nimport { isTestEnv } from 'utils/env'\n\nimport { updateVersion } from './global/actions'\nimport { sentryEnhancer } from './logging'\nimport reducer from './reducer'\nimport { routingApi } from './routing/slice'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  reducer,\n  enhancers: (defaultEnhancers) => defaultEnhancers.concat(sentryEnhancer),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ thunk: true })\n      .concat(routingApi.middleware)\n      .concat(save({ states: PERSISTED_KEYS, debounce: 1000 })),\n  preloadedState: load({ states: PERSISTED_KEYS, disableWarnings: isTestEnv() }),\n})\n\nstore.dispatch(updateVersion())\n\nsetupListeners(store.dispatch)\n\nexport default store\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,IAAI,EAAEC,IAAI,QAAQ,2BAA2B;AACtD,SAASC,SAAS,QAAQ,WAAW;AAErC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,cAAc,QAAQ,WAAW;AAC1C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,MAAMC,cAAwB,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,OAAO,CAAC;AAElE,MAAMC,KAAK,GAAGV,cAAc,CAAC;EAC3BO,OAAO;EACPI,SAAS,EAAGC,gBAAgB,IAAKA,gBAAgB,CAACC,MAAM,CAACP,cAAc,CAAC;EACxEQ,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC,CAClCH,MAAM,CAACL,UAAU,CAACM,UAAU,CAAC,CAC7BD,MAAM,CAACV,IAAI,CAAC;IAAEc,MAAM,EAAER,cAAc;IAAES,QAAQ,EAAE;EAAK,CAAC,CAAC,CAAC;EAC7DC,cAAc,EAAEjB,IAAI,CAAC;IAAEe,MAAM,EAAER,cAAc;IAAEW,eAAe,EAAEhB,SAAS;EAAG,CAAC;AAC/E,CAAC,CAAC;AAEFM,KAAK,CAACW,QAAQ,CAAChB,aAAa,EAAE,CAAC;AAE/BJ,cAAc,CAACS,KAAK,CAACW,QAAQ,CAAC;AAE9B,eAAeX,KAAK"},"metadata":{},"sourceType":"module"}