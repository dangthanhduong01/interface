{"ast":null,"code":"import bnbCircleLogoUrl from \"assets/images/bnbCircle.svg\";\nimport celoCircleLogoUrl from 'assets/images/celoCircle.png';\nimport ethereumLogoUrl from 'assets/images/ethereum-logo.png';\nimport polygonCircleLogoUrl from 'assets/images/polygonCircle.png';\nimport { default as arbitrumCircleLogoUrl } from \"assets/svg/arbitrum_logo.svg\";\nimport { default as arbitrumLogoUrl } from \"assets/svg/arbitrum_logo.svg\";\nimport bnbSquareLogoUrl from \"assets/svg/bnb_square_logo.svg\";\nimport bnbLogo from \"assets/svg/bnb-logo.svg\";\nimport celoLogo from \"assets/svg/celo_logo.svg\";\nimport celoSquareLogoUrl from \"assets/svg/celo_square_logo.svg\";\nimport optimismSquareLogoUrl from \"assets/svg/optimism_square_logo.svg\";\nimport optimismLogoUrl from \"assets/svg/optimistic_ethereum.svg\";\nimport polygonSquareLogoUrl from \"assets/svg/polygon_square_logo.svg\";\nimport polygonMaticLogo from \"assets/svg/polygon-matic-logo.svg\";\nimport { SupportedChainId } from 'constants/chains';\nimport { darkTheme } from 'theme/colors';\nimport { ARBITRUM_LIST, CELO_LIST, OPTIMISM_LIST, PLASMA_BNB_LIST, TRUSTKEY_LIST } from './lists';\nexport const AVERAGE_L1_BLOCK_TIME = 12000;\nexport let NetworkType;\n(function (NetworkType) {\n  NetworkType[NetworkType[\"L1\"] = 0] = \"L1\";\n  NetworkType[NetworkType[\"L2\"] = 1] = \"L2\";\n})(NetworkType || (NetworkType = {}));\nconst CHAIN_INFO = {\n  [SupportedChainId.MAINNET]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Ethereum',\n    logoUrl: ethereumLogoUrl,\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    color: darkTheme.chain_1\n  },\n  [SupportedChainId.GOERLI]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://goerli.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Görli',\n    logoUrl: ethereumLogoUrl,\n    nativeCurrency: {\n      name: 'Görli Ether',\n      symbol: 'görETH',\n      decimals: 18\n    },\n    color: darkTheme.chain_5\n  },\n  [SupportedChainId.OPTIMISM]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 1500000,\n    bridge: 'https://app.optimism.io/bridge',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimism',\n    logoUrl: optimismLogoUrl,\n    // Optimism perfers same icon for both\n    circleLogoUrl: optimismLogoUrl,\n    squareLogoUrl: optimismSquareLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    color: darkTheme.chain_10,\n    backgroundColor: darkTheme.chain_10_background\n  },\n  [SupportedChainId.OPTIMISM_GOERLI]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 1500000,\n    bridge: 'https://app.optimism.io/bridge',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://goerli-optimism.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimism Görli',\n    logoUrl: optimismLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    nativeCurrency: {\n      name: 'Optimism Goerli Ether',\n      symbol: 'görOpETH',\n      decimals: 18\n    },\n    color: darkTheme.chain_420\n  },\n  [SupportedChainId.ARBITRUM_ONE]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://arbiscan.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum',\n    label: 'Arbitrum',\n    logoUrl: arbitrumLogoUrl,\n    circleLogoUrl: arbitrumCircleLogoUrl,\n    defaultListUrl: ARBITRUM_LIST,\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    color: darkTheme.chain_42,\n    backgroundColor: darkTheme.chain_42161_background\n  },\n  [SupportedChainId.ARBITRUM_GOERLI]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://goerli.arbiscan.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum/',\n    label: 'Arbitrum Goerli',\n    logoUrl: arbitrumLogoUrl,\n    defaultListUrl: ARBITRUM_LIST,\n    // TODO: use arbitrum goerli token list\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    nativeCurrency: {\n      name: 'Goerli Arbitrum Ether',\n      symbol: 'goerliArbETH',\n      decimals: 18\n    },\n    color: darkTheme.chain_421613\n  },\n  [SupportedChainId.POLYGON]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://wallet.polygon.technology/login',\n    docs: 'https://polygon.io/',\n    explorer: 'https://polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon',\n    logoUrl: polygonMaticLogo,\n    circleLogoUrl: polygonCircleLogoUrl,\n    squareLogoUrl: polygonSquareLogoUrl,\n    nativeCurrency: {\n      name: 'Polygon Matic',\n      symbol: 'MATIC',\n      decimals: 18\n    },\n    color: darkTheme.chain_137,\n    backgroundColor: darkTheme.chain_137_background\n  },\n  [SupportedChainId.POLYGON_MUMBAI]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://wallet.polygon.technology/bridge',\n    docs: 'https://polygon.io/',\n    explorer: 'https://mumbai.polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon Mumbai',\n    logoUrl: polygonMaticLogo,\n    nativeCurrency: {\n      name: 'Polygon Mumbai Matic',\n      symbol: 'mMATIC',\n      decimals: 18\n    }\n  },\n  [SupportedChainId.CELO]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://www.portalbridge.com/#/transfer',\n    docs: 'https://docs.celo.org/',\n    explorer: 'https://celoscan.io/',\n    infoLink: 'https://info.uniswap.org/#/celo/',\n    label: 'Celo',\n    logoUrl: celoLogo,\n    circleLogoUrl: celoCircleLogoUrl,\n    squareLogoUrl: celoSquareLogoUrl,\n    nativeCurrency: {\n      name: 'Celo',\n      symbol: 'CELO',\n      decimals: 18\n    },\n    defaultListUrl: CELO_LIST\n  },\n  [SupportedChainId.CELO_ALFAJORES]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://www.portalbridge.com/#/transfer',\n    docs: 'https://docs.celo.org/',\n    explorer: 'https://alfajores-blockscout.celo-testnet.org/',\n    infoLink: 'https://info.uniswap.org/#/celo/',\n    label: 'Celo Alfajores',\n    logoUrl: celoLogo,\n    nativeCurrency: {\n      name: 'Celo',\n      symbol: 'CELO',\n      decimals: 18\n    },\n    defaultListUrl: CELO_LIST\n  },\n  [SupportedChainId.BNB]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://cbridge.celer.network/1/56',\n    docs: 'https://docs.bnbchain.org/',\n    explorer: 'https://bscscan.com/',\n    infoLink: 'https://info.uniswap.org/#/bnb/',\n    label: 'BNB Chain',\n    logoUrl: bnbLogo,\n    circleLogoUrl: bnbCircleLogoUrl,\n    squareLogoUrl: bnbSquareLogoUrl,\n    nativeCurrency: {\n      name: 'BNB',\n      symbol: 'BNB',\n      decimals: 18\n    },\n    defaultListUrl: PLASMA_BNB_LIST,\n    color: darkTheme.chain_56,\n    backgroundColor: darkTheme.chain_56_background\n  },\n  [SupportedChainId.TRUSTKEY]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    docs: 'https://docs.bnbchain.org/',\n    explorer: 'https://l1testnetscan.trustkeys.network',\n    infoLink: 'https://info.uniswap.org/#/bnb/',\n    label: 'TrustkeyChain',\n    logoUrl: bnbLogo,\n    defaultListUrl: TRUSTKEY_LIST,\n    nativeCurrency: {\n      name: 'TRUSTK',\n      symbol: 'TRUSTK',\n      decimals: 18\n    },\n    color: darkTheme.chain_56,\n    backgroundColor: darkTheme.chain_56_background\n  }\n};\n/**\n * Overloaded method for returning ChainInfo given a chainID\n * Return type varies depending on input type:\n * number | undefined -> returns chaininfo | undefined\n * SupportedChainId -> returns L1ChainInfo | L2ChainInfo\n * SupportedL1ChainId -> returns L1ChainInfo\n * SupportedL2ChainId -> returns L2ChainInfo\n */\nexport function getChainInfo(chainId) {\n  if (chainId) {\n    var _CHAIN_INFO$chainId;\n    return (_CHAIN_INFO$chainId = CHAIN_INFO[chainId]) !== null && _CHAIN_INFO$chainId !== void 0 ? _CHAIN_INFO$chainId : undefined;\n  }\n  return undefined;\n}\nconst MAINNET_INFO = CHAIN_INFO[SupportedChainId.MAINNET];\nexport function getChainInfoOrDefault(chainId) {\n  var _getChainInfo;\n  return (_getChainInfo = getChainInfo(chainId)) !== null && _getChainInfo !== void 0 ? _getChainInfo : MAINNET_INFO;\n}","map":{"version":3,"names":["celoCircleLogoUrl","ethereumLogoUrl","polygonCircleLogoUrl","SupportedChainId","darkTheme","ARBITRUM_LIST","CELO_LIST","OPTIMISM_LIST","PLASMA_BNB_LIST","TRUSTKEY_LIST","AVERAGE_L1_BLOCK_TIME","NetworkType","CHAIN_INFO","MAINNET","networkType","L1","docs","explorer","infoLink","label","logoUrl","nativeCurrency","name","symbol","decimals","color","chain_1","GOERLI","chain_5","OPTIMISM","L2","blockWaitMsBeforeWarning","bridge","defaultListUrl","optimismLogoUrl","circleLogoUrl","squareLogoUrl","optimismSquareLogoUrl","statusPage","helpCenterUrl","chain_10","backgroundColor","chain_10_background","OPTIMISM_GOERLI","chain_420","ARBITRUM_ONE","arbitrumLogoUrl","arbitrumCircleLogoUrl","chain_42","chain_42161_background","ARBITRUM_GOERLI","chain_421613","POLYGON","polygonMaticLogo","polygonSquareLogoUrl","chain_137","chain_137_background","POLYGON_MUMBAI","CELO","celoLogo","celoSquareLogoUrl","CELO_ALFAJORES","BNB","bnbLogo","bnbCircleLogoUrl","bnbSquareLogoUrl","chain_56","chain_56_background","TRUSTKEY","getChainInfo","chainId","undefined","MAINNET_INFO","getChainInfoOrDefault"],"sources":["/home/diep/freelance/interface/src/constants/chainInfo.ts"],"sourcesContent":["import bnbCircleLogoUrl from 'assets/images/bnbCircle.svg'\nimport celoCircleLogoUrl from 'assets/images/celoCircle.png'\nimport ethereumLogoUrl from 'assets/images/ethereum-logo.png'\nimport polygonCircleLogoUrl from 'assets/images/polygonCircle.png'\nimport { default as arbitrumCircleLogoUrl, default as arbitrumLogoUrl } from 'assets/svg/arbitrum_logo.svg'\nimport bnbSquareLogoUrl from 'assets/svg/bnb_square_logo.svg'\nimport bnbLogo from 'assets/svg/bnb-logo.svg'\nimport celoLogo from 'assets/svg/celo_logo.svg'\nimport celoSquareLogoUrl from 'assets/svg/celo_square_logo.svg'\nimport optimismSquareLogoUrl from 'assets/svg/optimism_square_logo.svg'\nimport optimismLogoUrl from 'assets/svg/optimistic_ethereum.svg'\nimport polygonSquareLogoUrl from 'assets/svg/polygon_square_logo.svg'\nimport polygonMaticLogo from 'assets/svg/polygon-matic-logo.svg'\nimport { SupportedChainId } from 'constants/chains'\nimport ms from 'ms.macro'\nimport { darkTheme } from 'theme/colors'\n\nimport { SupportedL1ChainId, SupportedL2ChainId } from './chains'\nimport { ARBITRUM_LIST, CELO_LIST, OPTIMISM_LIST, PLASMA_BNB_LIST, TRUSTKEY_LIST } from './lists'\n\nexport const AVERAGE_L1_BLOCK_TIME = ms`12s`\n\nexport enum NetworkType {\n  L1,\n  L2,\n}\ninterface BaseChainInfo {\n  readonly networkType: NetworkType\n  readonly blockWaitMsBeforeWarning?: number\n  readonly docs: string\n  readonly bridge?: string\n  readonly explorer: string\n  readonly infoLink: string\n  readonly logoUrl: string\n  readonly circleLogoUrl?: string\n  readonly squareLogoUrl?: string\n  readonly label: string\n  readonly helpCenterUrl?: string\n  readonly nativeCurrency: {\n    name: string // e.g. 'Goerli ETH',\n    symbol: string // e.g. 'gorETH',\n    decimals: number // e.g. 18,\n  }\n  readonly color?: string\n  readonly backgroundColor?: string\n}\n\ninterface L1ChainInfo extends BaseChainInfo {\n  readonly networkType: NetworkType.L1\n  readonly defaultListUrl?: string\n}\n\nexport interface L2ChainInfo extends BaseChainInfo {\n  readonly networkType: NetworkType.L2\n  readonly bridge: string\n  readonly statusPage?: string\n  readonly defaultListUrl: string\n}\n\ntype ChainInfoMap = { readonly [chainId: number]: L1ChainInfo | L2ChainInfo } & {\n  readonly [chainId in SupportedL2ChainId]: L2ChainInfo\n} & { readonly [chainId in SupportedL1ChainId]: L1ChainInfo }\n\nconst CHAIN_INFO: ChainInfoMap = {\n  [SupportedChainId.MAINNET]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Ethereum',\n    logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    color: darkTheme.chain_1,\n  },\n  [SupportedChainId.GOERLI]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://goerli.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Görli',\n    logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'Görli Ether', symbol: 'görETH', decimals: 18 },\n    color: darkTheme.chain_5,\n  },\n  [SupportedChainId.OPTIMISM]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`25m`,\n    bridge: 'https://app.optimism.io/bridge',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimism',\n    logoUrl: optimismLogoUrl,\n    // Optimism perfers same icon for both\n    circleLogoUrl: optimismLogoUrl,\n    squareLogoUrl: optimismSquareLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    color: darkTheme.chain_10,\n    backgroundColor: darkTheme.chain_10_background,\n  },\n  [SupportedChainId.OPTIMISM_GOERLI]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`25m`,\n    bridge: 'https://app.optimism.io/bridge',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://goerli-optimism.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimism Görli',\n    logoUrl: optimismLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    nativeCurrency: { name: 'Optimism Goerli Ether', symbol: 'görOpETH', decimals: 18 },\n    color: darkTheme.chain_420,\n  },\n  [SupportedChainId.ARBITRUM_ONE]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://arbiscan.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum',\n    label: 'Arbitrum',\n    logoUrl: arbitrumLogoUrl,\n    circleLogoUrl: arbitrumCircleLogoUrl,\n    defaultListUrl: ARBITRUM_LIST,\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    color: darkTheme.chain_42,\n    backgroundColor: darkTheme.chain_42161_background,\n  },\n  [SupportedChainId.ARBITRUM_GOERLI]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://goerli.arbiscan.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum/',\n    label: 'Arbitrum Goerli',\n    logoUrl: arbitrumLogoUrl,\n    defaultListUrl: ARBITRUM_LIST, // TODO: use arbitrum goerli token list\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    nativeCurrency: { name: 'Goerli Arbitrum Ether', symbol: 'goerliArbETH', decimals: 18 },\n    color: darkTheme.chain_421613,\n  },\n  [SupportedChainId.POLYGON]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://wallet.polygon.technology/login',\n    docs: 'https://polygon.io/',\n    explorer: 'https://polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon',\n    logoUrl: polygonMaticLogo,\n    circleLogoUrl: polygonCircleLogoUrl,\n    squareLogoUrl: polygonSquareLogoUrl,\n    nativeCurrency: { name: 'Polygon Matic', symbol: 'MATIC', decimals: 18 },\n    color: darkTheme.chain_137,\n    backgroundColor: darkTheme.chain_137_background,\n  },\n  [SupportedChainId.POLYGON_MUMBAI]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://wallet.polygon.technology/bridge',\n    docs: 'https://polygon.io/',\n    explorer: 'https://mumbai.polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon Mumbai',\n    logoUrl: polygonMaticLogo,\n    nativeCurrency: { name: 'Polygon Mumbai Matic', symbol: 'mMATIC', decimals: 18 },\n  },\n  [SupportedChainId.CELO]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://www.portalbridge.com/#/transfer',\n    docs: 'https://docs.celo.org/',\n    explorer: 'https://celoscan.io/',\n    infoLink: 'https://info.uniswap.org/#/celo/',\n    label: 'Celo',\n    logoUrl: celoLogo,\n    circleLogoUrl: celoCircleLogoUrl,\n    squareLogoUrl: celoSquareLogoUrl,\n    nativeCurrency: { name: 'Celo', symbol: 'CELO', decimals: 18 },\n    defaultListUrl: CELO_LIST,\n  },\n  [SupportedChainId.CELO_ALFAJORES]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://www.portalbridge.com/#/transfer',\n    docs: 'https://docs.celo.org/',\n    explorer: 'https://alfajores-blockscout.celo-testnet.org/',\n    infoLink: 'https://info.uniswap.org/#/celo/',\n    label: 'Celo Alfajores',\n    logoUrl: celoLogo,\n    nativeCurrency: { name: 'Celo', symbol: 'CELO', decimals: 18 },\n    defaultListUrl: CELO_LIST,\n  },\n  [SupportedChainId.BNB]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://cbridge.celer.network/1/56',\n    docs: 'https://docs.bnbchain.org/',\n    explorer: 'https://bscscan.com/',\n    infoLink: 'https://info.uniswap.org/#/bnb/',\n    label: 'BNB Chain',\n    logoUrl: bnbLogo,\n    circleLogoUrl: bnbCircleLogoUrl,\n    squareLogoUrl: bnbSquareLogoUrl,\n    nativeCurrency: { name: 'BNB', symbol: 'BNB', decimals: 18 },\n    defaultListUrl: PLASMA_BNB_LIST,\n    color: darkTheme.chain_56,\n    backgroundColor: darkTheme.chain_56_background,\n  },\n  [SupportedChainId.TRUSTKEY]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    docs: 'https://docs.bnbchain.org/',\n    explorer: 'https://l1testnetscan.trustkeys.network',\n    infoLink: 'https://info.uniswap.org/#/bnb/',\n    label: 'TrustkeyChain',\n    logoUrl: bnbLogo,\n    defaultListUrl: TRUSTKEY_LIST,\n    nativeCurrency: { name: 'TRUSTK', symbol: 'TRUSTK', decimals: 18 },\n    color: darkTheme.chain_56,\n    backgroundColor: darkTheme.chain_56_background,\n  },\n}\n\nexport function getChainInfo(chainId: SupportedL1ChainId): L1ChainInfo\nexport function getChainInfo(chainId: SupportedL2ChainId): L2ChainInfo\nexport function getChainInfo(chainId: SupportedChainId): L1ChainInfo | L2ChainInfo\nexport function getChainInfo(\n  chainId: SupportedChainId | SupportedL1ChainId | SupportedL2ChainId | number | undefined\n): L1ChainInfo | L2ChainInfo | undefined\n\n/**\n * Overloaded method for returning ChainInfo given a chainID\n * Return type varies depending on input type:\n * number | undefined -> returns chaininfo | undefined\n * SupportedChainId -> returns L1ChainInfo | L2ChainInfo\n * SupportedL1ChainId -> returns L1ChainInfo\n * SupportedL2ChainId -> returns L2ChainInfo\n */\nexport function getChainInfo(chainId: any): any {\n  if (chainId) {\n    return CHAIN_INFO[chainId] ?? undefined\n  }\n  return undefined\n}\n\nconst MAINNET_INFO = CHAIN_INFO[SupportedChainId.MAINNET]\nexport function getChainInfoOrDefault(chainId: number | undefined) {\n  return getChainInfo(chainId) ?? MAINNET_INFO\n}\n"],"mappings":";AACA,OAAOA,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,oBAAoB,MAAM,iCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUlE,SAASC,gBAAgB,QAAQ,kBAAkB;AAEnD,SAASC,SAAS,QAAQ,cAAc;AAGxC,SAASC,aAAa,EAAEC,SAAS,EAAEC,aAAa,EAAEC,eAAe,EAAEC,aAAa,QAAQ,SAAS;AAEjG,OAAO,MAAMC,qBAAqB,QAAU;AAE5C,WAAYC,WAAW;AAGtB,WAHWA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;AAAA,GAAXA,WAAW,KAAXA,WAAW;AAyCvB,MAAMC,UAAwB,GAAG;EAC/B,CAACT,gBAAgB,CAACU,OAAO,GAAG;IAC1BC,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BC,IAAI,EAAE,2BAA2B;IACjCC,QAAQ,EAAE,uBAAuB;IACjCC,QAAQ,EAAE,6BAA6B;IACvCC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAEnB,eAAe;IACxBoB,cAAc,EAAE;MAAEC,IAAI,EAAE,OAAO;MAAEC,MAAM,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAC9DC,KAAK,EAAErB,SAAS,CAACsB;EACnB,CAAC;EACD,CAACvB,gBAAgB,CAACwB,MAAM,GAAG;IACzBb,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BC,IAAI,EAAE,2BAA2B;IACjCC,QAAQ,EAAE,8BAA8B;IACxCC,QAAQ,EAAE,6BAA6B;IACvCC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAEnB,eAAe;IACxBoB,cAAc,EAAE;MAAEC,IAAI,EAAE,aAAa;MAAEC,MAAM,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAG,CAAC;IACvEC,KAAK,EAAErB,SAAS,CAACwB;EACnB,CAAC;EACD,CAACzB,gBAAgB,CAAC0B,QAAQ,GAAG;IAC3Bf,WAAW,EAAEH,WAAW,CAACmB,EAAE;IAC3BC,wBAAwB,SAAS;IACjCC,MAAM,EAAE,gCAAgC;IACxCC,cAAc,EAAE1B,aAAa;IAC7BS,IAAI,EAAE,sBAAsB;IAC5BC,QAAQ,EAAE,kCAAkC;IAC5CC,QAAQ,EAAE,sCAAsC;IAChDC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAEc,eAAe;IACxB;IACAC,aAAa,EAAED,eAAe;IAC9BE,aAAa,EAAEC,qBAAqB;IACpCC,UAAU,EAAE,4BAA4B;IACxCC,aAAa,EAAE,mFAAmF;IAClGlB,cAAc,EAAE;MAAEC,IAAI,EAAE,OAAO;MAAEC,MAAM,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAC9DC,KAAK,EAAErB,SAAS,CAACoC,QAAQ;IACzBC,eAAe,EAAErC,SAAS,CAACsC;EAC7B,CAAC;EACD,CAACvC,gBAAgB,CAACwC,eAAe,GAAG;IAClC7B,WAAW,EAAEH,WAAW,CAACmB,EAAE;IAC3BC,wBAAwB,SAAS;IACjCC,MAAM,EAAE,gCAAgC;IACxCC,cAAc,EAAE1B,aAAa;IAC7BS,IAAI,EAAE,sBAAsB;IAC5BC,QAAQ,EAAE,uCAAuC;IACjDC,QAAQ,EAAE,sCAAsC;IAChDC,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAEc,eAAe;IACxBI,UAAU,EAAE,4BAA4B;IACxCC,aAAa,EAAE,mFAAmF;IAClGlB,cAAc,EAAE;MAAEC,IAAI,EAAE,uBAAuB;MAAEC,MAAM,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAG,CAAC;IACnFC,KAAK,EAAErB,SAAS,CAACwC;EACnB,CAAC;EACD,CAACzC,gBAAgB,CAAC0C,YAAY,GAAG;IAC/B/B,WAAW,EAAEH,WAAW,CAACmB,EAAE;IAC3BC,wBAAwB,QAAS;IACjCC,MAAM,EAAE,6BAA6B;IACrChB,IAAI,EAAE,2BAA2B;IACjCC,QAAQ,EAAE,sBAAsB;IAChCC,QAAQ,EAAE,qCAAqC;IAC/CC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAE0B,eAAe;IACxBX,aAAa,EAAEY,qBAAqB;IACpCd,cAAc,EAAE5B,aAAa;IAC7BkC,aAAa,EAAE,qEAAqE;IACpFlB,cAAc,EAAE;MAAEC,IAAI,EAAE,OAAO;MAAEC,MAAM,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAC9DC,KAAK,EAAErB,SAAS,CAAC4C,QAAQ;IACzBP,eAAe,EAAErC,SAAS,CAAC6C;EAC7B,CAAC;EACD,CAAC9C,gBAAgB,CAAC+C,eAAe,GAAG;IAClCpC,WAAW,EAAEH,WAAW,CAACmB,EAAE;IAC3BC,wBAAwB,QAAS;IACjCC,MAAM,EAAE,6BAA6B;IACrChB,IAAI,EAAE,2BAA2B;IACjCC,QAAQ,EAAE,6BAA6B;IACvCC,QAAQ,EAAE,sCAAsC;IAChDC,KAAK,EAAE,iBAAiB;IACxBC,OAAO,EAAE0B,eAAe;IACxBb,cAAc,EAAE5B,aAAa;IAAE;IAC/BkC,aAAa,EAAE,qEAAqE;IACpFlB,cAAc,EAAE;MAAEC,IAAI,EAAE,uBAAuB;MAAEC,MAAM,EAAE,cAAc;MAAEC,QAAQ,EAAE;IAAG,CAAC;IACvFC,KAAK,EAAErB,SAAS,CAAC+C;EACnB,CAAC;EACD,CAAChD,gBAAgB,CAACiD,OAAO,GAAG;IAC1BtC,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BgB,wBAAwB,QAAS;IACjCC,MAAM,EAAE,yCAAyC;IACjDhB,IAAI,EAAE,qBAAqB;IAC3BC,QAAQ,EAAE,0BAA0B;IACpCC,QAAQ,EAAE,qCAAqC;IAC/CC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAEiC,gBAAgB;IACzBlB,aAAa,EAAEjC,oBAAoB;IACnCkC,aAAa,EAAEkB,oBAAoB;IACnCjC,cAAc,EAAE;MAAEC,IAAI,EAAE,eAAe;MAAEC,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAG,CAAC;IACxEC,KAAK,EAAErB,SAAS,CAACmD,SAAS;IAC1Bd,eAAe,EAAErC,SAAS,CAACoD;EAC7B,CAAC;EACD,CAACrD,gBAAgB,CAACsD,cAAc,GAAG;IACjC3C,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BgB,wBAAwB,QAAS;IACjCC,MAAM,EAAE,0CAA0C;IAClDhB,IAAI,EAAE,qBAAqB;IAC3BC,QAAQ,EAAE,iCAAiC;IAC3CC,QAAQ,EAAE,qCAAqC;IAC/CC,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAEiC,gBAAgB;IACzBhC,cAAc,EAAE;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,MAAM,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAG;EACjF,CAAC;EACD,CAACrB,gBAAgB,CAACuD,IAAI,GAAG;IACvB5C,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BgB,wBAAwB,QAAS;IACjCC,MAAM,EAAE,yCAAyC;IACjDhB,IAAI,EAAE,wBAAwB;IAC9BC,QAAQ,EAAE,sBAAsB;IAChCC,QAAQ,EAAE,kCAAkC;IAC5CC,KAAK,EAAE,MAAM;IACbC,OAAO,EAAEuC,QAAQ;IACjBxB,aAAa,EAAEnC,iBAAiB;IAChCoC,aAAa,EAAEwB,iBAAiB;IAChCvC,cAAc,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAC9DS,cAAc,EAAE3B;EAClB,CAAC;EACD,CAACH,gBAAgB,CAAC0D,cAAc,GAAG;IACjC/C,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BgB,wBAAwB,QAAS;IACjCC,MAAM,EAAE,yCAAyC;IACjDhB,IAAI,EAAE,wBAAwB;IAC9BC,QAAQ,EAAE,gDAAgD;IAC1DC,QAAQ,EAAE,kCAAkC;IAC5CC,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAEuC,QAAQ;IACjBtC,cAAc,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAC9DS,cAAc,EAAE3B;EAClB,CAAC;EACD,CAACH,gBAAgB,CAAC2D,GAAG,GAAG;IACtBhD,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BgB,wBAAwB,QAAS;IACjCC,MAAM,EAAE,oCAAoC;IAC5ChB,IAAI,EAAE,4BAA4B;IAClCC,QAAQ,EAAE,sBAAsB;IAChCC,QAAQ,EAAE,iCAAiC;IAC3CC,KAAK,EAAE,WAAW;IAClBC,OAAO,EAAE2C,OAAO;IAChB5B,aAAa,EAAE6B,gBAAgB;IAC/B5B,aAAa,EAAE6B,gBAAgB;IAC/B5C,cAAc,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,MAAM,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAC5DS,cAAc,EAAEzB,eAAe;IAC/BiB,KAAK,EAAErB,SAAS,CAAC8D,QAAQ;IACzBzB,eAAe,EAAErC,SAAS,CAAC+D;EAC7B,CAAC;EACD,CAAChE,gBAAgB,CAACiE,QAAQ,GAAG;IAC3BtD,WAAW,EAAEH,WAAW,CAACI,EAAE;IAC3BgB,wBAAwB,QAAS;IACjCf,IAAI,EAAE,4BAA4B;IAClCC,QAAQ,EAAE,yCAAyC;IACnDC,QAAQ,EAAE,iCAAiC;IAC3CC,KAAK,EAAE,eAAe;IACtBC,OAAO,EAAE2C,OAAO;IAChB9B,cAAc,EAAExB,aAAa;IAC7BY,cAAc,EAAE;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAClEC,KAAK,EAAErB,SAAS,CAAC8D,QAAQ;IACzBzB,eAAe,EAAErC,SAAS,CAAC+D;EAC7B;AACF,CAAC;AASD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAY,CAACC,OAAY,EAAO;EAC9C,IAAIA,OAAO,EAAE;IAAA;IACX,8BAAO1D,UAAU,CAAC0D,OAAO,CAAC,qEAAIC,SAAS;EACzC;EACA,OAAOA,SAAS;AAClB;AAEA,MAAMC,YAAY,GAAG5D,UAAU,CAACT,gBAAgB,CAACU,OAAO,CAAC;AACzD,OAAO,SAAS4D,qBAAqB,CAACH,OAA2B,EAAE;EAAA;EACjE,wBAAOD,YAAY,CAACC,OAAO,CAAC,yDAAIE,YAAY;AAC9C"},"metadata":{},"sourceType":"module"}