{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/components/AccountDrawer/MiniPortfolio/NFTs/NFTItem.tsx\",\n  _s = $RefreshSig$();\nimport { sendAnalyticsEvent, useTrace } from '@uniswap/analytics';\nimport { InterfaceElementName, SharedEventName } from '@uniswap/analytics-events';\nimport { useToggleAccountDrawer } from 'components/AccountDrawer';\nimport Column from 'components/Column';\nimport Row from 'components/Row';\nimport { Box } from 'nft/components/Box';\nimport { NftCard } from 'nft/components/card';\nimport { detailsHref } from 'nft/components/card/utils';\nimport { VerifiedIcon } from 'nft/components/icons';\nimport { floorFormatter } from 'nft/utils';\nimport { useNavigate } from 'react-router-dom';\nimport { ThemedText } from 'theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloorPrice = _styled(Row).withConfig({\n  displayName: \"NFTItem__FloorPrice\",\n  componentId: \"sc-xmln4-0\"\n})([\"opacity:0;white-space:pre;\"]);\nconst NFTContainer = _styled(Column).withConfig({\n  displayName: \"NFTItem__NFTContainer\",\n  componentId: \"sc-xmln4-1\"\n})([\"gap:8px;min-height:150px;&:hover{\", \"{opacity:1;}}\"], FloorPrice);\nconst NFTCollectionName = _styled(ThemedText.BodySmall).withConfig({\n  displayName: \"NFTItem__NFTCollectionName\",\n  componentId: \"sc-xmln4-2\"\n})([\"white-space:pre;text-overflow:ellipsis;overflow:hidden;\"]);\nexport function NFT(_ref) {\n  _s();\n  let {\n    asset,\n    mediaShouldBePlaying,\n    setCurrentTokenPlayingMedia\n  } = _ref;\n  const toggleWalletDrawer = useToggleAccountDrawer();\n  const navigate = useNavigate();\n  const trace = useTrace();\n  const navigateToNFTDetails = () => {\n    toggleWalletDrawer();\n    navigate(detailsHref(asset));\n  };\n  return /*#__PURE__*/_jsxDEV(NFTContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NftCard, {\n      asset: asset,\n      hideDetails: true,\n      display: {\n        disabledInfo: true\n      },\n      isSelected: false,\n      isDisabled: false,\n      onCardClick: navigateToNFTDetails,\n      sendAnalyticsEvent: () => {\n        var _asset$collection, _asset$collection2;\n        return sendAnalyticsEvent(SharedEventName.ELEMENT_CLICKED, {\n          element: InterfaceElementName.MINI_PORTFOLIO_NFT_ITEM,\n          collection_name: (_asset$collection = asset.collection) === null || _asset$collection === void 0 ? void 0 : _asset$collection.name,\n          collection_address: (_asset$collection2 = asset.collection) === null || _asset$collection2 === void 0 ? void 0 : _asset$collection2.address,\n          token_id: asset.tokenId,\n          ...trace\n        });\n      },\n      mediaShouldBePlaying: mediaShouldBePlaying,\n      setCurrentTokenPlayingMedia: setCurrentTokenPlayingMedia,\n      testId: \"mini-portfolio-nft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NFTDetails, {\n      asset: asset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(NFT, \"oiOWrRiujHkoT9dwVokBDn0oSXs=\", false, function () {\n  return [useToggleAccountDrawer, useNavigate, useTrace];\n});\n_c = NFT;\nfunction NFTDetails(_ref2) {\n  let {\n    asset\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    width: \"full\",\n    flexWrap: \"nowrap\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gap: \"4px\",\n      children: [/*#__PURE__*/_jsxDEV(NFTCollectionName, {\n        children: asset.asset_contract.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), asset.collectionIsVerified && /*#__PURE__*/_jsxDEV(Verified, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloorPrice, {\n      children: /*#__PURE__*/_jsxDEV(ThemedText.Caption, {\n        color: \"textSecondary\",\n        children: asset.floorPrice ? `${floorFormatter(asset.floorPrice)} ETH` : ' '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NFTDetails;\nconst BADGE_SIZE = '18px';\nfunction Verified() {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    width: \"unset\",\n    flexShrink: \"0\",\n    children: /*#__PURE__*/_jsxDEV(VerifiedIcon, {\n      height: BADGE_SIZE,\n      width: BADGE_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Verified;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NFT\");\n$RefreshReg$(_c2, \"NFTDetails\");\n$RefreshReg$(_c3, \"Verified\");","map":{"version":3,"names":["sendAnalyticsEvent","useTrace","InterfaceElementName","SharedEventName","useToggleAccountDrawer","Column","Row","Box","NftCard","detailsHref","VerifiedIcon","floorFormatter","useNavigate","ThemedText","FloorPrice","styled","NFTContainer","NFTCollectionName","BodySmall","NFT","asset","mediaShouldBePlaying","setCurrentTokenPlayingMedia","toggleWalletDrawer","navigate","trace","navigateToNFTDetails","disabledInfo","ELEMENT_CLICKED","element","MINI_PORTFOLIO_NFT_ITEM","collection_name","collection","name","collection_address","address","token_id","tokenId","NFTDetails","asset_contract","collectionIsVerified","floorPrice","BADGE_SIZE","Verified"],"sources":["/home/diep/freelance/interface/src/components/AccountDrawer/MiniPortfolio/NFTs/NFTItem.tsx"],"sourcesContent":["import { sendAnalyticsEvent, useTrace } from '@uniswap/analytics'\nimport { InterfaceElementName, SharedEventName } from '@uniswap/analytics-events'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport Column from 'components/Column'\nimport Row from 'components/Row'\nimport { Box } from 'nft/components/Box'\nimport { NftCard } from 'nft/components/card'\nimport { detailsHref } from 'nft/components/card/utils'\nimport { VerifiedIcon } from 'nft/components/icons'\nimport { WalletAsset } from 'nft/types'\nimport { floorFormatter } from 'nft/utils'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nconst FloorPrice = styled(Row)`\n  opacity: 0;\n\n  // prevent empty whitespace from collapsing line height to maintain\n  // consistent spacing below rows\n  white-space: pre;\n`\n\nconst NFTContainer = styled(Column)`\n  gap: 8px;\n  min-height: 150px;\n\n  &:hover {\n    ${FloorPrice} {\n      opacity: 1;\n    }\n  }\n`\nconst NFTCollectionName = styled(ThemedText.BodySmall)`\n  white-space: pre;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`\n\nexport function NFT({\n  asset,\n  mediaShouldBePlaying,\n  setCurrentTokenPlayingMedia,\n}: {\n  asset: WalletAsset\n  mediaShouldBePlaying: boolean\n  setCurrentTokenPlayingMedia: (tokenId: string | undefined) => void\n}) {\n  const toggleWalletDrawer = useToggleAccountDrawer()\n  const navigate = useNavigate()\n  const trace = useTrace()\n\n  const navigateToNFTDetails = () => {\n    toggleWalletDrawer()\n    navigate(detailsHref(asset))\n  }\n\n  return (\n    <NFTContainer>\n      <NftCard\n        asset={asset}\n        hideDetails\n        display={{ disabledInfo: true }}\n        isSelected={false}\n        isDisabled={false}\n        onCardClick={navigateToNFTDetails}\n        sendAnalyticsEvent={() =>\n          sendAnalyticsEvent(SharedEventName.ELEMENT_CLICKED, {\n            element: InterfaceElementName.MINI_PORTFOLIO_NFT_ITEM,\n            collection_name: asset.collection?.name,\n            collection_address: asset.collection?.address,\n            token_id: asset.tokenId,\n            ...trace,\n          })\n        }\n        mediaShouldBePlaying={mediaShouldBePlaying}\n        setCurrentTokenPlayingMedia={setCurrentTokenPlayingMedia}\n        testId=\"mini-portfolio-nft\"\n      />\n      <NFTDetails asset={asset} />\n    </NFTContainer>\n  )\n}\n\nfunction NFTDetails({ asset }: { asset: WalletAsset }) {\n  return (\n    <Box overflow=\"hidden\" width=\"full\" flexWrap=\"nowrap\">\n      <Row gap=\"4px\">\n        <NFTCollectionName>{asset.asset_contract.name}</NFTCollectionName>\n        {asset.collectionIsVerified && <Verified />}\n      </Row>\n      <FloorPrice>\n        <ThemedText.Caption color=\"textSecondary\">\n          {asset.floorPrice ? `${floorFormatter(asset.floorPrice)} ETH` : ' '}\n        </ThemedText.Caption>\n      </FloorPrice>\n    </Box>\n  )\n}\n\nconst BADGE_SIZE = '18px'\nfunction Verified() {\n  return (\n    <Row width=\"unset\" flexShrink=\"0\">\n      <VerifiedIcon height={BADGE_SIZE} width={BADGE_SIZE} />\n    </Row>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}