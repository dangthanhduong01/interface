{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/components/swap/TradePrice.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { formatNumber, NumberType } from '@uniswap/conedison/format';\nimport { useUSDPrice } from 'hooks/useUSDPrice';\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount';\nimport { useCallback, useState } from 'react';\nimport { ThemedText } from 'theme';\nimport { formatTransactionAmount, priceToPreciseFloat } from 'utils/formatNumbers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPriceContainer = _styled.button.withConfig({\n  displayName: \"TradePrice__StyledPriceContainer\",\n  componentId: \"sc-19ug97y-0\"\n})([\"background-color:transparent;border:none;cursor:pointer;align-items:center;justify-content:flex-start;padding:0;grid-template-columns:1fr auto;grid-gap:0.25rem;display:flex;flex-direction:row;text-align:left;flex-wrap:wrap;padding:8px 0;user-select:text;\"]);\nexport default function TradePrice(_ref) {\n  _s();\n  var _price$quoteCurrency, _price$baseCurrency, _price$baseCurrency2, _price$quoteCurrency2, _ref2;\n  let {\n    price\n  } = _ref;\n  const [showInverted, setShowInverted] = useState(false);\n  const {\n    baseCurrency,\n    quoteCurrency\n  } = price;\n  const {\n    data: usdPrice\n  } = useUSDPrice(tryParseCurrencyAmount('1', showInverted ? baseCurrency : quoteCurrency));\n  let formattedPrice;\n  try {\n    formattedPrice = showInverted ? formatTransactionAmount(priceToPreciseFloat(price)) : formatTransactionAmount(priceToPreciseFloat(price.invert()));\n  } catch (error) {\n    formattedPrice = '0';\n  }\n  const label = showInverted ? `${(_price$quoteCurrency = price.quoteCurrency) === null || _price$quoteCurrency === void 0 ? void 0 : _price$quoteCurrency.symbol}` : `${(_price$baseCurrency = price.baseCurrency) === null || _price$baseCurrency === void 0 ? void 0 : _price$baseCurrency.symbol} `;\n  const labelInverted = showInverted ? `${(_price$baseCurrency2 = price.baseCurrency) === null || _price$baseCurrency2 === void 0 ? void 0 : _price$baseCurrency2.symbol} ` : `${(_price$quoteCurrency2 = price.quoteCurrency) === null || _price$quoteCurrency2 === void 0 ? void 0 : _price$quoteCurrency2.symbol}`;\n  const flipPrice = useCallback(() => setShowInverted(!showInverted), [setShowInverted, showInverted]);\n  const text = `${(_ref2 = '1 ' + labelInverted + ' = ' + formattedPrice) !== null && _ref2 !== void 0 ? _ref2 : '-'} ${label}`;\n  return /*#__PURE__*/_jsxDEV(StyledPriceContainer, {\n    onClick: e => {\n      e.stopPropagation(); // dont want this click to affect dropdowns / hovers\n      flipPrice();\n    },\n    title: text,\n    children: [/*#__PURE__*/_jsxDEV(ThemedText.BodySmall, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), ' ', usdPrice && /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedDarkGray, {\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"({0})\",\n        values: {\n          0: formatNumber(usdPrice, NumberType.FiatTokenPrice)\n        }\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(TradePrice, \"oxB4F9fYHpjQ3mpaRCtsmvS7km0=\", false, function () {\n  return [useUSDPrice];\n});\n_c = TradePrice;\nvar _c;\n$RefreshReg$(_c, \"TradePrice\");","map":{"version":3,"names":["formatNumber","NumberType","useUSDPrice","tryParseCurrencyAmount","useCallback","useState","ThemedText","formatTransactionAmount","priceToPreciseFloat","StyledPriceContainer","styled","button","TradePrice","price","showInverted","setShowInverted","baseCurrency","quoteCurrency","data","usdPrice","formattedPrice","invert","error","label","symbol","labelInverted","flipPrice","text","e","stopPropagation","FiatTokenPrice"],"sources":["/home/diep/freelance/interface/src/components/swap/TradePrice.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { formatNumber, NumberType } from '@uniswap/conedison/format'\nimport { Currency, Price } from '@uniswap/sdk-core'\nimport { useUSDPrice } from 'hooks/useUSDPrice'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { useCallback, useState } from 'react'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\nimport { formatTransactionAmount, priceToPreciseFloat } from 'utils/formatNumbers'\n\ninterface TradePriceProps {\n  price: Price<Currency, Currency>\n}\n\nconst StyledPriceContainer = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 0;\n  grid-template-columns: 1fr auto;\n  grid-gap: 0.25rem;\n  display: flex;\n  flex-direction: row;\n  text-align: left;\n  flex-wrap: wrap;\n  padding: 8px 0;\n  user-select: text;\n`\n\nexport default function TradePrice({ price }: TradePriceProps) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  const { baseCurrency, quoteCurrency } = price\n  const { data: usdPrice } = useUSDPrice(tryParseCurrencyAmount('1', showInverted ? baseCurrency : quoteCurrency))\n\n  let formattedPrice: string\n  try {\n    formattedPrice = showInverted\n      ? formatTransactionAmount(priceToPreciseFloat(price))\n      : formatTransactionAmount(priceToPreciseFloat(price.invert()))\n  } catch (error) {\n    formattedPrice = '0'\n  }\n\n  const label = showInverted ? `${price.quoteCurrency?.symbol}` : `${price.baseCurrency?.symbol} `\n  const labelInverted = showInverted ? `${price.baseCurrency?.symbol} ` : `${price.quoteCurrency?.symbol}`\n  const flipPrice = useCallback(() => setShowInverted(!showInverted), [setShowInverted, showInverted])\n\n  const text = `${'1 ' + labelInverted + ' = ' + formattedPrice ?? '-'} ${label}`\n\n  return (\n    <StyledPriceContainer\n      onClick={(e) => {\n        e.stopPropagation() // dont want this click to affect dropdowns / hovers\n        flipPrice()\n      }}\n      title={text}\n    >\n      <ThemedText.BodySmall>{text}</ThemedText.BodySmall>{' '}\n      {usdPrice && (\n        <ThemedText.DeprecatedDarkGray>\n          <Trans>({formatNumber(usdPrice, NumberType.FiatTokenPrice)})</Trans>\n        </ThemedText.DeprecatedDarkGray>\n      )}\n    </StyledPriceContainer>\n  )\n}\n"],"mappings":";;;;AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,2BAA2B;AAEpE,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,sBAAsB,MAAM,kCAAkC;AACrE,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,uBAAuB,EAAEC,mBAAmB,QAAQ,qBAAqB;AAAA;AAMlF,MAAMC,oBAAoB,GAAGC,OAAM,CAACC,MAAM;EAAA;EAAA;AAAA,sQAezC;AAED,eAAe,SAASC,UAAU,OAA6B;EAAA;EAAA;EAAA,IAA5B;IAAEC;EAAuB,CAAC;EAC3D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAEhE,MAAM;IAAEW,YAAY;IAAEC;EAAc,CAAC,GAAGJ,KAAK;EAC7C,MAAM;IAAEK,IAAI,EAAEC;EAAS,CAAC,GAAGjB,WAAW,CAACC,sBAAsB,CAAC,GAAG,EAAEW,YAAY,GAAGE,YAAY,GAAGC,aAAa,CAAC,CAAC;EAEhH,IAAIG,cAAsB;EAC1B,IAAI;IACFA,cAAc,GAAGN,YAAY,GACzBP,uBAAuB,CAACC,mBAAmB,CAACK,KAAK,CAAC,CAAC,GACnDN,uBAAuB,CAACC,mBAAmB,CAACK,KAAK,CAACQ,MAAM,EAAE,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,cAAc,GAAG,GAAG;EACtB;EAEA,MAAMG,KAAK,GAAGT,YAAY,GAAI,2BAAED,KAAK,CAACI,aAAa,yDAAnB,qBAAqBO,MAAO,EAAC,GAAI,0BAAEX,KAAK,CAACG,YAAY,wDAAlB,oBAAoBQ,MAAO,GAAE;EAChG,MAAMC,aAAa,GAAGX,YAAY,GAAI,2BAAED,KAAK,CAACG,YAAY,yDAAlB,qBAAoBQ,MAAO,GAAE,GAAI,4BAAEX,KAAK,CAACI,aAAa,0DAAnB,sBAAqBO,MAAO,EAAC;EACxG,MAAME,SAAS,GAAGtB,WAAW,CAAC,MAAMW,eAAe,CAAC,CAACD,YAAY,CAAC,EAAE,CAACC,eAAe,EAAED,YAAY,CAAC,CAAC;EAEpG,MAAMa,IAAI,GAAI,YAAE,IAAI,GAAGF,aAAa,GAAG,KAAK,GAAGL,cAAc,yCAAI,GAAI,IAAGG,KAAM,EAAC;EAE/E,oBACE,QAAC,oBAAoB;IACnB,OAAO,EAAGK,CAAC,IAAK;MACdA,CAAC,CAACC,eAAe,EAAE,EAAC;MACpBH,SAAS,EAAE;IACb,CAAE;IACF,KAAK,EAAEC,IAAK;IAAA,wBAEZ,QAAC,UAAU,CAAC,SAAS;MAAA,UAAEA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAwB,EAAC,GAAG,EACtDR,QAAQ,iBACP,QAAC,UAAU,CAAC,kBAAkB;MAAA,uBAC5B;QAAA;QAAA;UAAA,GAASnB,YAAY,CAACmB,QAAQ,EAAElB,UAAU,CAAC6B,cAAc;QAAC;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAEvE;EAAA;IAAA;IAAA;IAAA;EAAA,QACoB;AAE3B;AAAC,GArCuBlB,UAAU;EAAA,QAILV,WAAW;AAAA;AAAA,KAJhBU,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}