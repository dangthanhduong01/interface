{"ast":null,"code":"import { getActiveTransaction } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { WINDOW } from './types.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction();\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\nexport { registerBackgroundTabDetection };","map":{"version":3,"sources":["../../../src/browser/backgroundtab.ts"],"names":[],"mappings":";;;;AAMA;AACA;AACA;AACA;AACA,SAAA,8BAAA,GAAA;EACA,IAAA,MAAA,IAAA,MAAA,CAAA,QAAA,EAAA;IACA,MAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,kBAAA,EAAA,MAAA;MACA,MAAA,iBAAA,GAAA,oBAAA,EAAA;MACA,IAAA,MAAA,CAAA,QAAA,CAAA,MAAA,IAAA,iBAAA,EAAA;QACA,MAAA,UAAA,GAAA,WAAA;QAEA,CAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,KACA,MAAA,CAAA,GAAA,CACA,0BAAA,UAAA,8CAAA,iBAAA,CAAA,EAAA,EAAA,CACA;QACA;QACA;QACA,IAAA,CAAA,iBAAA,CAAA,MAAA,EAAA;UACA,iBAAA,CAAA,SAAA,CAAA,UAAA,CAAA;QACA;QACA,iBAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,iBAAA,CAAA;QACA,iBAAA,CAAA,MAAA,EAAA;MACA;IACA,CAAA,CAAA;EACA,CAAA,MAAA;IACA,CAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,KACA,MAAA,CAAA,IAAA,CAAA,oFAAA,CAAA;EACA;AACA","sourcesContent":["import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        __DEBUG_BUILD__ &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    __DEBUG_BUILD__ &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}