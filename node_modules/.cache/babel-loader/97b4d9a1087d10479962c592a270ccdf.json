{"ast":null,"code":"import { networkConnection, uniwalletConnectConnection, walletConnectConnection } from 'connection';\nimport { getChainInfo } from 'constants/chainInfo';\nimport { isSupportedChain, SupportedChainId } from 'constants/chains';\nimport { FALLBACK_URLS, RPC_URLS } from 'constants/networks';\nfunction getRpcUrl(chainId) {\n  switch (chainId) {\n    case SupportedChainId.MAINNET:\n    case SupportedChainId.GOERLI:\n      return RPC_URLS[chainId][0];\n    // Attempting to add a chain using an infura URL will not work, as the URL will be unreachable from the MetaMask background page.\n    // MetaMask allows switching to any publicly reachable URL, but for novel chains, it will display a warning if it is not on the \"Safe\" list.\n    // See the definition of FALLBACK_URLS for more details.\n    default:\n      return FALLBACK_URLS[chainId][0];\n  }\n}\nexport const switchChain = async (connector, chainId) => {\n  if (!isSupportedChain(chainId)) {\n    throw new Error(`Chain ${chainId} not supported for connector (${typeof connector})`);\n  } else if (connector === walletConnectConnection.connector || connector === uniwalletConnectConnection.connector || connector === networkConnection.connector) {\n    await connector.activate(chainId);\n  } else {\n    const info = getChainInfo(chainId);\n    const addChainParameter = {\n      chainId,\n      chainName: info.label,\n      rpcUrls: [getRpcUrl(chainId)],\n      nativeCurrency: info.nativeCurrency,\n      blockExplorerUrls: [info.explorer]\n    };\n    await connector.activate(addChainParameter);\n  }\n};","map":{"version":3,"names":["networkConnection","uniwalletConnectConnection","walletConnectConnection","getChainInfo","isSupportedChain","SupportedChainId","FALLBACK_URLS","RPC_URLS","getRpcUrl","chainId","MAINNET","GOERLI","switchChain","connector","Error","activate","info","addChainParameter","chainName","label","rpcUrls","nativeCurrency","blockExplorerUrls","explorer"],"sources":["/home/diep/freelance/interface/src/utils/switchChain.ts"],"sourcesContent":["import { Connector } from '@web3-react/types'\nimport { networkConnection, uniwalletConnectConnection, walletConnectConnection } from 'connection'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { isSupportedChain, SupportedChainId } from 'constants/chains'\nimport { FALLBACK_URLS, RPC_URLS } from 'constants/networks'\n\nfunction getRpcUrl(chainId: SupportedChainId): string {\n  switch (chainId) {\n    case SupportedChainId.MAINNET:\n    case SupportedChainId.GOERLI:\n      return RPC_URLS[chainId][0]\n    // Attempting to add a chain using an infura URL will not work, as the URL will be unreachable from the MetaMask background page.\n    // MetaMask allows switching to any publicly reachable URL, but for novel chains, it will display a warning if it is not on the \"Safe\" list.\n    // See the definition of FALLBACK_URLS for more details.\n    default:\n      return FALLBACK_URLS[chainId][0]\n  }\n}\n\nexport const switchChain = async (connector: Connector, chainId: SupportedChainId) => {\n  if (!isSupportedChain(chainId)) {\n    throw new Error(`Chain ${chainId} not supported for connector (${typeof connector})`)\n  } else if (\n    connector === walletConnectConnection.connector ||\n    connector === uniwalletConnectConnection.connector ||\n    connector === networkConnection.connector\n  ) {\n    await connector.activate(chainId)\n  } else {\n    const info = getChainInfo(chainId)\n    const addChainParameter = {\n      chainId,\n      chainName: info.label,\n      rpcUrls: [getRpcUrl(chainId)],\n      nativeCurrency: info.nativeCurrency,\n      blockExplorerUrls: [info.explorer],\n    }\n    await connector.activate(addChainParameter)\n  }\n}\n"],"mappings":"AACA,SAASA,iBAAiB,EAAEC,0BAA0B,EAAEC,uBAAuB,QAAQ,YAAY;AACnG,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,kBAAkB;AACrE,SAASC,aAAa,EAAEC,QAAQ,QAAQ,oBAAoB;AAE5D,SAASC,SAAS,CAACC,OAAyB,EAAU;EACpD,QAAQA,OAAO;IACb,KAAKJ,gBAAgB,CAACK,OAAO;IAC7B,KAAKL,gBAAgB,CAACM,MAAM;MAC1B,OAAOJ,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B;IACA;IACA;IACA;MACE,OAAOH,aAAa,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;EAAA;AAEtC;AAEA,OAAO,MAAMG,WAAW,GAAG,OAAOC,SAAoB,EAAEJ,OAAyB,KAAK;EACpF,IAAI,CAACL,gBAAgB,CAACK,OAAO,CAAC,EAAE;IAC9B,MAAM,IAAIK,KAAK,CAAE,SAAQL,OAAQ,iCAAgC,OAAOI,SAAU,GAAE,CAAC;EACvF,CAAC,MAAM,IACLA,SAAS,KAAKX,uBAAuB,CAACW,SAAS,IAC/CA,SAAS,KAAKZ,0BAA0B,CAACY,SAAS,IAClDA,SAAS,KAAKb,iBAAiB,CAACa,SAAS,EACzC;IACA,MAAMA,SAAS,CAACE,QAAQ,CAACN,OAAO,CAAC;EACnC,CAAC,MAAM;IACL,MAAMO,IAAI,GAAGb,YAAY,CAACM,OAAO,CAAC;IAClC,MAAMQ,iBAAiB,GAAG;MACxBR,OAAO;MACPS,SAAS,EAAEF,IAAI,CAACG,KAAK;MACrBC,OAAO,EAAE,CAACZ,SAAS,CAACC,OAAO,CAAC,CAAC;MAC7BY,cAAc,EAAEL,IAAI,CAACK,cAAc;MACnCC,iBAAiB,EAAE,CAACN,IAAI,CAACO,QAAQ;IACnC,CAAC;IACD,MAAMV,SAAS,CAACE,QAAQ,CAACE,iBAAiB,CAAC;EAC7C;AACF,CAAC"},"metadata":{},"sourceType":"module"}