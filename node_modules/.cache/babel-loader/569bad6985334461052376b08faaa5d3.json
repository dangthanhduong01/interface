{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DynamicConfig_1 = __importDefault(require(\"./DynamicConfig\"));\nvar ErrorBoundary_1 = __importDefault(require(\"./ErrorBoundary\"));\nvar Errors_1 = require(\"./Errors\");\nvar Layer_1 = __importDefault(require(\"./Layer\"));\nvar LogEvent_1 = __importDefault(require(\"./LogEvent\"));\nvar StatsigIdentity_1 = __importDefault(require(\"./StatsigIdentity\"));\nvar StatsigLogger_1 = __importDefault(require(\"./StatsigLogger\"));\nvar StatsigNetwork_1 = __importDefault(require(\"./StatsigNetwork\"));\nvar StatsigSDKOptions_1 = __importDefault(require(\"./StatsigSDKOptions\"));\nvar StatsigStore_1 = __importStar(require(\"./StatsigStore\"));\nvar Hashing_1 = require(\"./utils/Hashing\");\nvar StatsigAsyncStorage_1 = __importDefault(require(\"./utils/StatsigAsyncStorage\"));\nvar StatsigLocalStorage_1 = __importDefault(require(\"./utils/StatsigLocalStorage\"));\nvar Diagnostics_1 = __importStar(require(\"./utils/Diagnostics\"));\nvar MAX_VALUE_SIZE = 64;\nvar MAX_OBJ_SIZE = 2048;\nvar StatsigClient = /** @class */function () {\n  function StatsigClient(sdkKey, user, options) {\n    var _this = this;\n    this.appState = null;\n    this.currentAppState = null;\n    this.initCalled = false;\n    this.pendingInitPromise = null;\n    this.optionalLoggingSetup = false;\n    this.prefetchedUsersByCacheKey = {};\n    this.logLayerParameterExposureForLayer = function (layer, parameterName, isManualExposure) {\n      if (isManualExposure === void 0) {\n        isManualExposure = false;\n      }\n      var allocatedExperiment = '';\n      var exposures = layer._getUndelegatedSecondaryExposures();\n      var isExplicit = layer._getExplicitParameters().includes(parameterName);\n      if (isExplicit) {\n        allocatedExperiment = layer._getAllocatedExperimentName();\n        exposures = layer._getSecondaryExposures();\n      }\n      _this.logger.logLayerExposure(_this.getCurrentUser(), layer.getName(), layer.getRuleID(), exposures, allocatedExperiment, parameterName, isExplicit, layer._getEvaluationDetails(), isManualExposure);\n    };\n    if (typeof sdkKey !== 'string' || !sdkKey.startsWith('client-')) {\n      throw new Errors_1.StatsigInvalidArgumentError('Invalid key provided.  You must use a Client SDK Key from the Statsig console to initialize the sdk');\n    }\n    this.errorBoundary = new ErrorBoundary_1.default(sdkKey);\n    this.ready = false;\n    this.sdkKey = sdkKey;\n    this.options = new StatsigSDKOptions_1.default(options);\n    StatsigLocalStorage_1.default.disabled = this.options.getDisableLocalStorage();\n    this.initializeDiagnostics = new Diagnostics_1.default('initialize');\n    this.identity = new StatsigIdentity_1.default(this.normalizeUser(user !== null && user !== void 0 ? user : null), this.options.getOverrideStableID(), StatsigClient.reactNativeUUID);\n    this.network = new StatsigNetwork_1.default(this);\n    this.store = new StatsigStore_1.default(this);\n    this.logger = new StatsigLogger_1.default(this);\n    if ((options === null || options === void 0 ? void 0 : options.initializeValues) != null) {\n      this.setInitializeValues(options === null || options === void 0 ? void 0 : options.initializeValues);\n    }\n    this.errorBoundary.setStatsigMetadata(this.getStatsigMetadata());\n  }\n  StatsigClient.prototype.getErrorBoundary = function () {\n    return this.errorBoundary;\n  };\n  StatsigClient.prototype.getNetwork = function () {\n    return this.network;\n  };\n  StatsigClient.prototype.getStore = function () {\n    return this.store;\n  };\n  StatsigClient.prototype.getLogger = function () {\n    return this.logger;\n  };\n  StatsigClient.prototype.getOptions = function () {\n    return this.options;\n  };\n  StatsigClient.prototype.getSDKKey = function () {\n    if (this.sdkKey == null) {\n      return '';\n    }\n    return this.sdkKey;\n  };\n  StatsigClient.prototype.getCurrentUser = function () {\n    return this.identity.getUser();\n  };\n  StatsigClient.prototype.getCurrentUserCacheKey = function () {\n    return (0, Hashing_1.getUserCacheKey)(this.getStableID(), this.getCurrentUser());\n  };\n  StatsigClient.prototype.getStatsigMetadata = function () {\n    return this.identity.getStatsigMetadata();\n  };\n  StatsigClient.prototype.getSDKType = function () {\n    return this.identity.getSDKType();\n  };\n  StatsigClient.prototype.getSDKVersion = function () {\n    return this.identity.getSDKVersion();\n  };\n  StatsigClient.prototype.setInitializeValues = function (initializeValues) {\n    var _this = this;\n    this.errorBoundary.capture('setInitializeValues', function () {\n      _this.store.bootstrap(_this.getStableID(), initializeValues);\n      if (!_this.ready) {\n        // the sdk is usable and considered initialized when configured\n        // with initializeValues\n        _this.ready = true;\n        _this.initCalled = true;\n      }\n      // we wont have access to window/document/localStorage if these run on the server\n      // so try to run whenever this is called\n      _this.handleOptionalLogging();\n      _this.logger.sendSavedRequests();\n    }, function () {\n      _this.ready = true;\n      _this.initCalled = true;\n    });\n  };\n  StatsigClient.prototype.initializeAsync = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.errorBoundary.capture('initializeAsync', function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var startTime, completionCallback, user;\n            var _this = this;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  startTime = Date.now();\n                  if (this.pendingInitPromise != null) {\n                    return [2 /*return*/, this.pendingInitPromise];\n                  }\n                  if (this.ready) {\n                    return [2 /*return*/, Promise.resolve()];\n                  }\n                  this.initializeDiagnostics.mark(Diagnostics_1.DiagnosticsKey.OVERALL, Diagnostics_1.DiagnosticsEvent.START);\n                  this.initCalled = true;\n                  if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 3];\n                  return [4 /*yield*/, this.identity.initAsync()];\n                case 1:\n                  _a.sent();\n                  return [4 /*yield*/, this.store.loadFromAsyncStorage()];\n                case 2:\n                  _a.sent();\n                  _a.label = 3;\n                case 3:\n                  if (this.appState && this.appState.addEventListener && typeof this.appState.addEventListener === 'function') {\n                    this.currentAppState = this.appState.currentState;\n                    this.appState.addEventListener('change', this.handleAppStateChange.bind(this));\n                  }\n                  if (this.options.getLocalModeEnabled()) {\n                    return [2 /*return*/, Promise.resolve()];\n                  }\n                  completionCallback = function (success, message) {\n                    var cb = _this.options.getInitCompletionCallback();\n                    if (cb) {\n                      cb(Date.now() - startTime, success, message);\n                    }\n                  };\n                  user = this.identity.getUser();\n                  this.pendingInitPromise = this.fetchAndSaveValues(user, this.options.getPrefetchUsers(), completionCallback, this.initializeDiagnostics).finally(function () {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      return __generator(this, function (_a) {\n                        this.pendingInitPromise = null;\n                        this.ready = true;\n                        this.logger.sendSavedRequests();\n                        this.initializeDiagnostics.mark(Diagnostics_1.DiagnosticsKey.OVERALL, Diagnostics_1.DiagnosticsEvent.END);\n                        if (!this.options.getDisableDiagnosticsLogging()) {\n                          this.logger.logDiagnostics(user, this.initializeDiagnostics);\n                        }\n                        return [2 /*return*/];\n                      });\n                    });\n                  });\n\n                  this.handleOptionalLogging();\n                  return [2 /*return*/, this.pendingInitPromise];\n              }\n            });\n          });\n        }, function () {\n          _this.ready = true;\n          _this.initCalled = true;\n          return Promise.resolve();\n        })];\n      });\n    });\n  };\n  StatsigClient.prototype.prefetchUsers = function (users) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!users || users.length == 0) {\n          return [2 /*return*/];\n        }\n\n        return [2 /*return*/, this.fetchAndSaveValues(null, users)];\n      });\n    });\n  };\n  StatsigClient.prototype.getEvaluationDetails = function () {\n    return this.store.getGlobalEvaluationDetails();\n  };\n  /**\n   * Checks the value of a gate for the current user\n   * @param {string} gateName - the name of the gate to check\n   * @param {boolean} ignoreOverrides = false if this check should ignore local overrides\n   * @returns {boolean} - value of a gate for the user. Gates are \"off\" (return false) by default\n   * @throws Error if initialize() is not called first, or gateName is not a string\n   */\n  StatsigClient.prototype.checkGate = function (gateName, ignoreOverrides) {\n    var _this = this;\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return this.errorBoundary.capture('checkGate', function () {\n      var result = _this.checkGateImpl(gateName, ignoreOverrides);\n      _this.logGateExposureImpl(gateName, result);\n      return result.gate.value === true;\n    }, function () {\n      return false;\n    });\n  };\n  StatsigClient.prototype.checkGateWithExposureLoggingDisabled = function (gateName, ignoreOverrides) {\n    var _this = this;\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return this.errorBoundary.capture('checkGateWithExposureLoggingDisabled', function () {\n      var result = _this.checkGateImpl(gateName, ignoreOverrides);\n      return result.gate.value === true;\n    }, function () {\n      return false;\n    });\n  };\n  StatsigClient.prototype.logGateExposure = function (gateName) {\n    this.logGateExposureImpl(gateName);\n  };\n  /**\n   * Checks the value of a config for the current user\n   * @param {string} configName - the name of the config to get\n   * @param {boolean} ignoreOverrides = false if this check should ignore local overrides\n   * @returns {DynamicConfig} - value of a config for the user\n   * @throws Error if initialize() is not called first, or configName is not a string\n   */\n  StatsigClient.prototype.getConfig = function (configName, ignoreOverrides) {\n    var _this = this;\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return this.errorBoundary.capture('getConfig', function () {\n      var result = _this.getConfigImpl(configName, ignoreOverrides);\n      _this.logConfigExposureImpl(configName, result);\n      return result;\n    }, function () {\n      return _this.getEmptyConfig(configName);\n    });\n  };\n  StatsigClient.prototype.getConfigWithExposureLoggingDisabled = function (configName, ignoreOverrides) {\n    var _this = this;\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return this.errorBoundary.capture('getConfig', function () {\n      return _this.getConfigImpl(configName, ignoreOverrides);\n    }, function () {\n      return _this.getEmptyConfig(configName);\n    });\n  };\n  StatsigClient.prototype.logConfigExposure = function (configName) {\n    this.logConfigExposureImpl(configName);\n  };\n  /**\n   * Gets the experiment for a given user\n   * @param {string} experimentName - the name of the experiment to get\n   * @param {boolean} keepDeviceValue = false if this should use \"sticky\" values persisted in local storage\n   * @param {boolean} ignoreOverrides = false if this check should ignore local overrides\n   * @returns {DynamicConfig} - value of the experiment for the user, represented by a Dynamic Config object\n   * @throws Error if initialize() is not called first, or experimentName is not a string\n   */\n  StatsigClient.prototype.getExperiment = function (experimentName, keepDeviceValue, ignoreOverrides) {\n    var _this = this;\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return this.errorBoundary.capture('getExperiment', function () {\n      var result = _this.getExperimentImpl(experimentName, keepDeviceValue, ignoreOverrides);\n      _this.logExperimentExposureImpl(experimentName, keepDeviceValue, result);\n      return result;\n    }, function () {\n      return _this.getEmptyConfig(experimentName);\n    });\n  };\n  StatsigClient.prototype.getExperimentWithExposureLoggingDisabled = function (experimentName, keepDeviceValue, ignoreOverrides) {\n    var _this = this;\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    return this.errorBoundary.capture('getExperimentWithExposureLoggingDisabled', function () {\n      return _this.getExperimentImpl(experimentName, keepDeviceValue, ignoreOverrides);\n    }, function () {\n      return _this.getEmptyConfig(experimentName);\n    });\n  };\n  StatsigClient.prototype.logExperimentExposure = function (experimentName, keepDeviceValue) {\n    this.logExperimentExposureImpl(experimentName, keepDeviceValue);\n  };\n  StatsigClient.prototype.getLayer = function (layerName, keepDeviceValue) {\n    var _this = this;\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    return this.errorBoundary.capture('getLayer', function () {\n      return _this.getLayerImpl(_this.logLayerParameterExposureForLayer, layerName, keepDeviceValue);\n    }, function () {\n      return Layer_1.default._create(layerName, {}, '', _this.getEvalutionDetailsForError());\n    });\n  };\n  StatsigClient.prototype.getLayerWithExposureLoggingDisabled = function (layerName, keepDeviceValue) {\n    var _this = this;\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    return this.errorBoundary.capture('getLayerWithExposureLoggingDisabled', function () {\n      return _this.getLayerImpl(null, layerName, keepDeviceValue);\n    }, function () {\n      return Layer_1.default._create(layerName, {}, '', _this.getEvalutionDetailsForError());\n    });\n  };\n  StatsigClient.prototype.logLayerParameterExposure = function (layerName, parameterName, keepDeviceValue) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    var layer = this.getLayerImpl(null, layerName, keepDeviceValue);\n    this.logLayerParameterExposureForLayer(layer, parameterName, true);\n  };\n  StatsigClient.prototype.logEvent = function (eventName, value, metadata) {\n    var _this = this;\n    if (value === void 0) {\n      value = null;\n    }\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    this.errorBoundary.swallow('logEvent', function () {\n      if (!_this.logger || !_this.sdkKey) {\n        throw new Errors_1.StatsigUninitializedError('Must initialize() before logging events.');\n      }\n      if (typeof eventName !== 'string' || eventName.length === 0) {\n        console.error('Event not logged. No valid eventName passed.');\n        return;\n      }\n      if (_this.shouldTrimParam(eventName, MAX_VALUE_SIZE)) {\n        console.warn('eventName is too long, trimming to ' + MAX_VALUE_SIZE + ' characters.');\n        eventName = eventName.substring(0, MAX_VALUE_SIZE);\n      }\n      if (typeof value === 'string' && _this.shouldTrimParam(value, MAX_VALUE_SIZE)) {\n        console.warn('value is too long, trimming to ' + MAX_VALUE_SIZE + '.');\n        value = value.substring(0, MAX_VALUE_SIZE);\n      }\n      if (_this.shouldTrimParam(metadata, MAX_OBJ_SIZE)) {\n        console.warn('metadata is too big. Dropping the metadata.');\n        metadata = {\n          error: 'not logged due to size too large'\n        };\n      }\n      var event = new LogEvent_1.default(eventName);\n      event.setValue(value);\n      event.setMetadata(metadata);\n      event.setUser(_this.getCurrentUser());\n      _this.logger.log(event);\n    });\n  };\n  StatsigClient.prototype.updateUser = function (user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.errorBoundary.capture('updateUser', function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var isUserPrefetched, foundCacheValue, currentUser;\n            var _this = this;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  if (!this.initializeCalled()) {\n                    throw new Errors_1.StatsigUninitializedError('Call initialize() first.');\n                  }\n                  this.identity.updateUser(this.normalizeUser(user));\n                  isUserPrefetched = Boolean(this.prefetchedUsersByCacheKey[this.getCurrentUserCacheKey()]);\n                  foundCacheValue = this.store.updateUser(isUserPrefetched);\n                  this.logger.resetDedupeKeys();\n                  if (foundCacheValue && isUserPrefetched) {\n                    return [2 /*return*/, Promise.resolve(true)];\n                  }\n                  if (!(this.pendingInitPromise != null)) return [3 /*break*/, 2];\n                  return [4 /*yield*/, this.pendingInitPromise];\n                case 1:\n                  _a.sent();\n                  _a.label = 2;\n                case 2:\n                  if (this.options.getLocalModeEnabled()) {\n                    return [2 /*return*/, Promise.resolve(true)];\n                  }\n                  currentUser = this.identity.getUser();\n                  this.pendingInitPromise = this.fetchAndSaveValues(currentUser).finally(function () {\n                    _this.pendingInitPromise = null;\n                  });\n                  return [2 /*return*/, this.pendingInitPromise.then(function () {\n                    return Promise.resolve(true);\n                  }).catch(function () {\n                    return Promise.resolve(false);\n                  })];\n              }\n            });\n          });\n        }, function () {\n          return Promise.resolve(false);\n        })];\n      });\n    });\n  };\n  /**\n   * Informs the statsig SDK that the client is closing or shutting down\n   * so the SDK can clean up internal state\n   */\n  StatsigClient.prototype.shutdown = function () {\n    var _this = this;\n    this.errorBoundary.swallow('shutdown', function () {\n      _this.logger.shutdown();\n      if (_this.appState && _this.appState.removeEventListener && typeof _this.appState.removeEventListener === 'function') {\n        _this.appState.removeEventListener('change', _this.handleAppStateChange.bind(_this));\n      }\n      StatsigLocalStorage_1.default.cleanup();\n    });\n  };\n  /**\n   * Stores a local gate override\n   * @param gateName the gate to override\n   * @param value the value to override the gate to\n   */\n  StatsigClient.prototype.overrideGate = function (gateName, value) {\n    var _this = this;\n    this.errorBoundary.swallow('overrideGate', function () {\n      _this.ensureStoreLoaded();\n      _this.store.overrideGate(gateName, value);\n    });\n  };\n  /**\n   * Stores a local config override\n   * @param configName the config to override\n   * @param value the json value to override the config to\n   */\n  StatsigClient.prototype.overrideConfig = function (configName, value) {\n    var _this = this;\n    this.errorBoundary.swallow('overrideConfig', function () {\n      _this.ensureStoreLoaded();\n      _this.store.overrideConfig(configName, value);\n    });\n  };\n  /**\n   * Stores a local layer override\n   * @param layerName the layer to override\n   * @param value the json value to override the config to\n   */\n  StatsigClient.prototype.overrideLayer = function (layerName, value) {\n    var _this = this;\n    this.errorBoundary.swallow('overrideLayer', function () {\n      _this.ensureStoreLoaded();\n      _this.store.overrideLayer(layerName, value);\n    });\n  };\n  /**\n   * Removes the given gate override\n   * @param gateName\n   */\n  StatsigClient.prototype.removeGateOverride = function (gateName) {\n    var _this = this;\n    this.errorBoundary.swallow('removeGateOverride', function () {\n      _this.ensureStoreLoaded();\n      _this.store.removeGateOverride(gateName);\n    });\n  };\n  /**\n   * Removes the given config override\n   * @param configName\n   */\n  StatsigClient.prototype.removeConfigOverride = function (configName) {\n    var _this = this;\n    this.errorBoundary.swallow('removeConfigOverride', function () {\n      _this.ensureStoreLoaded();\n      _this.store.removeConfigOverride(configName);\n    });\n  };\n  /**\n   * Removes the given layer override\n   * @param layerName\n   */\n  StatsigClient.prototype.removeLayerOverride = function (layerName) {\n    var _this = this;\n    this.errorBoundary.swallow('removeLayerOverride', function () {\n      _this.ensureStoreLoaded();\n      _this.store.removeLayerOverride(layerName);\n    });\n  };\n  /**\n   * @deprecated - use removeGateOverride or removeConfig override\n   * Removes the given gate override\n   * @param gateName\n   */\n  StatsigClient.prototype.removeOverride = function (gateName) {\n    var _this = this;\n    this.errorBoundary.swallow('removeOverride', function () {\n      _this.ensureStoreLoaded();\n      _this.store.removeGateOverride(gateName);\n    });\n  };\n  /**\n   * @deprecated - use getAllOverrides to get gate and config overrides\n   * @returns Gate overrides\n   */\n  StatsigClient.prototype.getOverrides = function () {\n    var _this = this;\n    return this.errorBoundary.capture('getOverrides', function () {\n      _this.ensureStoreLoaded();\n      return _this.store.getAllOverrides().gates;\n    }, function () {\n      return {};\n    });\n  };\n  /**\n   * @returns The local gate and config overrides\n   */\n  StatsigClient.prototype.getAllOverrides = function () {\n    var _this = this;\n    return this.errorBoundary.capture('getAllOverrides', function () {\n      _this.ensureStoreLoaded();\n      return _this.store.getAllOverrides();\n    }, function () {\n      return {\n        gates: {},\n        configs: {},\n        layers: {}\n      };\n    });\n  };\n  /**\n   * @returns The Statsig stable ID used for device level experiments\n   */\n  StatsigClient.prototype.getStableID = function () {\n    var _this = this;\n    return this.errorBoundary.capture('getStableID', function () {\n      return _this.identity.getStatsigMetadata().stableID;\n    }, function () {\n      return '';\n    });\n  };\n  StatsigClient.prototype.initializeCalled = function () {\n    return this.initCalled;\n  };\n  // All methods below are for the statsig react native SDK internal usage only!\n  StatsigClient.prototype.setSDKPackageInfo = function (sdkPackageInfo) {\n    if (sdkPackageInfo != null) {\n      this.identity.setSDKPackageInfo(sdkPackageInfo);\n      this.errorBoundary.setStatsigMetadata(this.getStatsigMetadata());\n    }\n  };\n  StatsigClient.setAsyncStorage = function (asyncStorage) {\n    if (asyncStorage != null) {\n      StatsigAsyncStorage_1.default.asyncStorage = asyncStorage;\n    }\n  };\n  StatsigClient.setReactNativeUUID = function (uuid) {\n    if (uuid != null) {\n      StatsigClient.reactNativeUUID = uuid;\n    }\n  };\n  StatsigClient.prototype.setAppState = function (appState) {\n    if (appState != null) {\n      this.appState = appState;\n    }\n  };\n  StatsigClient.prototype.setNativeModules = function (nativeModules) {\n    if (nativeModules != null) {\n      this.identity.setNativeModules(nativeModules);\n    }\n  };\n  StatsigClient.prototype.setPlatform = function (platform) {\n    if (platform != null) {\n      this.identity.setPlatform(platform);\n    }\n  };\n  StatsigClient.prototype.setRNDeviceInfo = function (deviceInfo) {\n    if (deviceInfo != null) {\n      this.identity.setRNDeviceInfo(deviceInfo);\n    }\n  };\n  StatsigClient.prototype.setExpoConstants = function (expoConstants) {\n    if (expoConstants != null) {\n      this.identity.setExpoConstants(expoConstants);\n    }\n  };\n  StatsigClient.prototype.setExpoDevice = function (expoDevice) {\n    if (expoDevice != null) {\n      this.identity.setExpoDevice(expoDevice);\n    }\n  };\n  StatsigClient.prototype.handleOptionalLogging = function () {\n    var _this = this;\n    if (typeof window === 'undefined' || !window) {\n      return;\n    }\n    if (this.optionalLoggingSetup) {\n      return;\n    }\n    if (!window.addEventListener) {\n      return;\n    }\n    var user = this.identity.getUser();\n    if (!this.options.getDisableErrorLogging()) {\n      window.addEventListener('error', function (e) {\n        var _a;\n        var errorObj = e.error;\n        if (errorObj != null && typeof errorObj === 'object') {\n          try {\n            errorObj = JSON.stringify(errorObj);\n          } catch (e) {}\n        }\n        _this.logger.logAppError(user, (_a = e.message) !== null && _a !== void 0 ? _a : '', {\n          filename: e.filename,\n          lineno: e.lineno,\n          colno: e.colno,\n          error_obj: errorObj\n        });\n      });\n    }\n    if (!this.options.getDisableAutoMetricsLogging()) {\n      if (typeof document === 'undefined' || !document || typeof setTimeout === 'undefined' || !setTimeout) {\n        return;\n      }\n      var work_1 = function () {\n        setTimeout(function () {\n          _this.logger.logAppMetrics(user);\n        }, 1000);\n      };\n      if (document.readyState === 'complete') {\n        work_1();\n      } else {\n        window.addEventListener('load', function () {\n          return work_1();\n        });\n      }\n    }\n    this.optionalLoggingSetup = true;\n  };\n  StatsigClient.prototype.handleAppStateChange = function (nextAppState) {\n    var _a;\n    if (this.currentAppState === 'active' && nextAppState.match(/inactive|background/)) {\n      this.logger.flush(true);\n    } else if (((_a = this.currentAppState) === null || _a === void 0 ? void 0 : _a.match(/inactive|background/)) && nextAppState === 'active') {\n      this.logger.sendSavedRequests();\n    }\n    this.currentAppState = nextAppState;\n  };\n  StatsigClient.prototype.shouldTrimParam = function (entity, size) {\n    if (entity == null) return false;\n    if (typeof entity === 'string') return entity.length > size;\n    if (typeof entity === 'object') {\n      return JSON.stringify(entity).length > size;\n    }\n    if (typeof entity === 'number') return entity.toString().length > size;\n    return false;\n  };\n  StatsigClient.prototype.normalizeUser = function (user) {\n    var userCopy = {};\n    try {\n      userCopy = JSON.parse(JSON.stringify(user));\n    } catch (error) {\n      throw new Errors_1.StatsigInvalidArgumentError('User object must be convertable to JSON string.');\n    }\n    userCopy = this.trimUserObjIfNeeded(userCopy);\n    if (this.options.getEnvironment() != null) {\n      // @ts-ignore\n      userCopy.statsigEnvironment = this.options.getEnvironment();\n    }\n    return userCopy;\n  };\n  StatsigClient.prototype.trimUserObjIfNeeded = function (user) {\n    var _a, _b;\n    if (user == null) {\n      return {};\n    }\n    if (this.shouldTrimParam((_a = user.userID) !== null && _a !== void 0 ? _a : null, MAX_VALUE_SIZE)) {\n      console.warn('User ID is too large, trimming to ' + MAX_VALUE_SIZE + 'characters');\n      user.userID = (_b = user.userID) === null || _b === void 0 ? void 0 : _b.toString().substring(0, MAX_VALUE_SIZE);\n    }\n    if (this.shouldTrimParam(user, MAX_OBJ_SIZE)) {\n      user.custom = {};\n      if (this.shouldTrimParam(user, MAX_OBJ_SIZE)) {\n        console.warn('User object is too large, only keeping the user ID.');\n        user = {\n          userID: user.userID\n        };\n      } else {\n        console.warn('User object is too large, dropping the custom property.');\n      }\n    }\n    return user;\n  };\n  StatsigClient.prototype.ensureStoreLoaded = function () {\n    if (!this.store.isLoaded()) {\n      throw new Errors_1.StatsigUninitializedError('Call and wait for initialize() to finish first.');\n    }\n  };\n  StatsigClient.prototype.getEvalutionDetailsForError = function () {\n    return {\n      time: Date.now(),\n      reason: StatsigStore_1.EvaluationReason.Error\n    };\n  };\n  StatsigClient.prototype.fetchAndSaveValues = function (user, prefetchUsers, completionCallback, diagnostics) {\n    if (prefetchUsers === void 0) {\n      prefetchUsers = [];\n    }\n    if (completionCallback === void 0) {\n      completionCallback = null;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var keyedPrefetchUsers, sinceTime;\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (prefetchUsers.length > 5) {\n          console.warn('Cannot prefetch more than 5 users.');\n        }\n        keyedPrefetchUsers = prefetchUsers.slice(0, 5).reduce(function (acc, curr) {\n          acc[(0, Hashing_1.getUserCacheKey)(_this.getStableID(), curr)] = curr;\n          return acc;\n        }, {});\n        sinceTime = null;\n        if (prefetchUsers.length === 0) {\n          sinceTime = this.store.getLastUpdateTime(user);\n        }\n        return [2 /*return*/, this.network.fetchValues(user, sinceTime, this.options.getInitTimeoutMs(), function (json) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n              return [2 /*return*/, this.errorBoundary.swallow('fetchAndSaveValues', function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        diagnostics === null || diagnostics === void 0 ? void 0 : diagnostics.mark(Diagnostics_1.DiagnosticsKey.INITIALIZE, Diagnostics_1.DiagnosticsEvent.START, 'process');\n                        if (!(json === null || json === void 0 ? void 0 : json.has_updates)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.store.save(user, json)];\n                      case 1:\n                        _a.sent();\n                        _a.label = 2;\n                      case 2:\n                        this.prefetchedUsersByCacheKey = __assign(__assign({}, this.prefetchedUsersByCacheKey), keyedPrefetchUsers);\n                        diagnostics === null || diagnostics === void 0 ? void 0 : diagnostics.mark(Diagnostics_1.DiagnosticsKey.INITIALIZE, Diagnostics_1.DiagnosticsEvent.END, 'process');\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              })];\n            });\n          });\n        }, function (e) {}, prefetchUsers.length === 0 ? diagnostics : undefined, prefetchUsers.length > 0 ? keyedPrefetchUsers : undefined).then(function () {\n          completionCallback === null || completionCallback === void 0 ? void 0 : completionCallback(true, null);\n        }).catch(function (e) {\n          completionCallback === null || completionCallback === void 0 ? void 0 : completionCallback(false, e.message);\n        })];\n      });\n    });\n  };\n  StatsigClient.prototype.checkGateImpl = function (gateName, ignoreOverrides) {\n    this.ensureStoreLoaded();\n    if (typeof gateName !== 'string' || gateName.length === 0) {\n      throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the gateName.');\n    }\n    return this.store.checkGate(gateName, ignoreOverrides);\n  };\n  StatsigClient.prototype.logGateExposureImpl = function (gateName, fetchResult) {\n    var isManualExposure = !fetchResult;\n    var result = fetchResult !== null && fetchResult !== void 0 ? fetchResult : this.checkGateImpl(gateName, false);\n    var gate = result.gate;\n    this.logger.logGateExposure(this.getCurrentUser(), gateName, gate.value, gate.rule_id, gate.secondary_exposures, result.evaluationDetails, isManualExposure);\n  };\n  StatsigClient.prototype.getConfigImpl = function (configName, ignoreOverrides) {\n    this.ensureStoreLoaded();\n    if (typeof configName !== 'string' || configName.length === 0) {\n      throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the configName.');\n    }\n    return this.store.getConfig(configName, ignoreOverrides);\n  };\n  StatsigClient.prototype.logConfigExposureImpl = function (configName, config) {\n    var isManualExposure = !config;\n    var localConfig = config !== null && config !== void 0 ? config : this.getConfigImpl(configName, false);\n    this.logger.logConfigExposure(this.getCurrentUser(), configName, localConfig.getRuleID(), localConfig._getSecondaryExposures(), localConfig.getEvaluationDetails(), isManualExposure);\n  };\n  StatsigClient.prototype.getExperimentImpl = function (experimentName, keepDeviceValue, ignoreOverrides) {\n    this.ensureStoreLoaded();\n    if (typeof experimentName !== 'string' || experimentName.length === 0) {\n      throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the experimentName.');\n    }\n    return this.store.getExperiment(experimentName, keepDeviceValue, ignoreOverrides);\n  };\n  StatsigClient.prototype.logExperimentExposureImpl = function (experimentName, keepDeviceValue, config) {\n    var isManualExposure = !config;\n    var localConfig = config !== null && config !== void 0 ? config : this.getExperimentImpl(experimentName, keepDeviceValue, false);\n    this.logger.logConfigExposure(this.getCurrentUser(), experimentName, localConfig.getRuleID(), localConfig._getSecondaryExposures(), localConfig.getEvaluationDetails(), isManualExposure);\n  };\n  StatsigClient.prototype.getLayerImpl = function (logParameterFunction, layerName, keepDeviceValue) {\n    this.ensureStoreLoaded();\n    if (typeof layerName !== 'string' || layerName.length === 0) {\n      throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the layerName.');\n    }\n    return this.store.getLayer(logParameterFunction, layerName, keepDeviceValue);\n  };\n  StatsigClient.prototype.getEmptyConfig = function (configName) {\n    return new DynamicConfig_1.default(configName, {}, '', this.getEvalutionDetailsForError());\n  };\n  return StatsigClient;\n}();\nexports.default = StatsigClient;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","op","TypeError","pop","push","__importDefault","exports","DynamicConfig_1","require","ErrorBoundary_1","Errors_1","Layer_1","LogEvent_1","StatsigIdentity_1","StatsigLogger_1","StatsigNetwork_1","StatsigSDKOptions_1","StatsigStore_1","Hashing_1","StatsigAsyncStorage_1","StatsigLocalStorage_1","Diagnostics_1","MAX_VALUE_SIZE","MAX_OBJ_SIZE","StatsigClient","sdkKey","user","options","_this","appState","currentAppState","initCalled","pendingInitPromise","optionalLoggingSetup","prefetchedUsersByCacheKey","logLayerParameterExposureForLayer","layer","parameterName","isManualExposure","allocatedExperiment","exposures","_getUndelegatedSecondaryExposures","isExplicit","_getExplicitParameters","includes","_getAllocatedExperimentName","_getSecondaryExposures","logger","logLayerExposure","getCurrentUser","getName","getRuleID","_getEvaluationDetails","startsWith","StatsigInvalidArgumentError","errorBoundary","default","ready","disabled","getDisableLocalStorage","initializeDiagnostics","identity","normalizeUser","getOverrideStableID","reactNativeUUID","network","store","initializeValues","setInitializeValues","setStatsigMetadata","getStatsigMetadata","getErrorBoundary","getNetwork","getStore","getLogger","getOptions","getSDKKey","getUser","getCurrentUserCacheKey","getUserCacheKey","getStableID","getSDKType","getSDKVersion","capture","bootstrap","handleOptionalLogging","sendSavedRequests","initializeAsync","_a","startTime","completionCallback","Date","now","mark","DiagnosticsKey","OVERALL","DiagnosticsEvent","START","asyncStorage","initAsync","loadFromAsyncStorage","addEventListener","currentState","handleAppStateChange","bind","getLocalModeEnabled","success","message","cb","getInitCompletionCallback","fetchAndSaveValues","getPrefetchUsers","finally","END","getDisableDiagnosticsLogging","logDiagnostics","prefetchUsers","users","getEvaluationDetails","getGlobalEvaluationDetails","checkGate","gateName","ignoreOverrides","checkGateImpl","logGateExposureImpl","gate","checkGateWithExposureLoggingDisabled","logGateExposure","getConfig","configName","getConfigImpl","logConfigExposureImpl","getEmptyConfig","getConfigWithExposureLoggingDisabled","logConfigExposure","getExperiment","experimentName","keepDeviceValue","getExperimentImpl","logExperimentExposureImpl","getExperimentWithExposureLoggingDisabled","logExperimentExposure","getLayer","layerName","getLayerImpl","_create","getEvalutionDetailsForError","getLayerWithExposureLoggingDisabled","logLayerParameterExposure","logEvent","eventName","metadata","swallow","StatsigUninitializedError","console","error","shouldTrimParam","warn","substring","event","setValue","setMetadata","setUser","log","updateUser","isUserPrefetched","foundCacheValue","currentUser","initializeCalled","Boolean","resetDedupeKeys","catch","shutdown","removeEventListener","cleanup","overrideGate","ensureStoreLoaded","overrideConfig","overrideLayer","removeGateOverride","removeConfigOverride","removeLayerOverride","removeOverride","getOverrides","getAllOverrides","gates","configs","layers","stableID","setSDKPackageInfo","sdkPackageInfo","setAsyncStorage","setReactNativeUUID","uuid","setAppState","setNativeModules","nativeModules","setPlatform","platform","setRNDeviceInfo","deviceInfo","setExpoConstants","expoConstants","setExpoDevice","expoDevice","window","getDisableErrorLogging","errorObj","JSON","stringify","logAppError","filename","lineno","colno","error_obj","getDisableAutoMetricsLogging","document","setTimeout","work_1","logAppMetrics","readyState","nextAppState","match","flush","entity","size","toString","userCopy","parse","trimUserObjIfNeeded","getEnvironment","statsigEnvironment","_b","userID","custom","isLoaded","time","reason","EvaluationReason","Error","diagnostics","keyedPrefetchUsers","sinceTime","slice","reduce","acc","curr","getLastUpdateTime","fetchValues","getInitTimeoutMs","json","INITIALIZE","has_updates","save","fetchResult","rule_id","secondary_exposures","evaluationDetails","config","localConfig","logParameterFunction"],"sources":["/home/diep/freelance/interface/node_modules/statsig-js/dist/StatsigClient.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DynamicConfig_1 = __importDefault(require(\"./DynamicConfig\"));\nvar ErrorBoundary_1 = __importDefault(require(\"./ErrorBoundary\"));\nvar Errors_1 = require(\"./Errors\");\nvar Layer_1 = __importDefault(require(\"./Layer\"));\nvar LogEvent_1 = __importDefault(require(\"./LogEvent\"));\nvar StatsigIdentity_1 = __importDefault(require(\"./StatsigIdentity\"));\nvar StatsigLogger_1 = __importDefault(require(\"./StatsigLogger\"));\nvar StatsigNetwork_1 = __importDefault(require(\"./StatsigNetwork\"));\nvar StatsigSDKOptions_1 = __importDefault(require(\"./StatsigSDKOptions\"));\nvar StatsigStore_1 = __importStar(require(\"./StatsigStore\"));\nvar Hashing_1 = require(\"./utils/Hashing\");\nvar StatsigAsyncStorage_1 = __importDefault(require(\"./utils/StatsigAsyncStorage\"));\nvar StatsigLocalStorage_1 = __importDefault(require(\"./utils/StatsigLocalStorage\"));\nvar Diagnostics_1 = __importStar(require(\"./utils/Diagnostics\"));\nvar MAX_VALUE_SIZE = 64;\nvar MAX_OBJ_SIZE = 2048;\nvar StatsigClient = /** @class */ (function () {\n    function StatsigClient(sdkKey, user, options) {\n        var _this = this;\n        this.appState = null;\n        this.currentAppState = null;\n        this.initCalled = false;\n        this.pendingInitPromise = null;\n        this.optionalLoggingSetup = false;\n        this.prefetchedUsersByCacheKey = {};\n        this.logLayerParameterExposureForLayer = function (layer, parameterName, isManualExposure) {\n            if (isManualExposure === void 0) { isManualExposure = false; }\n            var allocatedExperiment = '';\n            var exposures = layer._getUndelegatedSecondaryExposures();\n            var isExplicit = layer._getExplicitParameters().includes(parameterName);\n            if (isExplicit) {\n                allocatedExperiment = layer._getAllocatedExperimentName();\n                exposures = layer._getSecondaryExposures();\n            }\n            _this.logger.logLayerExposure(_this.getCurrentUser(), layer.getName(), layer.getRuleID(), exposures, allocatedExperiment, parameterName, isExplicit, layer._getEvaluationDetails(), isManualExposure);\n        };\n        if (typeof sdkKey !== 'string' || !sdkKey.startsWith('client-')) {\n            throw new Errors_1.StatsigInvalidArgumentError('Invalid key provided.  You must use a Client SDK Key from the Statsig console to initialize the sdk');\n        }\n        this.errorBoundary = new ErrorBoundary_1.default(sdkKey);\n        this.ready = false;\n        this.sdkKey = sdkKey;\n        this.options = new StatsigSDKOptions_1.default(options);\n        StatsigLocalStorage_1.default.disabled = this.options.getDisableLocalStorage();\n        this.initializeDiagnostics = new Diagnostics_1.default('initialize');\n        this.identity = new StatsigIdentity_1.default(this.normalizeUser(user !== null && user !== void 0 ? user : null), this.options.getOverrideStableID(), StatsigClient.reactNativeUUID);\n        this.network = new StatsigNetwork_1.default(this);\n        this.store = new StatsigStore_1.default(this);\n        this.logger = new StatsigLogger_1.default(this);\n        if ((options === null || options === void 0 ? void 0 : options.initializeValues) != null) {\n            this.setInitializeValues(options === null || options === void 0 ? void 0 : options.initializeValues);\n        }\n        this.errorBoundary.setStatsigMetadata(this.getStatsigMetadata());\n    }\n    StatsigClient.prototype.getErrorBoundary = function () {\n        return this.errorBoundary;\n    };\n    StatsigClient.prototype.getNetwork = function () {\n        return this.network;\n    };\n    StatsigClient.prototype.getStore = function () {\n        return this.store;\n    };\n    StatsigClient.prototype.getLogger = function () {\n        return this.logger;\n    };\n    StatsigClient.prototype.getOptions = function () {\n        return this.options;\n    };\n    StatsigClient.prototype.getSDKKey = function () {\n        if (this.sdkKey == null) {\n            return '';\n        }\n        return this.sdkKey;\n    };\n    StatsigClient.prototype.getCurrentUser = function () {\n        return this.identity.getUser();\n    };\n    StatsigClient.prototype.getCurrentUserCacheKey = function () {\n        return (0, Hashing_1.getUserCacheKey)(this.getStableID(), this.getCurrentUser());\n    };\n    StatsigClient.prototype.getStatsigMetadata = function () {\n        return this.identity.getStatsigMetadata();\n    };\n    StatsigClient.prototype.getSDKType = function () {\n        return this.identity.getSDKType();\n    };\n    StatsigClient.prototype.getSDKVersion = function () {\n        return this.identity.getSDKVersion();\n    };\n    StatsigClient.prototype.setInitializeValues = function (initializeValues) {\n        var _this = this;\n        this.errorBoundary.capture('setInitializeValues', function () {\n            _this.store.bootstrap(_this.getStableID(), initializeValues);\n            if (!_this.ready) {\n                // the sdk is usable and considered initialized when configured\n                // with initializeValues\n                _this.ready = true;\n                _this.initCalled = true;\n            }\n            // we wont have access to window/document/localStorage if these run on the server\n            // so try to run whenever this is called\n            _this.handleOptionalLogging();\n            _this.logger.sendSavedRequests();\n        }, function () {\n            _this.ready = true;\n            _this.initCalled = true;\n        });\n    };\n    StatsigClient.prototype.initializeAsync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.errorBoundary.capture('initializeAsync', function () { return __awaiter(_this, void 0, void 0, function () {\n                        var startTime, completionCallback, user;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    startTime = Date.now();\n                                    if (this.pendingInitPromise != null) {\n                                        return [2 /*return*/, this.pendingInitPromise];\n                                    }\n                                    if (this.ready) {\n                                        return [2 /*return*/, Promise.resolve()];\n                                    }\n                                    this.initializeDiagnostics.mark(Diagnostics_1.DiagnosticsKey.OVERALL, Diagnostics_1.DiagnosticsEvent.START);\n                                    this.initCalled = true;\n                                    if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 3];\n                                    return [4 /*yield*/, this.identity.initAsync()];\n                                case 1:\n                                    _a.sent();\n                                    return [4 /*yield*/, this.store.loadFromAsyncStorage()];\n                                case 2:\n                                    _a.sent();\n                                    _a.label = 3;\n                                case 3:\n                                    if (this.appState &&\n                                        this.appState.addEventListener &&\n                                        typeof this.appState.addEventListener === 'function') {\n                                        this.currentAppState = this.appState.currentState;\n                                        this.appState.addEventListener('change', this.handleAppStateChange.bind(this));\n                                    }\n                                    if (this.options.getLocalModeEnabled()) {\n                                        return [2 /*return*/, Promise.resolve()];\n                                    }\n                                    completionCallback = function (success, message) {\n                                        var cb = _this.options.getInitCompletionCallback();\n                                        if (cb) {\n                                            cb(Date.now() - startTime, success, message);\n                                        }\n                                    };\n                                    user = this.identity.getUser();\n                                    this.pendingInitPromise = this.fetchAndSaveValues(user, this.options.getPrefetchUsers(), completionCallback, this.initializeDiagnostics).finally(function () { return __awaiter(_this, void 0, void 0, function () {\n                                        return __generator(this, function (_a) {\n                                            this.pendingInitPromise = null;\n                                            this.ready = true;\n                                            this.logger.sendSavedRequests();\n                                            this.initializeDiagnostics.mark(Diagnostics_1.DiagnosticsKey.OVERALL, Diagnostics_1.DiagnosticsEvent.END);\n                                            if (!this.options.getDisableDiagnosticsLogging()) {\n                                                this.logger.logDiagnostics(user, this.initializeDiagnostics);\n                                            }\n                                            return [2 /*return*/];\n                                        });\n                                    }); });\n                                    this.handleOptionalLogging();\n                                    return [2 /*return*/, this.pendingInitPromise];\n                            }\n                        });\n                    }); }, function () {\n                        _this.ready = true;\n                        _this.initCalled = true;\n                        return Promise.resolve();\n                    })];\n            });\n        });\n    };\n    StatsigClient.prototype.prefetchUsers = function (users) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!users || users.length == 0) {\n                    return [2 /*return*/];\n                }\n                return [2 /*return*/, this.fetchAndSaveValues(null, users)];\n            });\n        });\n    };\n    StatsigClient.prototype.getEvaluationDetails = function () {\n        return this.store.getGlobalEvaluationDetails();\n    };\n    /**\n     * Checks the value of a gate for the current user\n     * @param {string} gateName - the name of the gate to check\n     * @param {boolean} ignoreOverrides = false if this check should ignore local overrides\n     * @returns {boolean} - value of a gate for the user. Gates are \"off\" (return false) by default\n     * @throws Error if initialize() is not called first, or gateName is not a string\n     */\n    StatsigClient.prototype.checkGate = function (gateName, ignoreOverrides) {\n        var _this = this;\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return this.errorBoundary.capture('checkGate', function () {\n            var result = _this.checkGateImpl(gateName, ignoreOverrides);\n            _this.logGateExposureImpl(gateName, result);\n            return result.gate.value === true;\n        }, function () { return false; });\n    };\n    StatsigClient.prototype.checkGateWithExposureLoggingDisabled = function (gateName, ignoreOverrides) {\n        var _this = this;\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return this.errorBoundary.capture('checkGateWithExposureLoggingDisabled', function () {\n            var result = _this.checkGateImpl(gateName, ignoreOverrides);\n            return result.gate.value === true;\n        }, function () { return false; });\n    };\n    StatsigClient.prototype.logGateExposure = function (gateName) {\n        this.logGateExposureImpl(gateName);\n    };\n    /**\n     * Checks the value of a config for the current user\n     * @param {string} configName - the name of the config to get\n     * @param {boolean} ignoreOverrides = false if this check should ignore local overrides\n     * @returns {DynamicConfig} - value of a config for the user\n     * @throws Error if initialize() is not called first, or configName is not a string\n     */\n    StatsigClient.prototype.getConfig = function (configName, ignoreOverrides) {\n        var _this = this;\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return this.errorBoundary.capture('getConfig', function () {\n            var result = _this.getConfigImpl(configName, ignoreOverrides);\n            _this.logConfigExposureImpl(configName, result);\n            return result;\n        }, function () { return _this.getEmptyConfig(configName); });\n    };\n    StatsigClient.prototype.getConfigWithExposureLoggingDisabled = function (configName, ignoreOverrides) {\n        var _this = this;\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return this.errorBoundary.capture('getConfig', function () {\n            return _this.getConfigImpl(configName, ignoreOverrides);\n        }, function () { return _this.getEmptyConfig(configName); });\n    };\n    StatsigClient.prototype.logConfigExposure = function (configName) {\n        this.logConfigExposureImpl(configName);\n    };\n    /**\n     * Gets the experiment for a given user\n     * @param {string} experimentName - the name of the experiment to get\n     * @param {boolean} keepDeviceValue = false if this should use \"sticky\" values persisted in local storage\n     * @param {boolean} ignoreOverrides = false if this check should ignore local overrides\n     * @returns {DynamicConfig} - value of the experiment for the user, represented by a Dynamic Config object\n     * @throws Error if initialize() is not called first, or experimentName is not a string\n     */\n    StatsigClient.prototype.getExperiment = function (experimentName, keepDeviceValue, ignoreOverrides) {\n        var _this = this;\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return this.errorBoundary.capture('getExperiment', function () {\n            var result = _this.getExperimentImpl(experimentName, keepDeviceValue, ignoreOverrides);\n            _this.logExperimentExposureImpl(experimentName, keepDeviceValue, result);\n            return result;\n        }, function () { return _this.getEmptyConfig(experimentName); });\n    };\n    StatsigClient.prototype.getExperimentWithExposureLoggingDisabled = function (experimentName, keepDeviceValue, ignoreOverrides) {\n        var _this = this;\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        return this.errorBoundary.capture('getExperimentWithExposureLoggingDisabled', function () {\n            return _this.getExperimentImpl(experimentName, keepDeviceValue, ignoreOverrides);\n        }, function () { return _this.getEmptyConfig(experimentName); });\n    };\n    StatsigClient.prototype.logExperimentExposure = function (experimentName, keepDeviceValue) {\n        this.logExperimentExposureImpl(experimentName, keepDeviceValue);\n    };\n    StatsigClient.prototype.getLayer = function (layerName, keepDeviceValue) {\n        var _this = this;\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        return this.errorBoundary.capture('getLayer', function () {\n            return _this.getLayerImpl(_this.logLayerParameterExposureForLayer, layerName, keepDeviceValue);\n        }, function () {\n            return Layer_1.default._create(layerName, {}, '', _this.getEvalutionDetailsForError());\n        });\n    };\n    StatsigClient.prototype.getLayerWithExposureLoggingDisabled = function (layerName, keepDeviceValue) {\n        var _this = this;\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        return this.errorBoundary.capture('getLayerWithExposureLoggingDisabled', function () {\n            return _this.getLayerImpl(null, layerName, keepDeviceValue);\n        }, function () {\n            return Layer_1.default._create(layerName, {}, '', _this.getEvalutionDetailsForError());\n        });\n    };\n    StatsigClient.prototype.logLayerParameterExposure = function (layerName, parameterName, keepDeviceValue) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        var layer = this.getLayerImpl(null, layerName, keepDeviceValue);\n        this.logLayerParameterExposureForLayer(layer, parameterName, true);\n    };\n    StatsigClient.prototype.logEvent = function (eventName, value, metadata) {\n        var _this = this;\n        if (value === void 0) { value = null; }\n        if (metadata === void 0) { metadata = null; }\n        this.errorBoundary.swallow('logEvent', function () {\n            if (!_this.logger || !_this.sdkKey) {\n                throw new Errors_1.StatsigUninitializedError('Must initialize() before logging events.');\n            }\n            if (typeof eventName !== 'string' || eventName.length === 0) {\n                console.error('Event not logged. No valid eventName passed.');\n                return;\n            }\n            if (_this.shouldTrimParam(eventName, MAX_VALUE_SIZE)) {\n                console.warn('eventName is too long, trimming to ' +\n                    MAX_VALUE_SIZE +\n                    ' characters.');\n                eventName = eventName.substring(0, MAX_VALUE_SIZE);\n            }\n            if (typeof value === 'string' &&\n                _this.shouldTrimParam(value, MAX_VALUE_SIZE)) {\n                console.warn('value is too long, trimming to ' + MAX_VALUE_SIZE + '.');\n                value = value.substring(0, MAX_VALUE_SIZE);\n            }\n            if (_this.shouldTrimParam(metadata, MAX_OBJ_SIZE)) {\n                console.warn('metadata is too big. Dropping the metadata.');\n                metadata = { error: 'not logged due to size too large' };\n            }\n            var event = new LogEvent_1.default(eventName);\n            event.setValue(value);\n            event.setMetadata(metadata);\n            event.setUser(_this.getCurrentUser());\n            _this.logger.log(event);\n        });\n    };\n    StatsigClient.prototype.updateUser = function (user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.errorBoundary.capture('updateUser', function () { return __awaiter(_this, void 0, void 0, function () {\n                        var isUserPrefetched, foundCacheValue, currentUser;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (!this.initializeCalled()) {\n                                        throw new Errors_1.StatsigUninitializedError('Call initialize() first.');\n                                    }\n                                    this.identity.updateUser(this.normalizeUser(user));\n                                    isUserPrefetched = Boolean(this.prefetchedUsersByCacheKey[this.getCurrentUserCacheKey()]);\n                                    foundCacheValue = this.store.updateUser(isUserPrefetched);\n                                    this.logger.resetDedupeKeys();\n                                    if (foundCacheValue && isUserPrefetched) {\n                                        return [2 /*return*/, Promise.resolve(true)];\n                                    }\n                                    if (!(this.pendingInitPromise != null)) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, this.pendingInitPromise];\n                                case 1:\n                                    _a.sent();\n                                    _a.label = 2;\n                                case 2:\n                                    if (this.options.getLocalModeEnabled()) {\n                                        return [2 /*return*/, Promise.resolve(true)];\n                                    }\n                                    currentUser = this.identity.getUser();\n                                    this.pendingInitPromise = this.fetchAndSaveValues(currentUser).finally(function () {\n                                        _this.pendingInitPromise = null;\n                                    });\n                                    return [2 /*return*/, this.pendingInitPromise\n                                            .then(function () {\n                                            return Promise.resolve(true);\n                                        })\n                                            .catch(function () {\n                                            return Promise.resolve(false);\n                                        })];\n                            }\n                        });\n                    }); }, function () { return Promise.resolve(false); })];\n            });\n        });\n    };\n    /**\n     * Informs the statsig SDK that the client is closing or shutting down\n     * so the SDK can clean up internal state\n     */\n    StatsigClient.prototype.shutdown = function () {\n        var _this = this;\n        this.errorBoundary.swallow('shutdown', function () {\n            _this.logger.shutdown();\n            if (_this.appState &&\n                _this.appState.removeEventListener &&\n                typeof _this.appState.removeEventListener === 'function') {\n                _this.appState.removeEventListener('change', _this.handleAppStateChange.bind(_this));\n            }\n            StatsigLocalStorage_1.default.cleanup();\n        });\n    };\n    /**\n     * Stores a local gate override\n     * @param gateName the gate to override\n     * @param value the value to override the gate to\n     */\n    StatsigClient.prototype.overrideGate = function (gateName, value) {\n        var _this = this;\n        this.errorBoundary.swallow('overrideGate', function () {\n            _this.ensureStoreLoaded();\n            _this.store.overrideGate(gateName, value);\n        });\n    };\n    /**\n     * Stores a local config override\n     * @param configName the config to override\n     * @param value the json value to override the config to\n     */\n    StatsigClient.prototype.overrideConfig = function (configName, value) {\n        var _this = this;\n        this.errorBoundary.swallow('overrideConfig', function () {\n            _this.ensureStoreLoaded();\n            _this.store.overrideConfig(configName, value);\n        });\n    };\n    /**\n     * Stores a local layer override\n     * @param layerName the layer to override\n     * @param value the json value to override the config to\n     */\n    StatsigClient.prototype.overrideLayer = function (layerName, value) {\n        var _this = this;\n        this.errorBoundary.swallow('overrideLayer', function () {\n            _this.ensureStoreLoaded();\n            _this.store.overrideLayer(layerName, value);\n        });\n    };\n    /**\n     * Removes the given gate override\n     * @param gateName\n     */\n    StatsigClient.prototype.removeGateOverride = function (gateName) {\n        var _this = this;\n        this.errorBoundary.swallow('removeGateOverride', function () {\n            _this.ensureStoreLoaded();\n            _this.store.removeGateOverride(gateName);\n        });\n    };\n    /**\n     * Removes the given config override\n     * @param configName\n     */\n    StatsigClient.prototype.removeConfigOverride = function (configName) {\n        var _this = this;\n        this.errorBoundary.swallow('removeConfigOverride', function () {\n            _this.ensureStoreLoaded();\n            _this.store.removeConfigOverride(configName);\n        });\n    };\n    /**\n     * Removes the given layer override\n     * @param layerName\n     */\n    StatsigClient.prototype.removeLayerOverride = function (layerName) {\n        var _this = this;\n        this.errorBoundary.swallow('removeLayerOverride', function () {\n            _this.ensureStoreLoaded();\n            _this.store.removeLayerOverride(layerName);\n        });\n    };\n    /**\n     * @deprecated - use removeGateOverride or removeConfig override\n     * Removes the given gate override\n     * @param gateName\n     */\n    StatsigClient.prototype.removeOverride = function (gateName) {\n        var _this = this;\n        this.errorBoundary.swallow('removeOverride', function () {\n            _this.ensureStoreLoaded();\n            _this.store.removeGateOverride(gateName);\n        });\n    };\n    /**\n     * @deprecated - use getAllOverrides to get gate and config overrides\n     * @returns Gate overrides\n     */\n    StatsigClient.prototype.getOverrides = function () {\n        var _this = this;\n        return this.errorBoundary.capture('getOverrides', function () {\n            _this.ensureStoreLoaded();\n            return _this.store.getAllOverrides().gates;\n        }, function () { return ({}); });\n    };\n    /**\n     * @returns The local gate and config overrides\n     */\n    StatsigClient.prototype.getAllOverrides = function () {\n        var _this = this;\n        return this.errorBoundary.capture('getAllOverrides', function () {\n            _this.ensureStoreLoaded();\n            return _this.store.getAllOverrides();\n        }, function () { return ({ gates: {}, configs: {}, layers: {} }); });\n    };\n    /**\n     * @returns The Statsig stable ID used for device level experiments\n     */\n    StatsigClient.prototype.getStableID = function () {\n        var _this = this;\n        return this.errorBoundary.capture('getStableID', function () { return _this.identity.getStatsigMetadata().stableID; }, function () { return ''; });\n    };\n    StatsigClient.prototype.initializeCalled = function () {\n        return this.initCalled;\n    };\n    // All methods below are for the statsig react native SDK internal usage only!\n    StatsigClient.prototype.setSDKPackageInfo = function (sdkPackageInfo) {\n        if (sdkPackageInfo != null) {\n            this.identity.setSDKPackageInfo(sdkPackageInfo);\n            this.errorBoundary.setStatsigMetadata(this.getStatsigMetadata());\n        }\n    };\n    StatsigClient.setAsyncStorage = function (asyncStorage) {\n        if (asyncStorage != null) {\n            StatsigAsyncStorage_1.default.asyncStorage = asyncStorage;\n        }\n    };\n    StatsigClient.setReactNativeUUID = function (uuid) {\n        if (uuid != null) {\n            StatsigClient.reactNativeUUID = uuid;\n        }\n    };\n    StatsigClient.prototype.setAppState = function (appState) {\n        if (appState != null) {\n            this.appState = appState;\n        }\n    };\n    StatsigClient.prototype.setNativeModules = function (nativeModules) {\n        if (nativeModules != null) {\n            this.identity.setNativeModules(nativeModules);\n        }\n    };\n    StatsigClient.prototype.setPlatform = function (platform) {\n        if (platform != null) {\n            this.identity.setPlatform(platform);\n        }\n    };\n    StatsigClient.prototype.setRNDeviceInfo = function (deviceInfo) {\n        if (deviceInfo != null) {\n            this.identity.setRNDeviceInfo(deviceInfo);\n        }\n    };\n    StatsigClient.prototype.setExpoConstants = function (expoConstants) {\n        if (expoConstants != null) {\n            this.identity.setExpoConstants(expoConstants);\n        }\n    };\n    StatsigClient.prototype.setExpoDevice = function (expoDevice) {\n        if (expoDevice != null) {\n            this.identity.setExpoDevice(expoDevice);\n        }\n    };\n    StatsigClient.prototype.handleOptionalLogging = function () {\n        var _this = this;\n        if (typeof window === 'undefined' || !window) {\n            return;\n        }\n        if (this.optionalLoggingSetup) {\n            return;\n        }\n        if (!window.addEventListener) {\n            return;\n        }\n        var user = this.identity.getUser();\n        if (!this.options.getDisableErrorLogging()) {\n            window.addEventListener('error', function (e) {\n                var _a;\n                var errorObj = e.error;\n                if (errorObj != null && typeof errorObj === 'object') {\n                    try {\n                        errorObj = JSON.stringify(errorObj);\n                    }\n                    catch (e) { }\n                }\n                _this.logger.logAppError(user, (_a = e.message) !== null && _a !== void 0 ? _a : '', {\n                    filename: e.filename,\n                    lineno: e.lineno,\n                    colno: e.colno,\n                    error_obj: errorObj,\n                });\n            });\n        }\n        if (!this.options.getDisableAutoMetricsLogging()) {\n            if (typeof document === 'undefined' ||\n                !document ||\n                typeof setTimeout === 'undefined' ||\n                !setTimeout) {\n                return;\n            }\n            var work_1 = function () {\n                setTimeout(function () {\n                    _this.logger.logAppMetrics(user);\n                }, 1000);\n            };\n            if (document.readyState === 'complete') {\n                work_1();\n            }\n            else {\n                window.addEventListener('load', function () { return work_1(); });\n            }\n        }\n        this.optionalLoggingSetup = true;\n    };\n    StatsigClient.prototype.handleAppStateChange = function (nextAppState) {\n        var _a;\n        if (this.currentAppState === 'active' &&\n            nextAppState.match(/inactive|background/)) {\n            this.logger.flush(true);\n        }\n        else if (((_a = this.currentAppState) === null || _a === void 0 ? void 0 : _a.match(/inactive|background/)) &&\n            nextAppState === 'active') {\n            this.logger.sendSavedRequests();\n        }\n        this.currentAppState = nextAppState;\n    };\n    StatsigClient.prototype.shouldTrimParam = function (entity, size) {\n        if (entity == null)\n            return false;\n        if (typeof entity === 'string')\n            return entity.length > size;\n        if (typeof entity === 'object') {\n            return JSON.stringify(entity).length > size;\n        }\n        if (typeof entity === 'number')\n            return entity.toString().length > size;\n        return false;\n    };\n    StatsigClient.prototype.normalizeUser = function (user) {\n        var userCopy = {};\n        try {\n            userCopy = JSON.parse(JSON.stringify(user));\n        }\n        catch (error) {\n            throw new Errors_1.StatsigInvalidArgumentError('User object must be convertable to JSON string.');\n        }\n        userCopy = this.trimUserObjIfNeeded(userCopy);\n        if (this.options.getEnvironment() != null) {\n            // @ts-ignore\n            userCopy.statsigEnvironment = this.options.getEnvironment();\n        }\n        return userCopy;\n    };\n    StatsigClient.prototype.trimUserObjIfNeeded = function (user) {\n        var _a, _b;\n        if (user == null) {\n            return {};\n        }\n        if (this.shouldTrimParam((_a = user.userID) !== null && _a !== void 0 ? _a : null, MAX_VALUE_SIZE)) {\n            console.warn('User ID is too large, trimming to ' + MAX_VALUE_SIZE + 'characters');\n            user.userID = (_b = user.userID) === null || _b === void 0 ? void 0 : _b.toString().substring(0, MAX_VALUE_SIZE);\n        }\n        if (this.shouldTrimParam(user, MAX_OBJ_SIZE)) {\n            user.custom = {};\n            if (this.shouldTrimParam(user, MAX_OBJ_SIZE)) {\n                console.warn('User object is too large, only keeping the user ID.');\n                user = { userID: user.userID };\n            }\n            else {\n                console.warn('User object is too large, dropping the custom property.');\n            }\n        }\n        return user;\n    };\n    StatsigClient.prototype.ensureStoreLoaded = function () {\n        if (!this.store.isLoaded()) {\n            throw new Errors_1.StatsigUninitializedError('Call and wait for initialize() to finish first.');\n        }\n    };\n    StatsigClient.prototype.getEvalutionDetailsForError = function () {\n        return {\n            time: Date.now(),\n            reason: StatsigStore_1.EvaluationReason.Error,\n        };\n    };\n    StatsigClient.prototype.fetchAndSaveValues = function (user, prefetchUsers, completionCallback, diagnostics) {\n        if (prefetchUsers === void 0) { prefetchUsers = []; }\n        if (completionCallback === void 0) { completionCallback = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            var keyedPrefetchUsers, sinceTime;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (prefetchUsers.length > 5) {\n                    console.warn('Cannot prefetch more than 5 users.');\n                }\n                keyedPrefetchUsers = prefetchUsers.slice(0, 5).reduce(function (acc, curr) {\n                    acc[(0, Hashing_1.getUserCacheKey)(_this.getStableID(), curr)] = curr;\n                    return acc;\n                }, {});\n                sinceTime = null;\n                if (prefetchUsers.length === 0) {\n                    sinceTime = this.store.getLastUpdateTime(user);\n                }\n                return [2 /*return*/, this.network\n                        .fetchValues(user, sinceTime, this.options.getInitTimeoutMs(), function (json) { return __awaiter(_this, void 0, void 0, function () {\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            return [2 /*return*/, this.errorBoundary.swallow('fetchAndSaveValues', function () { return __awaiter(_this, void 0, void 0, function () {\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                diagnostics === null || diagnostics === void 0 ? void 0 : diagnostics.mark(Diagnostics_1.DiagnosticsKey.INITIALIZE, Diagnostics_1.DiagnosticsEvent.START, 'process');\n                                                if (!(json === null || json === void 0 ? void 0 : json.has_updates)) return [3 /*break*/, 2];\n                                                return [4 /*yield*/, this.store.save(user, json)];\n                                            case 1:\n                                                _a.sent();\n                                                _a.label = 2;\n                                            case 2:\n                                                this.prefetchedUsersByCacheKey = __assign(__assign({}, this.prefetchedUsersByCacheKey), keyedPrefetchUsers);\n                                                diagnostics === null || diagnostics === void 0 ? void 0 : diagnostics.mark(Diagnostics_1.DiagnosticsKey.INITIALIZE, Diagnostics_1.DiagnosticsEvent.END, 'process');\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                }); })];\n                        });\n                    }); }, function (e) { }, prefetchUsers.length === 0 ? diagnostics : undefined, prefetchUsers.length > 0 ? keyedPrefetchUsers : undefined)\n                        .then(function () {\n                        completionCallback === null || completionCallback === void 0 ? void 0 : completionCallback(true, null);\n                    })\n                        .catch(function (e) {\n                        completionCallback === null || completionCallback === void 0 ? void 0 : completionCallback(false, e.message);\n                    })];\n            });\n        });\n    };\n    StatsigClient.prototype.checkGateImpl = function (gateName, ignoreOverrides) {\n        this.ensureStoreLoaded();\n        if (typeof gateName !== 'string' || gateName.length === 0) {\n            throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the gateName.');\n        }\n        return this.store.checkGate(gateName, ignoreOverrides);\n    };\n    StatsigClient.prototype.logGateExposureImpl = function (gateName, fetchResult) {\n        var isManualExposure = !fetchResult;\n        var result = fetchResult !== null && fetchResult !== void 0 ? fetchResult : this.checkGateImpl(gateName, false);\n        var gate = result.gate;\n        this.logger.logGateExposure(this.getCurrentUser(), gateName, gate.value, gate.rule_id, gate.secondary_exposures, result.evaluationDetails, isManualExposure);\n    };\n    StatsigClient.prototype.getConfigImpl = function (configName, ignoreOverrides) {\n        this.ensureStoreLoaded();\n        if (typeof configName !== 'string' || configName.length === 0) {\n            throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the configName.');\n        }\n        return this.store.getConfig(configName, ignoreOverrides);\n    };\n    StatsigClient.prototype.logConfigExposureImpl = function (configName, config) {\n        var isManualExposure = !config;\n        var localConfig = config !== null && config !== void 0 ? config : this.getConfigImpl(configName, false);\n        this.logger.logConfigExposure(this.getCurrentUser(), configName, localConfig.getRuleID(), localConfig._getSecondaryExposures(), localConfig.getEvaluationDetails(), isManualExposure);\n    };\n    StatsigClient.prototype.getExperimentImpl = function (experimentName, keepDeviceValue, ignoreOverrides) {\n        this.ensureStoreLoaded();\n        if (typeof experimentName !== 'string' || experimentName.length === 0) {\n            throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the experimentName.');\n        }\n        return this.store.getExperiment(experimentName, keepDeviceValue, ignoreOverrides);\n    };\n    StatsigClient.prototype.logExperimentExposureImpl = function (experimentName, keepDeviceValue, config) {\n        var isManualExposure = !config;\n        var localConfig = config !== null && config !== void 0 ? config : this.getExperimentImpl(experimentName, keepDeviceValue, false);\n        this.logger.logConfigExposure(this.getCurrentUser(), experimentName, localConfig.getRuleID(), localConfig._getSecondaryExposures(), localConfig.getEvaluationDetails(), isManualExposure);\n    };\n    StatsigClient.prototype.getLayerImpl = function (logParameterFunction, layerName, keepDeviceValue) {\n        this.ensureStoreLoaded();\n        if (typeof layerName !== 'string' || layerName.length === 0) {\n            throw new Errors_1.StatsigInvalidArgumentError('Must pass a valid string as the layerName.');\n        }\n        return this.store.getLayer(logParameterFunction, layerName, keepDeviceValue);\n    };\n    StatsigClient.prototype.getEmptyConfig = function (configName) {\n        return new DynamicConfig_1.default(configName, {}, '', this.getEvalutionDetailsForError());\n    };\n    return StatsigClient;\n}());\nexports.default = StatsigClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}