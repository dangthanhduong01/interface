{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNftGraphqlEnabled } from 'featureFlags/flags/nftlGraphql';\nimport gql from 'graphql-tag';\nimport { useMemo } from 'react';\nimport { useTrendingCollectionsQuery } from '../__generated__/types-and-hooks';\ngql`\n  query TrendingCollections($size: Int, $timePeriod: HistoryDuration) {\n    topCollections(first: $size, duration: $timePeriod) {\n      edges {\n        node {\n          name\n          nftContracts {\n            address\n            totalSupply\n          }\n          image {\n            url\n          }\n          bannerImage {\n            url\n          }\n          isVerified\n          markets(currencies: ETH) {\n            floorPrice {\n              value\n            }\n            owners\n            totalVolume {\n              value\n            }\n            volume(duration: $timePeriod) {\n              value\n            }\n            volumePercentChange(duration: $timePeriod) {\n              value\n            }\n            floorPricePercentChange(duration: $timePeriod) {\n              value\n            }\n            sales {\n              value\n            }\n            listings {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport function useTrendingCollections(size, timePeriod) {\n  _s();\n  var _data$topCollections2;\n  const isNftGraphqlEnabled = useNftGraphqlEnabled();\n  const {\n    data,\n    loading,\n    error\n  } = useTrendingCollectionsQuery({\n    variables: {\n      size,\n      timePeriod\n    },\n    skip: !isNftGraphqlEnabled\n  });\n  const trendingCollections = useMemo(() => {\n    var _data$topCollections, _data$topCollections$;\n    return data === null || data === void 0 ? void 0 : (_data$topCollections = data.topCollections) === null || _data$topCollections === void 0 ? void 0 : (_data$topCollections$ = _data$topCollections.edges) === null || _data$topCollections$ === void 0 ? void 0 : _data$topCollections$.map(edge => {\n      var _collection$nftContra, _collection$nftContra2, _collection$image, _collection$bannerIma, _collection$markets, _collection$markets$, _collection$markets$$, _collection$markets2, _collection$markets2$, _collection$markets2$2, _collection$markets3, _collection$markets3$, _collection$markets3$2, _collection$markets4, _collection$markets4$, _collection$markets4$2, _collection$markets5, _collection$markets5$, _collection$markets5$2, _collection$markets$2, _collection$markets6, _collection$markets6$, _collection$markets6$2, _collection$nftContra3, _collection$nftContra4, _collection$nftContra5, _collection$markets7, _collection$markets7$, _collection$markets8, _collection$markets8$, _collection$markets8$2, _collection$nftContra6, _collection$nftContra7;\n      const collection = edge === null || edge === void 0 ? void 0 : edge.node;\n      return {\n        name: collection.name,\n        address: (_collection$nftContra = collection.nftContracts) === null || _collection$nftContra === void 0 ? void 0 : (_collection$nftContra2 = _collection$nftContra[0]) === null || _collection$nftContra2 === void 0 ? void 0 : _collection$nftContra2.address,\n        imageUrl: (_collection$image = collection.image) === null || _collection$image === void 0 ? void 0 : _collection$image.url,\n        bannerImageUrl: (_collection$bannerIma = collection.bannerImage) === null || _collection$bannerIma === void 0 ? void 0 : _collection$bannerIma.url,\n        isVerified: collection.isVerified,\n        volume: (_collection$markets = collection.markets) === null || _collection$markets === void 0 ? void 0 : (_collection$markets$ = _collection$markets[0]) === null || _collection$markets$ === void 0 ? void 0 : (_collection$markets$$ = _collection$markets$.volume) === null || _collection$markets$$ === void 0 ? void 0 : _collection$markets$$.value,\n        volumeChange: (_collection$markets2 = collection.markets) === null || _collection$markets2 === void 0 ? void 0 : (_collection$markets2$ = _collection$markets2[0]) === null || _collection$markets2$ === void 0 ? void 0 : (_collection$markets2$2 = _collection$markets2$.volumePercentChange) === null || _collection$markets2$2 === void 0 ? void 0 : _collection$markets2$2.value,\n        floor: (_collection$markets3 = collection.markets) === null || _collection$markets3 === void 0 ? void 0 : (_collection$markets3$ = _collection$markets3[0]) === null || _collection$markets3$ === void 0 ? void 0 : (_collection$markets3$2 = _collection$markets3$.floorPrice) === null || _collection$markets3$2 === void 0 ? void 0 : _collection$markets3$2.value,\n        floorChange: (_collection$markets4 = collection.markets) === null || _collection$markets4 === void 0 ? void 0 : (_collection$markets4$ = _collection$markets4[0]) === null || _collection$markets4$ === void 0 ? void 0 : (_collection$markets4$2 = _collection$markets4$.floorPricePercentChange) === null || _collection$markets4$2 === void 0 ? void 0 : _collection$markets4$2.value,\n        marketCap: (_collection$markets5 = collection.markets) === null || _collection$markets5 === void 0 ? void 0 : (_collection$markets5$ = _collection$markets5[0]) === null || _collection$markets5$ === void 0 ? void 0 : (_collection$markets5$2 = _collection$markets5$.totalVolume) === null || _collection$markets5$2 === void 0 ? void 0 : _collection$markets5$2.value,\n        percentListed: ((_collection$markets$2 = (_collection$markets6 = collection.markets) === null || _collection$markets6 === void 0 ? void 0 : (_collection$markets6$ = _collection$markets6[0]) === null || _collection$markets6$ === void 0 ? void 0 : (_collection$markets6$2 = _collection$markets6$.listings) === null || _collection$markets6$2 === void 0 ? void 0 : _collection$markets6$2.value) !== null && _collection$markets$2 !== void 0 ? _collection$markets$2 : 0) / ((_collection$nftContra3 = (_collection$nftContra4 = collection.nftContracts) === null || _collection$nftContra4 === void 0 ? void 0 : (_collection$nftContra5 = _collection$nftContra4[0]) === null || _collection$nftContra5 === void 0 ? void 0 : _collection$nftContra5.totalSupply) !== null && _collection$nftContra3 !== void 0 ? _collection$nftContra3 : 1),\n        owners: (_collection$markets7 = collection.markets) === null || _collection$markets7 === void 0 ? void 0 : (_collection$markets7$ = _collection$markets7[0]) === null || _collection$markets7$ === void 0 ? void 0 : _collection$markets7$.owners,\n        sales: (_collection$markets8 = collection.markets) === null || _collection$markets8 === void 0 ? void 0 : (_collection$markets8$ = _collection$markets8[0]) === null || _collection$markets8$ === void 0 ? void 0 : (_collection$markets8$2 = _collection$markets8$.sales) === null || _collection$markets8$2 === void 0 ? void 0 : _collection$markets8$2.value,\n        totalSupply: (_collection$nftContra6 = collection.nftContracts) === null || _collection$nftContra6 === void 0 ? void 0 : (_collection$nftContra7 = _collection$nftContra6[0]) === null || _collection$nftContra7 === void 0 ? void 0 : _collection$nftContra7.totalSupply\n      };\n    });\n  }, [data === null || data === void 0 ? void 0 : (_data$topCollections2 = data.topCollections) === null || _data$topCollections2 === void 0 ? void 0 : _data$topCollections2.edges]);\n  return {\n    data: trendingCollections,\n    loading,\n    error\n  };\n}\n_s(useTrendingCollections, \"eR5G6TWjgAdwMMknGeHWKHifqfA=\", false, function () {\n  return [useNftGraphqlEnabled, useTrendingCollectionsQuery];\n});","map":{"version":3,"names":["useNftGraphqlEnabled","gql","useMemo","useTrendingCollectionsQuery","useTrendingCollections","size","timePeriod","isNftGraphqlEnabled","data","loading","error","variables","skip","trendingCollections","topCollections","edges","map","edge","collection","node","name","address","nftContracts","imageUrl","image","url","bannerImageUrl","bannerImage","isVerified","volume","markets","value","volumeChange","volumePercentChange","floor","floorPrice","floorChange","floorPricePercentChange","marketCap","totalVolume","percentListed","listings","totalSupply","owners","sales"],"sources":["/home/diep/freelance/interface/src/graphql/data/nft/TrendingCollections.ts"],"sourcesContent":["import { useNftGraphqlEnabled } from 'featureFlags/flags/nftlGraphql'\nimport gql from 'graphql-tag'\nimport { TrendingCollection } from 'nft/types'\nimport { useMemo } from 'react'\n\nimport { HistoryDuration, useTrendingCollectionsQuery } from '../__generated__/types-and-hooks'\n\ngql`\n  query TrendingCollections($size: Int, $timePeriod: HistoryDuration) {\n    topCollections(first: $size, duration: $timePeriod) {\n      edges {\n        node {\n          name\n          nftContracts {\n            address\n            totalSupply\n          }\n          image {\n            url\n          }\n          bannerImage {\n            url\n          }\n          isVerified\n          markets(currencies: ETH) {\n            floorPrice {\n              value\n            }\n            owners\n            totalVolume {\n              value\n            }\n            volume(duration: $timePeriod) {\n              value\n            }\n            volumePercentChange(duration: $timePeriod) {\n              value\n            }\n            floorPricePercentChange(duration: $timePeriod) {\n              value\n            }\n            sales {\n              value\n            }\n            listings {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport function useTrendingCollections(size: number, timePeriod: HistoryDuration) {\n  const isNftGraphqlEnabled = useNftGraphqlEnabled()\n  const { data, loading, error } = useTrendingCollectionsQuery({\n    variables: {\n      size,\n      timePeriod,\n    },\n    skip: !isNftGraphqlEnabled,\n  })\n\n  const trendingCollections: TrendingCollection[] | undefined = useMemo(\n    () =>\n      data?.topCollections?.edges?.map((edge) => {\n        const collection = edge?.node\n        return {\n          name: collection.name,\n          address: collection.nftContracts?.[0]?.address,\n          imageUrl: collection.image?.url,\n          bannerImageUrl: collection.bannerImage?.url,\n          isVerified: collection.isVerified,\n          volume: collection.markets?.[0]?.volume?.value,\n          volumeChange: collection.markets?.[0]?.volumePercentChange?.value,\n          floor: collection.markets?.[0]?.floorPrice?.value,\n          floorChange: collection.markets?.[0]?.floorPricePercentChange?.value,\n          marketCap: collection.markets?.[0]?.totalVolume?.value,\n          percentListed:\n            (collection.markets?.[0]?.listings?.value ?? 0) / (collection.nftContracts?.[0]?.totalSupply ?? 1),\n          owners: collection.markets?.[0]?.owners,\n          sales: collection.markets?.[0]?.sales?.value,\n          totalSupply: collection.nftContracts?.[0]?.totalSupply,\n        }\n      }),\n    [data?.topCollections?.edges]\n  )\n\n  return {\n    data: trendingCollections,\n    loading,\n    error,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}