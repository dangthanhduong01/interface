{"ast":null,"code":"var _s = $RefreshSig$();\nimport { sendAnalyticsEvent } from '@uniswap/analytics';\nimport { InterfaceEventName } from '@uniswap/analytics-events';\nimport { UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport usePermit2Allowance, { AllowanceState } from 'hooks/usePermit2Allowance';\nimport { useCallback, useMemo, useState } from 'react';\nimport invariant from 'tiny-invariant';\n\n// TODO: This should be removed when the sdk is updated to include the new UR address\nconst NFT_UNIVERSAL_ROUTER_MAINNET_ADDRESS = '0x4c60051384bd2d3c01bfc845cf5f4b44bcbe9de5';\nexport default function usePermit2Approval(amount, maximumAmount, enabled, shouldUseNftRouter) {\n  _s();\n  const {\n    chainId\n  } = useWeb3React();\n  const allowance = usePermit2Allowance(enabled ? maximumAmount !== null && maximumAmount !== void 0 ? maximumAmount : (amount === null || amount === void 0 ? void 0 : amount.currency.isToken) ? amount : undefined : undefined, enabled && chainId ? shouldUseNftRouter && chainId === 1 ? NFT_UNIVERSAL_ROUTER_MAINNET_ADDRESS : UNIVERSAL_ROUTER_ADDRESS(chainId) : undefined);\n  const isApprovalLoading = allowance.state === AllowanceState.REQUIRED && allowance.isApprovalLoading;\n  const [isAllowancePending, setIsAllowancePending] = useState(false);\n  const updateAllowance = useCallback(async () => {\n    invariant(allowance.state === AllowanceState.REQUIRED);\n    setIsAllowancePending(true);\n    try {\n      await allowance.approveAndPermit();\n      sendAnalyticsEvent(InterfaceEventName.APPROVE_TOKEN_TXN_SUBMITTED, {\n        chain_id: chainId,\n        token_symbol: maximumAmount === null || maximumAmount === void 0 ? void 0 : maximumAmount.currency.symbol,\n        token_address: maximumAmount === null || maximumAmount === void 0 ? void 0 : maximumAmount.currency.address\n      });\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setIsAllowancePending(false);\n    }\n  }, [allowance, chainId, maximumAmount === null || maximumAmount === void 0 ? void 0 : maximumAmount.currency.address, maximumAmount === null || maximumAmount === void 0 ? void 0 : maximumAmount.currency.symbol]);\n  return useMemo(() => {\n    return {\n      allowance,\n      isApprovalLoading,\n      isAllowancePending,\n      updateAllowance\n    };\n  }, [allowance, isAllowancePending, isApprovalLoading, updateAllowance]);\n}\n_s(usePermit2Approval, \"Ov0e/E6n/Ak56bNpQGLVDXcI5bY=\", false, function () {\n  return [useWeb3React, usePermit2Allowance];\n});","map":{"version":3,"names":["sendAnalyticsEvent","InterfaceEventName","UNIVERSAL_ROUTER_ADDRESS","useWeb3React","usePermit2Allowance","AllowanceState","useCallback","useMemo","useState","invariant","NFT_UNIVERSAL_ROUTER_MAINNET_ADDRESS","usePermit2Approval","amount","maximumAmount","enabled","shouldUseNftRouter","chainId","allowance","currency","isToken","undefined","isApprovalLoading","state","REQUIRED","isAllowancePending","setIsAllowancePending","updateAllowance","approveAndPermit","APPROVE_TOKEN_TXN_SUBMITTED","chain_id","token_symbol","symbol","token_address","address","e","console","error"],"sources":["/home/diep/freelance/interface/src/nft/hooks/usePermit2Approval.ts"],"sourcesContent":["import { sendAnalyticsEvent } from '@uniswap/analytics'\nimport { InterfaceEventName } from '@uniswap/analytics-events'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport usePermit2Allowance, { AllowanceState } from 'hooks/usePermit2Allowance'\nimport { useCallback, useMemo, useState } from 'react'\nimport invariant from 'tiny-invariant'\n\n// TODO: This should be removed when the sdk is updated to include the new UR address\nconst NFT_UNIVERSAL_ROUTER_MAINNET_ADDRESS = '0x4c60051384bd2d3c01bfc845cf5f4b44bcbe9de5'\n\nexport default function usePermit2Approval(\n  amount?: CurrencyAmount<Token>,\n  maximumAmount?: CurrencyAmount<Token>,\n  enabled?: boolean,\n  shouldUseNftRouter?: boolean\n) {\n  const { chainId } = useWeb3React()\n\n  const allowance = usePermit2Allowance(\n    enabled ? maximumAmount ?? (amount?.currency.isToken ? (amount as CurrencyAmount<Token>) : undefined) : undefined,\n    enabled && chainId\n      ? shouldUseNftRouter && chainId === 1\n        ? NFT_UNIVERSAL_ROUTER_MAINNET_ADDRESS\n        : UNIVERSAL_ROUTER_ADDRESS(chainId)\n      : undefined\n  )\n  const isApprovalLoading = allowance.state === AllowanceState.REQUIRED && allowance.isApprovalLoading\n  const [isAllowancePending, setIsAllowancePending] = useState(false)\n  const updateAllowance = useCallback(async () => {\n    invariant(allowance.state === AllowanceState.REQUIRED)\n    setIsAllowancePending(true)\n    try {\n      await allowance.approveAndPermit()\n      sendAnalyticsEvent(InterfaceEventName.APPROVE_TOKEN_TXN_SUBMITTED, {\n        chain_id: chainId,\n        token_symbol: maximumAmount?.currency.symbol,\n        token_address: maximumAmount?.currency.address,\n      })\n    } catch (e) {\n      console.error(e)\n    } finally {\n      setIsAllowancePending(false)\n    }\n  }, [allowance, chainId, maximumAmount?.currency.address, maximumAmount?.currency.symbol])\n\n  return useMemo(() => {\n    return {\n      allowance,\n      isApprovalLoading,\n      isAllowancePending,\n      updateAllowance,\n    }\n  }, [allowance, isAllowancePending, isApprovalLoading, updateAllowance])\n}\n"],"mappings":";AAAA,SAASA,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,kBAAkB,QAAQ,2BAA2B;AAE9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,mBAAmB,IAAIC,cAAc,QAAQ,2BAA2B;AAC/E,SAASC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA,MAAMC,oCAAoC,GAAG,4CAA4C;AAEzF,eAAe,SAASC,kBAAkB,CACxCC,MAA8B,EAC9BC,aAAqC,EACrCC,OAAiB,EACjBC,kBAA4B,EAC5B;EAAA;EACA,MAAM;IAAEC;EAAQ,CAAC,GAAGb,YAAY,EAAE;EAElC,MAAMc,SAAS,GAAGb,mBAAmB,CACnCU,OAAO,GAAGD,aAAa,aAAbA,aAAa,cAAbA,aAAa,GAAK,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,QAAQ,CAACC,OAAO,IAAIP,MAAM,GAA6BQ,SAAS,GAAIA,SAAS,EACjHN,OAAO,IAAIE,OAAO,GACdD,kBAAkB,IAAIC,OAAO,KAAK,CAAC,GACjCN,oCAAoC,GACpCR,wBAAwB,CAACc,OAAO,CAAC,GACnCI,SAAS,CACd;EACD,MAAMC,iBAAiB,GAAGJ,SAAS,CAACK,KAAK,KAAKjB,cAAc,CAACkB,QAAQ,IAAIN,SAAS,CAACI,iBAAiB;EACpG,MAAM,CAACG,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAMkB,eAAe,GAAGpB,WAAW,CAAC,YAAY;IAC9CG,SAAS,CAACQ,SAAS,CAACK,KAAK,KAAKjB,cAAc,CAACkB,QAAQ,CAAC;IACtDE,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAI;MACF,MAAMR,SAAS,CAACU,gBAAgB,EAAE;MAClC3B,kBAAkB,CAACC,kBAAkB,CAAC2B,2BAA2B,EAAE;QACjEC,QAAQ,EAAEb,OAAO;QACjBc,YAAY,EAAEjB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,QAAQ,CAACa,MAAM;QAC5CC,aAAa,EAAEnB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,QAAQ,CAACe;MACzC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAClB,CAAC,SAAS;MACRT,qBAAqB,CAAC,KAAK,CAAC;IAC9B;EACF,CAAC,EAAE,CAACR,SAAS,EAAED,OAAO,EAAEH,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,QAAQ,CAACe,OAAO,EAAEpB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,QAAQ,CAACa,MAAM,CAAC,CAAC;EAEzF,OAAOxB,OAAO,CAAC,MAAM;IACnB,OAAO;MACLU,SAAS;MACTI,iBAAiB;MACjBG,kBAAkB;MAClBE;IACF,CAAC;EACH,CAAC,EAAE,CAACT,SAAS,EAAEO,kBAAkB,EAAEH,iBAAiB,EAAEK,eAAe,CAAC,CAAC;AACzE;AAAC,GA3CuBf,kBAAkB;EAAA,QAMpBR,YAAY,EAEdC,mBAAmB;AAAA"},"metadata":{},"sourceType":"module"}