{"ast":null,"code":"import { Protocol } from '@uniswap/router-sdk';\nfunction buildTradeRouteInputAmounts(swapAmounts) {\n  return {\n    inputAmount: {\n      amount: swapAmounts.inputAmount.quotient.toString(),\n      token: {\n        address: swapAmounts.inputAmount.currency.isToken ? swapAmounts.inputAmount.currency.address : '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n        chainId: swapAmounts.inputAmount.currency.chainId,\n        decimals: swapAmounts.inputAmount.currency.decimals,\n        isNative: swapAmounts.inputAmount.currency.isNative\n      }\n    },\n    outputAmount: {\n      amount: swapAmounts.outputAmount.quotient.toString(),\n      token: {\n        address: swapAmounts.outputAmount.currency.isToken ? swapAmounts.outputAmount.currency.address : '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n        chainId: swapAmounts.outputAmount.currency.chainId,\n        decimals: swapAmounts.outputAmount.currency.decimals,\n        isNative: swapAmounts.outputAmount.currency.isNative\n      }\n    }\n  };\n}\nfunction buildPool(pool) {\n  const isPool = ('fee' in pool);\n  return {\n    pair: !isPool ? {\n      tokenAmountA: {\n        amount: pool.reserve0.quotient.toString(),\n        token: {\n          address: pool.token0.address,\n          chainId: pool.token0.chainId,\n          decimals: pool.token0.decimals,\n          isNative: pool.token0.isNative\n        }\n      },\n      tokenAmountB: {\n        amount: pool.reserve1.quotient.toString(),\n        token: {\n          address: pool.token1.address,\n          chainId: pool.token1.chainId,\n          decimals: pool.token1.decimals,\n          isNative: pool.token1.isNative\n        }\n      }\n    } : undefined,\n    pool: isPool ? {\n      fee: pool.fee,\n      liquidity: pool.liquidity.toString(),\n      sqrtRatioX96: pool.sqrtRatioX96.toString(),\n      tickCurrent: pool.tickCurrent.toString(),\n      tokenA: {\n        address: pool.token0.address,\n        chainId: pool.token0.chainId,\n        decimals: pool.token0.decimals,\n        isNative: pool.token0.isNative\n      },\n      tokenB: {\n        address: pool.token1.address,\n        chainId: pool.token1.chainId,\n        decimals: pool.token1.decimals,\n        isNative: pool.token1.isNative\n      }\n    } : undefined\n  };\n}\nfunction buildPools(pools) {\n  return pools.map(pool => buildPool(pool));\n}\nfunction buildTradeRouteInput(swap) {\n  return {\n    ...buildTradeRouteInputAmounts({\n      inputAmount: swap.inputAmount,\n      outputAmount: swap.outputAmount\n    }),\n    pools: buildPools(swap.route.pools)\n  };\n}\nexport function buildAllTradeRouteInputs(trade) {\n  const mixedTokenTradeRouteInputs = [];\n  const v2TokenTradeRouteInputs = [];\n  const v3TokenTradeRouteInputs = [];\n  const swaps = trade.swaps;\n  for (const swap of swaps) {\n    if (swap.route.protocol === Protocol.MIXED) {\n      mixedTokenTradeRouteInputs.push(buildTradeRouteInput(swap));\n    } else if (swap.route.protocol === Protocol.V2) {\n      v2TokenTradeRouteInputs.push(buildTradeRouteInput(swap));\n    } else {\n      v3TokenTradeRouteInputs.push(buildTradeRouteInput(swap));\n    }\n  }\n  return {\n    mixedTokenTradeRouteInputs: mixedTokenTradeRouteInputs.length > 0 ? mixedTokenTradeRouteInputs : undefined,\n    v2TokenTradeRouteInputs: v2TokenTradeRouteInputs.length > 0 ? v2TokenTradeRouteInputs : undefined,\n    v3TokenTradeRouteInputs: v3TokenTradeRouteInputs.length > 0 ? v3TokenTradeRouteInputs : undefined\n  };\n}","map":{"version":3,"names":["Protocol","buildTradeRouteInputAmounts","swapAmounts","inputAmount","amount","quotient","toString","token","address","currency","isToken","chainId","decimals","isNative","outputAmount","buildPool","pool","isPool","pair","tokenAmountA","reserve0","token0","tokenAmountB","reserve1","token1","undefined","fee","liquidity","sqrtRatioX96","tickCurrent","tokenA","tokenB","buildPools","pools","map","buildTradeRouteInput","swap","route","buildAllTradeRouteInputs","trade","mixedTokenTradeRouteInputs","v2TokenTradeRouteInputs","v3TokenTradeRouteInputs","swaps","protocol","MIXED","push","V2","length"],"sources":["/home/diep/freelance/interface/src/nft/utils/tokenRoutes.ts"],"sourcesContent":["import { IRoute, Protocol } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { Pool } from '@uniswap/v3-sdk'\nimport { TokenAmountInput, TokenTradeRouteInput, TradePoolInput } from 'graphql/data/__generated__/types-and-hooks'\nimport { InterfaceTrade } from 'state/routing/types'\n\ninterface SwapAmounts {\n  inputAmount: CurrencyAmount<Currency>\n  outputAmount: CurrencyAmount<Currency>\n}\n\ninterface TradeTokenInputAmounts {\n  inputAmount: TokenAmountInput\n  outputAmount: TokenAmountInput\n}\n\ninterface Swap {\n  route: IRoute<Currency, Currency, Pair | Pool>\n  inputAmount: CurrencyAmount<Currency>\n  outputAmount: CurrencyAmount<Currency>\n}\n\nfunction buildTradeRouteInputAmounts(swapAmounts: SwapAmounts): TradeTokenInputAmounts {\n  return {\n    inputAmount: {\n      amount: swapAmounts.inputAmount.quotient.toString(),\n      token: {\n        address: swapAmounts.inputAmount.currency.isToken\n          ? swapAmounts.inputAmount.currency.address\n          : '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n        chainId: swapAmounts.inputAmount.currency.chainId,\n        decimals: swapAmounts.inputAmount.currency.decimals,\n        isNative: swapAmounts.inputAmount.currency.isNative,\n      },\n    },\n    outputAmount: {\n      amount: swapAmounts.outputAmount.quotient.toString(),\n      token: {\n        address: swapAmounts.outputAmount.currency.isToken\n          ? swapAmounts.outputAmount.currency.address\n          : '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n        chainId: swapAmounts.outputAmount.currency.chainId,\n        decimals: swapAmounts.outputAmount.currency.decimals,\n        isNative: swapAmounts.outputAmount.currency.isNative,\n      },\n    },\n  }\n}\n\nfunction buildPool(pool: Pair | Pool): TradePoolInput {\n  const isPool = 'fee' in pool\n\n  return {\n    pair: !isPool\n      ? {\n          tokenAmountA: {\n            amount: pool.reserve0.quotient.toString(),\n            token: {\n              address: pool.token0.address,\n              chainId: pool.token0.chainId,\n              decimals: pool.token0.decimals,\n              isNative: pool.token0.isNative,\n            },\n          },\n          tokenAmountB: {\n            amount: pool.reserve1.quotient.toString(),\n            token: {\n              address: pool.token1.address,\n              chainId: pool.token1.chainId,\n              decimals: pool.token1.decimals,\n              isNative: pool.token1.isNative,\n            },\n          },\n        }\n      : undefined,\n    pool: isPool\n      ? {\n          fee: pool.fee,\n          liquidity: pool.liquidity.toString(),\n          sqrtRatioX96: pool.sqrtRatioX96.toString(),\n          tickCurrent: pool.tickCurrent.toString(),\n          tokenA: {\n            address: pool.token0.address,\n            chainId: pool.token0.chainId,\n            decimals: pool.token0.decimals,\n            isNative: pool.token0.isNative,\n          },\n          tokenB: {\n            address: pool.token1.address,\n            chainId: pool.token1.chainId,\n            decimals: pool.token1.decimals,\n            isNative: pool.token1.isNative,\n          },\n        }\n      : undefined,\n  }\n}\n\nfunction buildPools(pools: (Pair | Pool)[]): TradePoolInput[] {\n  return pools.map((pool) => buildPool(pool))\n}\n\nfunction buildTradeRouteInput(swap: Swap): TokenTradeRouteInput {\n  return {\n    ...buildTradeRouteInputAmounts({ inputAmount: swap.inputAmount, outputAmount: swap.outputAmount }),\n    pools: buildPools(swap.route.pools),\n  }\n}\n\nexport function buildAllTradeRouteInputs(trade: InterfaceTrade<Currency, Currency, TradeType>): {\n  mixedTokenTradeRouteInputs: TokenTradeRouteInput[] | undefined\n  v2TokenTradeRouteInputs: TokenTradeRouteInput[] | undefined\n  v3TokenTradeRouteInputs: TokenTradeRouteInput[] | undefined\n} {\n  const mixedTokenTradeRouteInputs: TokenTradeRouteInput[] = []\n  const v2TokenTradeRouteInputs: TokenTradeRouteInput[] = []\n  const v3TokenTradeRouteInputs: TokenTradeRouteInput[] = []\n\n  const swaps = trade.swaps\n\n  for (const swap of swaps) {\n    if (swap.route.protocol === Protocol.MIXED) {\n      mixedTokenTradeRouteInputs.push(buildTradeRouteInput(swap))\n    } else if (swap.route.protocol === Protocol.V2) {\n      v2TokenTradeRouteInputs.push(buildTradeRouteInput(swap))\n    } else {\n      v3TokenTradeRouteInputs.push(buildTradeRouteInput(swap))\n    }\n  }\n\n  return {\n    mixedTokenTradeRouteInputs: mixedTokenTradeRouteInputs.length > 0 ? mixedTokenTradeRouteInputs : undefined,\n    v2TokenTradeRouteInputs: v2TokenTradeRouteInputs.length > 0 ? v2TokenTradeRouteInputs : undefined,\n    v3TokenTradeRouteInputs: v3TokenTradeRouteInputs.length > 0 ? v3TokenTradeRouteInputs : undefined,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}