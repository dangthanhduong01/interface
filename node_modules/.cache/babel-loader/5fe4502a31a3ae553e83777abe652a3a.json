{"ast":null,"code":"/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nvar SpanStatus;\n(function (SpanStatus) {\n  /** The operation completed successfully. */\n  const Ok = 'ok';\n  SpanStatus[\"Ok\"] = Ok;\n  /** Deadline expired before operation could complete. */\n  const DeadlineExceeded = 'deadline_exceeded';\n  SpanStatus[\"DeadlineExceeded\"] = DeadlineExceeded;\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  const Unauthenticated = 'unauthenticated';\n  SpanStatus[\"Unauthenticated\"] = Unauthenticated;\n  /** 403 Forbidden */\n  const PermissionDenied = 'permission_denied';\n  SpanStatus[\"PermissionDenied\"] = PermissionDenied;\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  const NotFound = 'not_found';\n  SpanStatus[\"NotFound\"] = NotFound;\n  /** 429 Too Many Requests */\n  const ResourceExhausted = 'resource_exhausted';\n  SpanStatus[\"ResourceExhausted\"] = ResourceExhausted;\n  /** Client specified an invalid argument. 4xx. */\n  const InvalidArgument = 'invalid_argument';\n  SpanStatus[\"InvalidArgument\"] = InvalidArgument;\n  /** 501 Not Implemented */\n  const Unimplemented = 'unimplemented';\n  SpanStatus[\"Unimplemented\"] = Unimplemented;\n  /** 503 Service Unavailable */\n  const Unavailable = 'unavailable';\n  SpanStatus[\"Unavailable\"] = Unavailable;\n  /** Other/generic 5xx. */\n  const InternalError = 'internal_error';\n  SpanStatus[\"InternalError\"] = InternalError;\n  /** Unknown. Any non-standard HTTP status code. */\n  const UnknownError = 'unknown_error';\n  SpanStatus[\"UnknownError\"] = UnknownError;\n  /** The operation was cancelled (typically by the user). */\n  const Cancelled = 'cancelled';\n  SpanStatus[\"Cancelled\"] = Cancelled;\n  /** Already exists (409) */\n  const AlreadyExists = 'already_exists';\n  SpanStatus[\"AlreadyExists\"] = AlreadyExists;\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  const FailedPrecondition = 'failed_precondition';\n  SpanStatus[\"FailedPrecondition\"] = FailedPrecondition;\n  /** The operation was aborted, typically due to a concurrency issue. */\n  const Aborted = 'aborted';\n  SpanStatus[\"Aborted\"] = Aborted;\n  /** Operation was attempted past the valid range. */\n  const OutOfRange = 'out_of_range';\n  SpanStatus[\"OutOfRange\"] = OutOfRange;\n  /** Unrecoverable data loss or corruption */\n  const DataLoss = 'data_loss';\n  SpanStatus[\"DataLoss\"] = DataLoss;\n})(SpanStatus || (SpanStatus = {}));\nexport { SpanStatus };","map":{"version":3,"sources":["../../../src/tracing/spanstatus.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAA,UAAA;AAAA,CAAA,UAAA,UAAA,EAAA;EACA;EACA,MAAA,EAAA,GAAA,IAAA;EAAA,UAAA,CAAA,IAAA,CAAA,GAAA,EAAA;EACA;EACA,MAAA,gBAAA,GAAA,mBAAA;EAAA,UAAA,CAAA,kBAAA,CAAA,GAAA,gBAAA;EACA;EACA,MAAA,eAAA,GAAA,iBAAA;EAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,eAAA;EACA;EACA,MAAA,gBAAA,GAAA,mBAAA;EAAA,UAAA,CAAA,kBAAA,CAAA,GAAA,gBAAA;EACA;EACA,MAAA,QAAA,GAAA,WAAA;EAAA,UAAA,CAAA,UAAA,CAAA,GAAA,QAAA;EACA;EACA,MAAA,iBAAA,GAAA,oBAAA;EAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,iBAAA;EACA;EACA,MAAA,eAAA,GAAA,kBAAA;EAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,eAAA;EACA;EACA,MAAA,aAAA,GAAA,eAAA;EAAA,UAAA,CAAA,eAAA,CAAA,GAAA,aAAA;EACA;EACA,MAAA,WAAA,GAAA,aAAA;EAAA,UAAA,CAAA,aAAA,CAAA,GAAA,WAAA;EACA;EACA,MAAA,aAAA,GAAA,gBAAA;EAAA,UAAA,CAAA,eAAA,CAAA,GAAA,aAAA;EACA;EACA,MAAA,YAAA,GAAA,eAAA;EAAA,UAAA,CAAA,cAAA,CAAA,GAAA,YAAA;EACA;EACA,MAAA,SAAA,GAAA,WAAA;EAAA,UAAA,CAAA,WAAA,CAAA,GAAA,SAAA;EACA;EACA,MAAA,aAAA,GAAA,gBAAA;EAAA,UAAA,CAAA,eAAA,CAAA,GAAA,aAAA;EACA;EACA,MAAA,kBAAA,GAAA,qBAAA;EAAA,UAAA,CAAA,oBAAA,CAAA,GAAA,kBAAA;EACA;EACA,MAAA,OAAA,GAAA,SAAA;EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,OAAA;EACA;EACA,MAAA,UAAA,GAAA,cAAA;EAAA,UAAA,CAAA,YAAA,CAAA,GAAA,UAAA;EACA;EACA,MAAA,QAAA,GAAA,WAAA;EAAA,UAAA,CAAA,UAAA,CAAA,GAAA,QAAA;AACA,CAAA,EAAA,UAAA,KAAA,UAAA,GAAA,CAAA,CAAA,CAAA,CAAA","sourcesContent":["/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n"]},"metadata":{},"sourceType":"module"}