{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/components/WalletModal/Option.tsx\",\n  _s = $RefreshSig$();\nimport { TraceEvent } from '@uniswap/analytics';\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName } from '@uniswap/analytics-events';\nimport Loader from 'components/Icons/LoadingSpinner';\nimport { useIsDarkMode } from 'theme/components/ThemeToggle';\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles';\nimport NewBadge from './NewBadge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionCardLeft = _styled.div.withConfig({\n  displayName: \"Option__OptionCardLeft\",\n  componentId: \"sc-us24id-0\"\n})([\"\", \";flex-direction:row;align-items:center;\"], flexColumnNoWrap);\nconst OptionCardClickable = _styled.button.withConfig({\n  displayName: \"Option__OptionCardClickable\",\n  componentId: \"sc-us24id-1\"\n})([\"background-color:\", \";width:100% !important;border-color:\", \";display:flex;flex-direction:row;align-items:center;justify-content:space-between;margin-top:2rem;padding:1rem;margin-top:0;transition:\", \";opacity:\", \";&:hover{cursor:\", \";background-color:\", \";}&:focus{background-color:\", \";}\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.backgroundModule;\n}, _ref2 => {\n  let {\n    theme,\n    isActive\n  } = _ref2;\n  return isActive ? theme.accentActive : 'transparent';\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.transition.duration.fast;\n}, _ref4 => {\n  let {\n    disabled\n  } = _ref4;\n  return disabled ? '0.5' : '1';\n}, _ref5 => {\n  let {\n    clickable\n  } = _ref5;\n  return clickable && 'pointer';\n}, _ref6 => {\n  let {\n    theme,\n    clickable\n  } = _ref6;\n  return clickable && theme.hoverState;\n}, _ref7 => {\n  let {\n    theme,\n    clickable\n  } = _ref7;\n  return clickable && theme.hoverState;\n});\nconst HeaderText = _styled.div.withConfig({\n  displayName: \"Option__HeaderText\",\n  componentId: \"sc-us24id-2\"\n})([\"\", \";align-items:center;justify-content:center;color:\", \";font-size:16px;font-weight:600;padding:0 8px;\"], flexRowNoWrap, props => props.color === 'blue' ? _ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.accentAction;\n} : _ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.textPrimary;\n});\nconst IconWrapper = _styled.div.withConfig({\n  displayName: \"Option__IconWrapper\",\n  componentId: \"sc-us24id-3\"\n})([\"\", \";align-items:center;justify-content:center;& > img,span{height:40px;width:40px;}\", \";\"], flexColumnNoWrap, _ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.deprecated_mediaWidth.deprecated_upToMedium`\n    align-items: flex-end;\n  `;\n});\nexport default function Option(_ref11) {\n  _s();\n  var _connection$getIcon;\n  let {\n    connection,\n    pendingConnectionType,\n    activate\n  } = _ref11;\n  const isPending = pendingConnectionType === connection.type;\n  const isDarkMode = useIsDarkMode();\n  const content = /*#__PURE__*/_jsxDEV(TraceEvent, {\n    events: [BrowserEvent.onClick],\n    name: InterfaceEventName.WALLET_SELECTED,\n    properties: {\n      wallet_type: connection.getName()\n    },\n    element: InterfaceElementName.WALLET_TYPE_OPTION,\n    children: /*#__PURE__*/_jsxDEV(OptionCardClickable, {\n      onClick: !pendingConnectionType ? activate : undefined,\n      clickable: !pendingConnectionType,\n      disabled: Boolean(!isPending && !!pendingConnectionType),\n      \"data-testid\": \"wallet-modal-option\",\n      children: [/*#__PURE__*/_jsxDEV(OptionCardLeft, {\n        children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_connection$getIcon = connection.getIcon) === null || _connection$getIcon === void 0 ? void 0 : _connection$getIcon.call(connection, isDarkMode),\n            alt: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderText, {\n          children: connection.getName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), connection.isNew && /*#__PURE__*/_jsxDEV(NewBadge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), isPending && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n  return content;\n}\n_s(Option, \"lOswsGE9JxN6RtwOM/ApCDGsRSU=\", false, function () {\n  return [useIsDarkMode];\n});\n_c = Option;\nvar _c;\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"names":["TraceEvent","BrowserEvent","InterfaceElementName","InterfaceEventName","Loader","useIsDarkMode","flexColumnNoWrap","flexRowNoWrap","NewBadge","OptionCardLeft","styled","div","OptionCardClickable","button","theme","backgroundModule","isActive","accentActive","transition","duration","fast","disabled","clickable","hoverState","HeaderText","props","color","accentAction","textPrimary","IconWrapper","deprecated_mediaWidth","deprecated_upToMedium","Option","connection","pendingConnectionType","activate","isPending","type","isDarkMode","content","onClick","WALLET_SELECTED","wallet_type","getName","WALLET_TYPE_OPTION","undefined","Boolean","getIcon","isNew"],"sources":["/home/diep/freelance/interface/src/components/WalletModal/Option.tsx"],"sourcesContent":["import { TraceEvent } from '@uniswap/analytics'\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName } from '@uniswap/analytics-events'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { Connection, ConnectionType } from 'connection'\nimport styled from 'styled-components/macro'\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\n\nimport NewBadge from './NewBadge'\n\nconst OptionCardLeft = styled.div`\n  ${flexColumnNoWrap};\n  flex-direction: row;\n  align-items: center;\n`\n\nconst OptionCardClickable = styled.button<{ isActive?: boolean; clickable?: boolean }>`\n  background-color: ${({ theme }) => theme.backgroundModule};\n  width: 100% !important;\n  border-color: ${({ theme, isActive }) => (isActive ? theme.accentActive : 'transparent')};\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n\n  margin-top: 0;\n  transition: ${({ theme }) => theme.transition.duration.fast};\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n  &:hover {\n    cursor: ${({ clickable }) => clickable && 'pointer'};\n    background-color: ${({ theme, clickable }) => clickable && theme.hoverState};\n  }\n  &:focus {\n    background-color: ${({ theme, clickable }) => clickable && theme.hoverState};\n  }\n`\n\nconst HeaderText = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  justify-content: center;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.accentAction : ({ theme }) => theme.textPrimary)};\n  font-size: 16px;\n  font-weight: 600;\n  padding: 0 8px;\n`\n\nconst IconWrapper = styled.div`\n  ${flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: 40px;\n    width: 40px;\n  }\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    align-items: flex-end;\n  `};\n`\n\ntype OptionProps = {\n  connection: Connection\n  activate: () => void\n  pendingConnectionType?: ConnectionType\n}\nexport default function Option({ connection, pendingConnectionType, activate }: OptionProps) {\n  const isPending = pendingConnectionType === connection.type\n  const isDarkMode = useIsDarkMode()\n  const content = (\n    <TraceEvent\n      events={[BrowserEvent.onClick]}\n      name={InterfaceEventName.WALLET_SELECTED}\n      properties={{ wallet_type: connection.getName() }}\n      element={InterfaceElementName.WALLET_TYPE_OPTION}\n    >\n      <OptionCardClickable\n        onClick={!pendingConnectionType ? activate : undefined}\n        clickable={!pendingConnectionType}\n        disabled={Boolean(!isPending && !!pendingConnectionType)}\n        data-testid=\"wallet-modal-option\"\n      >\n        <OptionCardLeft>\n          <IconWrapper>\n            <img src={connection.getIcon?.(isDarkMode)} alt=\"Icon\" />\n          </IconWrapper>\n          <HeaderText>{connection.getName()}</HeaderText>\n          {connection.isNew && <NewBadge />}\n        </OptionCardLeft>\n        {isPending && <Loader />}\n      </OptionCardClickable>\n    </TraceEvent>\n  )\n\n  return content\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}