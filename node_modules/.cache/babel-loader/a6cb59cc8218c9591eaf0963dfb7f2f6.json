{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBulkOrderTypeHashes = exports.getBulkOrderTypeHash = exports.getBulkOrderTree = exports.getBulkOrderTreeHeight = void 0;\nvar utils_1 = require(\"ethers/lib/utils\");\nvar Eip712MerkleTree_1 = require(\"./Eip712MerkleTree\");\nvar defaults_1 = require(\"./defaults\");\nvar utils_2 = require(\"./utils\");\nvar constants_1 = require(\"../../constants\");\nfunction getBulkOrderTypes(height) {\n  var types = __assign({}, constants_1.EIP_712_BULK_ORDER_TYPE);\n  types.BulkOrder = [{\n    name: \"tree\",\n    type: \"OrderComponents\".concat(\"[2]\".repeat(height))\n  }];\n  return types;\n}\nfunction getBulkOrderTreeHeight(length) {\n  return Math.max(Math.ceil(Math.log2(length)), 1);\n}\nexports.getBulkOrderTreeHeight = getBulkOrderTreeHeight;\nfunction getBulkOrderTree(orderComponents, startIndex, height) {\n  if (startIndex === void 0) {\n    startIndex = 0;\n  }\n  if (height === void 0) {\n    height = getBulkOrderTreeHeight(orderComponents.length + startIndex);\n  }\n  var types = getBulkOrderTypes(height);\n  var defaultNode = defaults_1.DefaultGetter.from(types, \"OrderComponents\");\n  var elements = __spreadArray([], __read(orderComponents), false);\n  if (startIndex > 0) {\n    elements = __spreadArray(__spreadArray([], __read((0, utils_2.fillArray)([], startIndex, defaultNode)), false), __read(orderComponents), false);\n  }\n  var tree = new Eip712MerkleTree_1.Eip712MerkleTree(types, \"BulkOrder\", \"OrderComponents\", elements, height);\n  return tree;\n}\nexports.getBulkOrderTree = getBulkOrderTree;\nfunction getBulkOrderTypeHash(height) {\n  var types = getBulkOrderTypes(height);\n  var encoder = utils_1._TypedDataEncoder.from(types);\n  var typeString = (0, utils_1.toUtf8Bytes)(encoder._types.BulkOrder);\n  return (0, utils_1.keccak256)(typeString);\n}\nexports.getBulkOrderTypeHash = getBulkOrderTypeHash;\nfunction getBulkOrderTypeHashes(maxHeight) {\n  var typeHashes = [];\n  for (var i = 0; i < maxHeight; i++) {\n    typeHashes.push(getBulkOrderTypeHash(i + 1));\n  }\n  return typeHashes;\n}\nexports.getBulkOrderTypeHashes = getBulkOrderTypeHashes;","map":{"version":3,"sources":["../../../src/utils/eip712/bulk-orders.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBulkOrderTypeHashes = exports.getBulkOrderTypeHash = exports.getBulkOrderTree = exports.getBulkOrderTreeHeight = void 0;\nvar utils_1 = require(\"ethers/lib/utils\");\nvar Eip712MerkleTree_1 = require(\"./Eip712MerkleTree\");\nvar defaults_1 = require(\"./defaults\");\nvar utils_2 = require(\"./utils\");\nvar constants_1 = require(\"../../constants\");\nfunction getBulkOrderTypes(height) {\n    var types = __assign({}, constants_1.EIP_712_BULK_ORDER_TYPE);\n    types.BulkOrder = [\n        { name: \"tree\", type: \"OrderComponents\".concat(\"[2]\".repeat(height)) },\n    ];\n    return types;\n}\nfunction getBulkOrderTreeHeight(length) {\n    return Math.max(Math.ceil(Math.log2(length)), 1);\n}\nexports.getBulkOrderTreeHeight = getBulkOrderTreeHeight;\nfunction getBulkOrderTree(orderComponents, startIndex, height) {\n    if (startIndex === void 0) { startIndex = 0; }\n    if (height === void 0) { height = getBulkOrderTreeHeight(orderComponents.length + startIndex); }\n    var types = getBulkOrderTypes(height);\n    var defaultNode = defaults_1.DefaultGetter.from(types, \"OrderComponents\");\n    var elements = __spreadArray([], __read(orderComponents), false);\n    if (startIndex > 0) {\n        elements = __spreadArray(__spreadArray([], __read((0, utils_2.fillArray)([], startIndex, defaultNode)), false), __read(orderComponents), false);\n    }\n    var tree = new Eip712MerkleTree_1.Eip712MerkleTree(types, \"BulkOrder\", \"OrderComponents\", elements, height);\n    return tree;\n}\nexports.getBulkOrderTree = getBulkOrderTree;\nfunction getBulkOrderTypeHash(height) {\n    var types = getBulkOrderTypes(height);\n    var encoder = utils_1._TypedDataEncoder.from(types);\n    var typeString = (0, utils_1.toUtf8Bytes)(encoder._types.BulkOrder);\n    return (0, utils_1.keccak256)(typeString);\n}\nexports.getBulkOrderTypeHash = getBulkOrderTypeHash;\nfunction getBulkOrderTypeHashes(maxHeight) {\n    var typeHashes = [];\n    for (var i = 0; i < maxHeight; i++) {\n        typeHashes.push(getBulkOrderTypeHash(i + 1));\n    }\n    return typeHashes;\n}\nexports.getBulkOrderTypeHashes = getBulkOrderTypeHashes;\n//# sourceMappingURL=bulk-orders.js.map"]},"metadata":{},"sourceType":"script"}