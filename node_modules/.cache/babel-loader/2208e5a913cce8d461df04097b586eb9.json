{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/state/transactions/updater.tsx\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport { DEFAULT_TXN_DISMISS_MS, L2_TXN_DISMISS_MS } from 'constants/misc';\nimport LibUpdater from 'lib/hooks/transactions/updater';\nimport { useCallback, useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { L2_CHAIN_IDS } from '../../constants/chains';\nimport { useAddPopup } from '../application/hooks';\nimport { checkedTransaction, finalizeTransaction } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Updater() {\n  _s();\n  const {\n    chainId\n  } = useWeb3React();\n  const addPopup = useAddPopup();\n  // speed up popup dismisall time if on L2\n  const isL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId));\n  const transactions = useAppSelector(state => state.transactions);\n  const dispatch = useAppDispatch();\n  const onCheck = useCallback(_ref => {\n    let {\n      chainId,\n      hash,\n      blockNumber\n    } = _ref;\n    return dispatch(checkedTransaction({\n      chainId,\n      hash,\n      blockNumber\n    }));\n  }, [dispatch]);\n  const onReceipt = useCallback(_ref2 => {\n    let {\n      chainId,\n      hash,\n      receipt\n    } = _ref2;\n    dispatch(finalizeTransaction({\n      chainId,\n      hash,\n      receipt: {\n        blockHash: receipt.blockHash,\n        blockNumber: receipt.blockNumber,\n        contractAddress: receipt.contractAddress,\n        from: receipt.from,\n        status: receipt.status,\n        to: receipt.to,\n        transactionHash: receipt.transactionHash,\n        transactionIndex: receipt.transactionIndex\n      }\n    }));\n    addPopup({\n      txn: {\n        hash\n      }\n    }, hash, isL2 ? L2_TXN_DISMISS_MS : DEFAULT_TXN_DISMISS_MS);\n  }, [addPopup, dispatch, isL2]);\n  const pendingTransactions = useMemo(() => {\n    var _transactions$chainId;\n    return chainId ? (_transactions$chainId = transactions[chainId]) !== null && _transactions$chainId !== void 0 ? _transactions$chainId : {} : {};\n  }, [chainId, transactions]);\n  return /*#__PURE__*/_jsxDEV(LibUpdater, {\n    pendingTransactions: pendingTransactions,\n    onCheck: onCheck,\n    onReceipt: onReceipt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_s(Updater, \"lpMiK/ru593Xzi5tPsm5fxGaz88=\", false, function () {\n  return [useWeb3React, useAddPopup, useAppSelector, useAppDispatch];\n});\n_c = Updater;\nvar _c;\n$RefreshReg$(_c, \"Updater\");","map":{"version":3,"names":["useWeb3React","DEFAULT_TXN_DISMISS_MS","L2_TXN_DISMISS_MS","LibUpdater","useCallback","useMemo","useAppDispatch","useAppSelector","L2_CHAIN_IDS","useAddPopup","checkedTransaction","finalizeTransaction","Updater","chainId","addPopup","isL2","Boolean","includes","transactions","state","dispatch","onCheck","hash","blockNumber","onReceipt","receipt","blockHash","contractAddress","from","status","to","transactionHash","transactionIndex","txn","pendingTransactions"],"sources":["/home/diep/freelance/interface/src/state/transactions/updater.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { DEFAULT_TXN_DISMISS_MS, L2_TXN_DISMISS_MS } from 'constants/misc'\nimport LibUpdater from 'lib/hooks/transactions/updater'\nimport { useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { L2_CHAIN_IDS } from '../../constants/chains'\nimport { useAddPopup } from '../application/hooks'\nimport { checkedTransaction, finalizeTransaction } from './reducer'\nimport { SerializableTransactionReceipt } from './types'\n\nexport default function Updater() {\n  const { chainId } = useWeb3React()\n  const addPopup = useAddPopup()\n  // speed up popup dismisall time if on L2\n  const isL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId))\n  const transactions = useAppSelector((state) => state.transactions)\n\n  const dispatch = useAppDispatch()\n  const onCheck = useCallback(\n    ({ chainId, hash, blockNumber }: { chainId: number; hash: string; blockNumber: number }) =>\n      dispatch(checkedTransaction({ chainId, hash, blockNumber })),\n    [dispatch]\n  )\n  const onReceipt = useCallback(\n    ({ chainId, hash, receipt }: { chainId: number; hash: string; receipt: SerializableTransactionReceipt }) => {\n      dispatch(\n        finalizeTransaction({\n          chainId,\n          hash,\n          receipt: {\n            blockHash: receipt.blockHash,\n            blockNumber: receipt.blockNumber,\n            contractAddress: receipt.contractAddress,\n            from: receipt.from,\n            status: receipt.status,\n            to: receipt.to,\n            transactionHash: receipt.transactionHash,\n            transactionIndex: receipt.transactionIndex,\n          },\n        })\n      )\n\n      addPopup(\n        {\n          txn: { hash },\n        },\n        hash,\n        isL2 ? L2_TXN_DISMISS_MS : DEFAULT_TXN_DISMISS_MS\n      )\n    },\n    [addPopup, dispatch, isL2]\n  )\n\n  const pendingTransactions = useMemo(() => (chainId ? transactions[chainId] ?? {} : {}), [chainId, transactions])\n\n  return <LibUpdater pendingTransactions={pendingTransactions} onCheck={onCheck} onReceipt={onReceipt} />\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,sBAAsB,EAAEC,iBAAiB,QAAQ,gBAAgB;AAC1E,OAAOC,UAAU,MAAM,gCAAgC;AACvD,SAASC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC5C,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAE5D,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,WAAW;AAAA;AAGnE,eAAe,SAASC,OAAO,GAAG;EAAA;EAChC,MAAM;IAAEC;EAAQ,CAAC,GAAGb,YAAY,EAAE;EAClC,MAAMc,QAAQ,GAAGL,WAAW,EAAE;EAC9B;EACA,MAAMM,IAAI,GAAGC,OAAO,CAACH,OAAO,IAAIL,YAAY,CAACS,QAAQ,CAACJ,OAAO,CAAC,CAAC;EAC/D,MAAMK,YAAY,GAAGX,cAAc,CAAEY,KAAK,IAAKA,KAAK,CAACD,YAAY,CAAC;EAElE,MAAME,QAAQ,GAAGd,cAAc,EAAE;EACjC,MAAMe,OAAO,GAAGjB,WAAW,CACzB;IAAA,IAAC;MAAES,OAAO;MAAES,IAAI;MAAEC;IAAoE,CAAC;IAAA,OACrFH,QAAQ,CAACV,kBAAkB,CAAC;MAAEG,OAAO;MAAES,IAAI;MAAEC;IAAY,CAAC,CAAC,CAAC;EAAA,GAC9D,CAACH,QAAQ,CAAC,CACX;EACD,MAAMI,SAAS,GAAGpB,WAAW,CAC3B,SAA4G;IAAA,IAA3G;MAAES,OAAO;MAAES,IAAI;MAAEG;IAAoF,CAAC;IACrGL,QAAQ,CACNT,mBAAmB,CAAC;MAClBE,OAAO;MACPS,IAAI;MACJG,OAAO,EAAE;QACPC,SAAS,EAAED,OAAO,CAACC,SAAS;QAC5BH,WAAW,EAAEE,OAAO,CAACF,WAAW;QAChCI,eAAe,EAAEF,OAAO,CAACE,eAAe;QACxCC,IAAI,EAAEH,OAAO,CAACG,IAAI;QAClBC,MAAM,EAAEJ,OAAO,CAACI,MAAM;QACtBC,EAAE,EAAEL,OAAO,CAACK,EAAE;QACdC,eAAe,EAAEN,OAAO,CAACM,eAAe;QACxCC,gBAAgB,EAAEP,OAAO,CAACO;MAC5B;IACF,CAAC,CAAC,CACH;IAEDlB,QAAQ,CACN;MACEmB,GAAG,EAAE;QAAEX;MAAK;IACd,CAAC,EACDA,IAAI,EACJP,IAAI,GAAGb,iBAAiB,GAAGD,sBAAsB,CAClD;EACH,CAAC,EACD,CAACa,QAAQ,EAAEM,QAAQ,EAAEL,IAAI,CAAC,CAC3B;EAED,MAAMmB,mBAAmB,GAAG7B,OAAO,CAAC;IAAA;IAAA,OAAOQ,OAAO,4BAAGK,YAAY,CAACL,OAAO,CAAC,yEAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EAAA,CAAC,EAAE,CAACA,OAAO,EAAEK,YAAY,CAAC,CAAC;EAEhH,oBAAO,QAAC,UAAU;IAAC,mBAAmB,EAAEgB,mBAAoB;IAAC,OAAO,EAAEb,OAAQ;IAAC,SAAS,EAAEG;EAAU;IAAA;IAAA;IAAA;EAAA,QAAG;AACzG;AAAC,GA9CuBZ,OAAO;EAAA,QACTZ,YAAY,EACfS,WAAW,EAGPF,cAAc,EAElBD,cAAc;AAAA;AAAA,KAPTM,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}