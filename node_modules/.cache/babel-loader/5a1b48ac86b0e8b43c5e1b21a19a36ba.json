{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/pages/TokenDetails/index.tsx\",\n  _s = $RefreshSig$();\nimport TokenDetails from 'components/Tokens/TokenDetails';\nimport { TokenDetailsPageSkeleton } from 'components/Tokens/TokenDetails/Skeleton';\nimport { NATIVE_CHAIN_ID } from 'constants/tokens';\nimport { useTokenPriceQuery, useTokenQuery } from 'graphql/data/__generated__/types-and-hooks';\nimport { TimePeriod, toHistoryDuration, validateUrlChainParam } from 'graphql/data/util';\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport { useAtom } from 'jotai';\nimport { atomWithStorage } from 'jotai/utils';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getNativeTokenDBAddress } from 'utils/nativeTokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pageTimePeriodAtom = atomWithStorage('tokenDetailsTimePeriod', TimePeriod.DAY);\nexport default function TokenDetailsPage() {\n  _s();\n  const {\n    tokenAddress,\n    chainName\n  } = useParams();\n  const chain = validateUrlChainParam(chainName);\n  const isNative = tokenAddress === NATIVE_CHAIN_ID;\n  const [timePeriod, setTimePeriod] = useAtom(pageTimePeriodAtom);\n  const [detailedTokenAddress, duration] = useMemo(\n  /* tokenAddress will always be defined in the path for for this page to render, but useParams will always\n    return optional arguments; nullish coalescing operator is present here to appease typechecker */\n  () => [isNative ? getNativeTokenDBAddress(chain) : tokenAddress !== null && tokenAddress !== void 0 ? tokenAddress : '', toHistoryDuration(timePeriod)], [chain, isNative, timePeriod, tokenAddress]);\n  const parsedQs = useParsedQueryString();\n  const parsedInputTokenAddress = useMemo(() => {\n    return typeof parsedQs.inputCurrency === 'string' ? parsedQs.inputCurrency : undefined;\n  }, [parsedQs]);\n  const {\n    data: tokenQuery\n  } = useTokenQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain\n    },\n    errorPolicy: 'all'\n  });\n  const {\n    data: tokenPriceQuery\n  } = useTokenPriceQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain,\n      duration\n    },\n    errorPolicy: 'all'\n  });\n\n  // Saves already-loaded chart data into state to display while tokenPriceQuery is undefined timePeriod input changes\n  const [currentPriceQuery, setCurrentPriceQuery] = useState(tokenPriceQuery);\n  useEffect(() => {\n    if (tokenPriceQuery) setCurrentPriceQuery(tokenPriceQuery);\n  }, [setCurrentPriceQuery, tokenPriceQuery]);\n  if (!tokenQuery) return /*#__PURE__*/_jsxDEV(TokenDetailsPageSkeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TokenDetails, {\n    urlAddress: tokenAddress,\n    chain: chain,\n    tokenQuery: tokenQuery,\n    tokenPriceQuery: currentPriceQuery,\n    onChangeTimePeriod: setTimePeriod,\n    inputTokenAddress: parsedInputTokenAddress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(TokenDetailsPage, \"3tV6WnbwtdapdV6Krb/GvVqT2rc=\", false, function () {\n  return [useParams, useAtom, useParsedQueryString, useTokenQuery, useTokenPriceQuery];\n});\n_c = TokenDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"TokenDetailsPage\");","map":{"version":3,"names":["TokenDetails","TokenDetailsPageSkeleton","NATIVE_CHAIN_ID","useTokenPriceQuery","useTokenQuery","TimePeriod","toHistoryDuration","validateUrlChainParam","useParsedQueryString","useAtom","atomWithStorage","useEffect","useMemo","useState","useParams","getNativeTokenDBAddress","pageTimePeriodAtom","DAY","TokenDetailsPage","tokenAddress","chainName","chain","isNative","timePeriod","setTimePeriod","detailedTokenAddress","duration","parsedQs","parsedInputTokenAddress","inputCurrency","undefined","data","tokenQuery","variables","address","errorPolicy","tokenPriceQuery","currentPriceQuery","setCurrentPriceQuery"],"sources":["/home/diep/freelance/interface/src/pages/TokenDetails/index.tsx"],"sourcesContent":["import TokenDetails from 'components/Tokens/TokenDetails'\nimport { TokenDetailsPageSkeleton } from 'components/Tokens/TokenDetails/Skeleton'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { useTokenPriceQuery, useTokenQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { TimePeriod, toHistoryDuration, validateUrlChainParam } from 'graphql/data/util'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useAtom } from 'jotai'\nimport { atomWithStorage } from 'jotai/utils'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getNativeTokenDBAddress } from 'utils/nativeTokens'\n\nexport const pageTimePeriodAtom = atomWithStorage<TimePeriod>('tokenDetailsTimePeriod', TimePeriod.DAY)\n\nexport default function TokenDetailsPage() {\n  const { tokenAddress, chainName } = useParams<{\n    tokenAddress: string\n    chainName?: string\n  }>()\n  const chain = validateUrlChainParam(chainName)\n  const isNative = tokenAddress === NATIVE_CHAIN_ID\n  const [timePeriod, setTimePeriod] = useAtom(pageTimePeriodAtom)\n  const [detailedTokenAddress, duration] = useMemo(\n    /* tokenAddress will always be defined in the path for for this page to render, but useParams will always\n      return optional arguments; nullish coalescing operator is present here to appease typechecker */\n    () => [isNative ? getNativeTokenDBAddress(chain) : tokenAddress ?? '', toHistoryDuration(timePeriod)],\n    [chain, isNative, timePeriod, tokenAddress]\n  )\n\n  const parsedQs = useParsedQueryString()\n\n  const parsedInputTokenAddress: string | undefined = useMemo(() => {\n    return typeof parsedQs.inputCurrency === 'string' ? (parsedQs.inputCurrency as string) : undefined\n  }, [parsedQs])\n\n  const { data: tokenQuery } = useTokenQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain,\n    },\n    errorPolicy: 'all',\n  })\n\n  const { data: tokenPriceQuery } = useTokenPriceQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain,\n      duration,\n    },\n    errorPolicy: 'all',\n  })\n\n  // Saves already-loaded chart data into state to display while tokenPriceQuery is undefined timePeriod input changes\n  const [currentPriceQuery, setCurrentPriceQuery] = useState(tokenPriceQuery)\n  useEffect(() => {\n    if (tokenPriceQuery) setCurrentPriceQuery(tokenPriceQuery)\n  }, [setCurrentPriceQuery, tokenPriceQuery])\n\n  if (!tokenQuery) return <TokenDetailsPageSkeleton />\n\n  return (\n    <TokenDetails\n      urlAddress={tokenAddress}\n      chain={chain}\n      tokenQuery={tokenQuery}\n      tokenPriceQuery={currentPriceQuery}\n      onChangeTimePeriod={setTimePeriod}\n      inputTokenAddress={parsedInputTokenAddress}\n    />\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}