{"ast":null,"code":"export const getIsInjected = () => Boolean(window.ethereum);\n\n// When using Brave browser, `isMetaMask` is set to true when using the built-in wallet\n// This variable should be true only when using the MetaMask extension\n// https://wallet-docs.brave.com/ethereum/wallet-detection#compatability-with-metamask\n\nconst allNonMetamaskFlags = ['isRabby', 'isBraveWallet', 'isTrustWallet', 'isLedgerConnect'];\nexport const getIsMetaMaskWallet = () => {\n  var _window$ethereum;\n  return Boolean(((_window$ethereum = window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.isMetaMask) && !allNonMetamaskFlags.some(flag => {\n    var _window$ethereum2;\n    return (_window$ethereum2 = window.ethereum) === null || _window$ethereum2 === void 0 ? void 0 : _window$ethereum2[flag];\n  }));\n};\nexport const getIsCoinbaseWallet = () => {\n  var _window$ethereum3;\n  return Boolean((_window$ethereum3 = window.ethereum) === null || _window$ethereum3 === void 0 ? void 0 : _window$ethereum3.isCoinbaseWallet);\n};\n\n// https://eips.ethereum.org/EIPS/eip-1193#provider-errors\nexport let ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"USER_REJECTED_REQUEST\"] = 4001] = \"USER_REJECTED_REQUEST\";\n  ErrorCode[ErrorCode[\"UNAUTHORIZED\"] = 4100] = \"UNAUTHORIZED\";\n  ErrorCode[ErrorCode[\"UNSUPPORTED_METHOD\"] = 4200] = \"UNSUPPORTED_METHOD\";\n  ErrorCode[ErrorCode[\"DISCONNECTED\"] = 4900] = \"DISCONNECTED\";\n  ErrorCode[ErrorCode[\"CHAIN_DISCONNECTED\"] = 4901] = \"CHAIN_DISCONNECTED\";\n  ErrorCode[ErrorCode[\"CHAIN_NOT_ADDED\"] = 4902] = \"CHAIN_NOT_ADDED\";\n  ErrorCode[ErrorCode[\"MM_ALREADY_PENDING\"] = -32002] = \"MM_ALREADY_PENDING\";\n  ErrorCode[\"WC_MODAL_CLOSED\"] = \"Error: User closed modal\";\n  ErrorCode[\"CB_REJECTED_REQUEST\"] = \"Error: User denied account authorization\";\n})(ErrorCode || (ErrorCode = {}));","map":{"version":3,"names":["getIsInjected","Boolean","window","ethereum","allNonMetamaskFlags","getIsMetaMaskWallet","isMetaMask","some","flag","getIsCoinbaseWallet","isCoinbaseWallet","ErrorCode"],"sources":["/home/diep/freelance/interface/src/connection/utils.ts"],"sourcesContent":["export const getIsInjected = () => Boolean(window.ethereum)\n\n// When using Brave browser, `isMetaMask` is set to true when using the built-in wallet\n// This variable should be true only when using the MetaMask extension\n// https://wallet-docs.brave.com/ethereum/wallet-detection#compatability-with-metamask\ntype NonMetaMaskFlag = 'isRabby' | 'isBraveWallet' | 'isTrustWallet' | 'isLedgerConnect'\nconst allNonMetamaskFlags: NonMetaMaskFlag[] = ['isRabby', 'isBraveWallet', 'isTrustWallet', 'isLedgerConnect']\nexport const getIsMetaMaskWallet = () =>\n  Boolean(window.ethereum?.isMetaMask && !allNonMetamaskFlags.some((flag) => window.ethereum?.[flag]))\n\nexport const getIsCoinbaseWallet = () => Boolean(window.ethereum?.isCoinbaseWallet)\n\n// https://eips.ethereum.org/EIPS/eip-1193#provider-errors\nexport enum ErrorCode {\n  USER_REJECTED_REQUEST = 4001,\n  UNAUTHORIZED = 4100,\n  UNSUPPORTED_METHOD = 4200,\n  DISCONNECTED = 4900,\n  CHAIN_DISCONNECTED = 4901,\n\n  // https://docs.metamask.io/guide/rpc-api.html#unrestricted-methods\n  CHAIN_NOT_ADDED = 4902,\n  MM_ALREADY_PENDING = -32002,\n\n  WC_MODAL_CLOSED = 'Error: User closed modal',\n  CB_REJECTED_REQUEST = 'Error: User denied account authorization',\n}\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,MAAMC,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC;;AAE3D;AACA;AACA;;AAEA,MAAMC,mBAAsC,GAAG,CAAC,SAAS,EAAE,eAAe,EAAE,eAAe,EAAE,iBAAiB,CAAC;AAC/G,OAAO,MAAMC,mBAAmB,GAAG;EAAA;EAAA,OACjCJ,OAAO,CAAC,qBAAAC,MAAM,CAACC,QAAQ,qDAAf,iBAAiBG,UAAU,KAAI,CAACF,mBAAmB,CAACG,IAAI,CAAEC,IAAI;IAAA;IAAA,4BAAKN,MAAM,CAACC,QAAQ,sDAAf,kBAAkBK,IAAI,CAAC;EAAA,EAAC,CAAC;AAAA;AAEtG,OAAO,MAAMC,mBAAmB,GAAG;EAAA;EAAA,OAAMR,OAAO,sBAACC,MAAM,CAACC,QAAQ,sDAAf,kBAAiBO,gBAAgB,CAAC;AAAA;;AAEnF;AACA,WAAYC,SAAS;AAapB,WAbWA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS;EAATA,SAAS;AAAA,GAATA,SAAS,KAATA,SAAS"},"metadata":{},"sourceType":"module"}