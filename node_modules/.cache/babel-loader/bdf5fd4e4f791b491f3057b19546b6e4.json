{"ast":null,"code":"var _s = $RefreshSig$();\nimport { PERMIT2_ADDRESS } from '@uniswap/permit2-sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport { AVERAGE_L1_BLOCK_TIME } from 'constants/chainInfo';\nimport { usePermitAllowance, useUpdatePermitAllowance } from 'hooks/usePermitAllowance';\nimport { useTokenAllowance, useUpdateTokenAllowance } from 'hooks/useTokenAllowance';\nimport useInterval from 'lib/hooks/useInterval';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useHasPendingApproval, useTransactionAdder } from 'state/transactions/hooks';\nvar ApprovalState;\n(function (ApprovalState) {\n  ApprovalState[ApprovalState[\"PENDING\"] = 0] = \"PENDING\";\n  ApprovalState[ApprovalState[\"SYNCING\"] = 1] = \"SYNCING\";\n  ApprovalState[ApprovalState[\"SYNCED\"] = 2] = \"SYNCED\";\n})(ApprovalState || (ApprovalState = {}));\nexport let AllowanceState;\n(function (AllowanceState) {\n  AllowanceState[AllowanceState[\"LOADING\"] = 0] = \"LOADING\";\n  AllowanceState[AllowanceState[\"REQUIRED\"] = 1] = \"REQUIRED\";\n  AllowanceState[AllowanceState[\"ALLOWED\"] = 2] = \"ALLOWED\";\n})(AllowanceState || (AllowanceState = {}));\nexport default function usePermit2Allowance(amount, spender) {\n  _s();\n  const {\n    account\n  } = useWeb3React();\n  const token = amount === null || amount === void 0 ? void 0 : amount.currency;\n  const {\n    tokenAllowance,\n    isSyncing: isApprovalSyncing\n  } = useTokenAllowance(token, account, PERMIT2_ADDRESS);\n  const updateTokenAllowance = useUpdateTokenAllowance(amount, PERMIT2_ADDRESS);\n  const isApproved = useMemo(() => {\n    if (!amount || !tokenAllowance) return false;\n    return tokenAllowance.greaterThan(amount) || tokenAllowance.equalTo(amount);\n  }, [amount, tokenAllowance]);\n\n  // Marks approval as loading from the time it is submitted (pending), until it has confirmed and another block synced.\n  // This avoids re-prompting the user for an already-submitted but not-yet-observed approval, by marking it loading\n  // until it has been re-observed. It wll sync immediately, because confirmation fast-forwards the block number.\n  const [approvalState, setApprovalState] = useState(ApprovalState.SYNCED);\n  const isApprovalLoading = approvalState !== ApprovalState.SYNCED;\n  const isApprovalPending = useHasPendingApproval(token, PERMIT2_ADDRESS);\n  useEffect(() => {\n    if (isApprovalPending) {\n      setApprovalState(ApprovalState.PENDING);\n    } else {\n      setApprovalState(state => {\n        if (state === ApprovalState.PENDING && isApprovalSyncing) {\n          return ApprovalState.SYNCING;\n        } else if (state === ApprovalState.SYNCING && !isApprovalSyncing) {\n          return ApprovalState.SYNCED;\n        }\n        return state;\n      });\n    }\n  }, [isApprovalPending, isApprovalSyncing]);\n\n  // Signature and PermitAllowance will expire, so they should be rechecked at an interval.\n  // Calculate now such that the signature will still be valid for the submitting block.\n  const [now, setNow] = useState(Date.now() + AVERAGE_L1_BLOCK_TIME);\n  useInterval(useCallback(() => setNow((Date.now() + AVERAGE_L1_BLOCK_TIME) / 1000), []), AVERAGE_L1_BLOCK_TIME);\n  const [signature, setSignature] = useState();\n  const isSigned = useMemo(() => {\n    if (!amount || !signature) return false;\n    return signature.details.token === (token === null || token === void 0 ? void 0 : token.address) && signature.spender === spender && signature.sigDeadline >= now;\n  }, [amount, now, signature, spender, token === null || token === void 0 ? void 0 : token.address]);\n  const {\n    permitAllowance,\n    expiration: permitExpiration,\n    nonce\n  } = usePermitAllowance(token, account, spender);\n  const updatePermitAllowance = useUpdatePermitAllowance(token, spender, nonce, setSignature);\n  const isPermitted = useMemo(() => {\n    if (!amount || !permitAllowance || !permitExpiration) return false;\n    return (permitAllowance.greaterThan(amount) || permitAllowance.equalTo(amount)) && permitExpiration >= now;\n  }, [amount, now, permitAllowance, permitExpiration]);\n  const shouldRequestApproval = !(isApproved || isApprovalLoading);\n  const shouldRequestSignature = !(isPermitted || isSigned);\n  const addTransaction = useTransactionAdder();\n  const approveAndPermit = useCallback(async () => {\n    if (shouldRequestApproval) {\n      const {\n        response,\n        info\n      } = await updateTokenAllowance();\n      addTransaction(response, info);\n    }\n    if (shouldRequestSignature) {\n      await updatePermitAllowance();\n    }\n  }, [addTransaction, shouldRequestApproval, shouldRequestSignature, updatePermitAllowance, updateTokenAllowance]);\n  return useMemo(() => {\n    if (token) {\n      if (!tokenAllowance || !permitAllowance) {\n        return {\n          state: AllowanceState.LOADING\n        };\n      } else if (!(isPermitted || isSigned)) {\n        return {\n          token,\n          state: AllowanceState.REQUIRED,\n          isApprovalLoading: false,\n          approveAndPermit\n        };\n      } else if (!isApproved) {\n        return {\n          token,\n          state: AllowanceState.REQUIRED,\n          isApprovalLoading,\n          approveAndPermit\n        };\n      }\n    }\n    return {\n      token,\n      state: AllowanceState.ALLOWED,\n      permitSignature: !isPermitted && isSigned ? signature : undefined\n    };\n  }, [approveAndPermit, isApprovalLoading, isApproved, isPermitted, isSigned, permitAllowance, signature, token, tokenAllowance]);\n}\n_s(usePermit2Allowance, \"MTiwQq4k3s//1D57hwcgKqjS8GY=\", false, function () {\n  return [useWeb3React, useTokenAllowance, useUpdateTokenAllowance, useHasPendingApproval, useInterval, usePermitAllowance, useUpdatePermitAllowance, useTransactionAdder];\n});","map":{"version":3,"names":["PERMIT2_ADDRESS","useWeb3React","AVERAGE_L1_BLOCK_TIME","usePermitAllowance","useUpdatePermitAllowance","useTokenAllowance","useUpdateTokenAllowance","useInterval","useCallback","useEffect","useMemo","useState","useHasPendingApproval","useTransactionAdder","ApprovalState","AllowanceState","usePermit2Allowance","amount","spender","account","token","currency","tokenAllowance","isSyncing","isApprovalSyncing","updateTokenAllowance","isApproved","greaterThan","equalTo","approvalState","setApprovalState","SYNCED","isApprovalLoading","isApprovalPending","PENDING","state","SYNCING","now","setNow","Date","signature","setSignature","isSigned","details","address","sigDeadline","permitAllowance","expiration","permitExpiration","nonce","updatePermitAllowance","isPermitted","shouldRequestApproval","shouldRequestSignature","addTransaction","approveAndPermit","response","info","LOADING","REQUIRED","ALLOWED","permitSignature","undefined"],"sources":["/home/diep/freelance/interface/src/hooks/usePermit2Allowance.ts"],"sourcesContent":["import { PERMIT2_ADDRESS } from '@uniswap/permit2-sdk'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { AVERAGE_L1_BLOCK_TIME } from 'constants/chainInfo'\nimport { PermitSignature, usePermitAllowance, useUpdatePermitAllowance } from 'hooks/usePermitAllowance'\nimport { useTokenAllowance, useUpdateTokenAllowance } from 'hooks/useTokenAllowance'\nimport useInterval from 'lib/hooks/useInterval'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHasPendingApproval, useTransactionAdder } from 'state/transactions/hooks'\n\nenum ApprovalState {\n  PENDING,\n  SYNCING,\n  SYNCED,\n}\n\nexport enum AllowanceState {\n  LOADING,\n  REQUIRED,\n  ALLOWED,\n}\n\ninterface AllowanceRequired {\n  state: AllowanceState.REQUIRED\n  token: Token\n  isApprovalLoading: boolean\n  approveAndPermit: () => Promise<void>\n}\n\nexport type Allowance =\n  | { state: AllowanceState.LOADING }\n  | {\n      state: AllowanceState.ALLOWED\n      permitSignature?: PermitSignature\n    }\n  | AllowanceRequired\n\nexport default function usePermit2Allowance(amount?: CurrencyAmount<Token>, spender?: string): Allowance {\n  const { account } = useWeb3React()\n  const token = amount?.currency\n\n  const { tokenAllowance, isSyncing: isApprovalSyncing } = useTokenAllowance(token, account, PERMIT2_ADDRESS)\n  const updateTokenAllowance = useUpdateTokenAllowance(amount, PERMIT2_ADDRESS)\n  const isApproved = useMemo(() => {\n    if (!amount || !tokenAllowance) return false\n    return tokenAllowance.greaterThan(amount) || tokenAllowance.equalTo(amount)\n  }, [amount, tokenAllowance])\n\n  // Marks approval as loading from the time it is submitted (pending), until it has confirmed and another block synced.\n  // This avoids re-prompting the user for an already-submitted but not-yet-observed approval, by marking it loading\n  // until it has been re-observed. It wll sync immediately, because confirmation fast-forwards the block number.\n  const [approvalState, setApprovalState] = useState(ApprovalState.SYNCED)\n  const isApprovalLoading = approvalState !== ApprovalState.SYNCED\n  const isApprovalPending = useHasPendingApproval(token, PERMIT2_ADDRESS)\n  useEffect(() => {\n    if (isApprovalPending) {\n      setApprovalState(ApprovalState.PENDING)\n    } else {\n      setApprovalState((state) => {\n        if (state === ApprovalState.PENDING && isApprovalSyncing) {\n          return ApprovalState.SYNCING\n        } else if (state === ApprovalState.SYNCING && !isApprovalSyncing) {\n          return ApprovalState.SYNCED\n        }\n        return state\n      })\n    }\n  }, [isApprovalPending, isApprovalSyncing])\n\n  // Signature and PermitAllowance will expire, so they should be rechecked at an interval.\n  // Calculate now such that the signature will still be valid for the submitting block.\n  const [now, setNow] = useState(Date.now() + AVERAGE_L1_BLOCK_TIME)\n  useInterval(\n    useCallback(() => setNow((Date.now() + AVERAGE_L1_BLOCK_TIME) / 1000), []),\n    AVERAGE_L1_BLOCK_TIME\n  )\n\n  const [signature, setSignature] = useState<PermitSignature>()\n  const isSigned = useMemo(() => {\n    if (!amount || !signature) return false\n    return signature.details.token === token?.address && signature.spender === spender && signature.sigDeadline >= now\n  }, [amount, now, signature, spender, token?.address])\n\n  const { permitAllowance, expiration: permitExpiration, nonce } = usePermitAllowance(token, account, spender)\n  const updatePermitAllowance = useUpdatePermitAllowance(token, spender, nonce, setSignature)\n  const isPermitted = useMemo(() => {\n    if (!amount || !permitAllowance || !permitExpiration) return false\n    return (permitAllowance.greaterThan(amount) || permitAllowance.equalTo(amount)) && permitExpiration >= now\n  }, [amount, now, permitAllowance, permitExpiration])\n\n  const shouldRequestApproval = !(isApproved || isApprovalLoading)\n  const shouldRequestSignature = !(isPermitted || isSigned)\n  const addTransaction = useTransactionAdder()\n  const approveAndPermit = useCallback(async () => {\n    if (shouldRequestApproval) {\n      const { response, info } = await updateTokenAllowance()\n      addTransaction(response, info)\n    }\n    if (shouldRequestSignature) {\n      await updatePermitAllowance()\n    }\n  }, [addTransaction, shouldRequestApproval, shouldRequestSignature, updatePermitAllowance, updateTokenAllowance])\n\n  return useMemo(() => {\n    if (token) {\n      if (!tokenAllowance || !permitAllowance) {\n        return { state: AllowanceState.LOADING }\n      } else if (!(isPermitted || isSigned)) {\n        return { token, state: AllowanceState.REQUIRED, isApprovalLoading: false, approveAndPermit }\n      } else if (!isApproved) {\n        return { token, state: AllowanceState.REQUIRED, isApprovalLoading, approveAndPermit }\n      }\n    }\n    return { token, state: AllowanceState.ALLOWED, permitSignature: !isPermitted && isSigned ? signature : undefined }\n  }, [\n    approveAndPermit,\n    isApprovalLoading,\n    isApproved,\n    isPermitted,\n    isSigned,\n    permitAllowance,\n    signature,\n    token,\n    tokenAllowance,\n  ])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}