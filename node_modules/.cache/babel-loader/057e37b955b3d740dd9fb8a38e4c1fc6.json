{"ast":null,"code":"var _s = $RefreshSig$();\nimport { parse } from 'qs';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ThemeMode, useDarkModeManager } from './ThemeToggle';\nexport default function DarkModeQueryParamReader() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const [, updateMode] = useDarkModeManager();\n  useEffect(() => {\n    if (!search) return;\n    if (search.length < 2) return;\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    });\n    const theme = parsed.theme;\n    if (typeof theme !== 'string') return;\n    if (theme.toLowerCase() === 'light') {\n      updateMode(ThemeMode.LIGHT);\n    } else if (theme.toLowerCase() === 'dark') {\n      updateMode(ThemeMode.DARK);\n    }\n  }, [search, updateMode]);\n  return null;\n}\n_s(DarkModeQueryParamReader, \"FusSfScv1csDyEj8rTq578Aixdk=\", false, function () {\n  return [useLocation, useDarkModeManager];\n});\n_c = DarkModeQueryParamReader;\nvar _c;\n$RefreshReg$(_c, \"DarkModeQueryParamReader\");","map":{"version":3,"names":["parse","useEffect","useLocation","ThemeMode","useDarkModeManager","DarkModeQueryParamReader","search","updateMode","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","LIGHT","DARK"],"sources":["/home/diep/freelance/interface/src/theme/components/DarkModeQueryParamReader.tsx"],"sourcesContent":["import { parse } from 'qs'\nimport { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { ThemeMode, useDarkModeManager } from './ThemeToggle'\n\nexport default function DarkModeQueryParamReader(): null {\n  const { search } = useLocation()\n  const [, updateMode] = useDarkModeManager()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      updateMode(ThemeMode.LIGHT)\n    } else if (theme.toLowerCase() === 'dark') {\n      updateMode(ThemeMode.DARK)\n    }\n  }, [search, updateMode])\n\n  return null\n}\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,IAAI;AAC1B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,SAAS,EAAEC,kBAAkB,QAAQ,eAAe;AAE7D,eAAe,SAASC,wBAAwB,GAAS;EAAA;EACvD,MAAM;IAAEC;EAAO,CAAC,GAAGJ,WAAW,EAAE;EAChC,MAAM,GAAGK,UAAU,CAAC,GAAGH,kBAAkB,EAAE;EAE3CH,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,MAAM,EAAE;IACb,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;IAEvB,MAAMC,MAAM,GAAGT,KAAK,CAACM,MAAM,EAAE;MAC3BI,WAAW,EAAE,KAAK;MAClBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGH,MAAM,CAACG,KAAK;IAE1B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAE/B,IAAIA,KAAK,CAACC,WAAW,EAAE,KAAK,OAAO,EAAE;MACnCN,UAAU,CAACJ,SAAS,CAACW,KAAK,CAAC;IAC7B,CAAC,MAAM,IAAIF,KAAK,CAACC,WAAW,EAAE,KAAK,MAAM,EAAE;MACzCN,UAAU,CAACJ,SAAS,CAACY,IAAI,CAAC;IAC5B;EACF,CAAC,EAAE,CAACT,MAAM,EAAEC,UAAU,CAAC,CAAC;EAExB,OAAO,IAAI;AACb;AAAC,GAzBuBF,wBAAwB;EAAA,QAC3BH,WAAW,EACPE,kBAAkB;AAAA;AAAA,KAFnBC,wBAAwB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}