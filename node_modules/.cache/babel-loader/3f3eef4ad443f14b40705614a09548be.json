{"ast":null,"code":"import { BagItemStatus } from 'nft/types';\nexport const buildSellObject = amount => {\n  return {\n    address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n    amount,\n    decimals: 18,\n    name: 'Ethereum',\n    priceInfo: {\n      baseAsset: 'ETH',\n      basePrice: amount,\n      ETHPrice: amount\n    },\n    symbol: 'ETH',\n    tokenId: 'ETH',\n    tokenType: 'ERC20'\n  };\n};\nexport const buildNftTradeInputFromBagItems = itemsInBag => {\n  const assetsToBuy = itemsInBag.filter(item => item.status !== BagItemStatus.UNAVAILABLE).map(item => item.asset);\n  return buildNftTradeInput(assetsToBuy);\n};\nconst buildNftTradeInput = assets => {\n  return assets.flatMap(asset => {\n    const {\n      id,\n      address,\n      marketplace,\n      priceInfo,\n      tokenId,\n      tokenType\n    } = asset;\n    if (!id || !marketplace || !tokenType) return [];\n    const ethAmountInput = {\n      amount: priceInfo.ETHPrice,\n      token: {\n        address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n        chainId: 1,\n        decimals: 18,\n        isNative: true\n      }\n    };\n    return [{\n      amount: 1,\n      contractAddress: address,\n      id,\n      marketplace: marketplace.toUpperCase(),\n      quotePrice: ethAmountInput,\n      tokenId,\n      tokenType\n    }];\n  });\n};","map":{"version":3,"names":["BagItemStatus","buildSellObject","amount","address","decimals","name","priceInfo","baseAsset","basePrice","ETHPrice","symbol","tokenId","tokenType","buildNftTradeInputFromBagItems","itemsInBag","assetsToBuy","filter","item","status","UNAVAILABLE","map","asset","buildNftTradeInput","assets","flatMap","id","marketplace","ethAmountInput","token","chainId","isNative","contractAddress","toUpperCase","quotePrice"],"sources":["/home/diep/freelance/interface/src/nft/utils/buildSellObject.ts"],"sourcesContent":["import { NftMarketplace, NftTradeInput, TokenAmountInput } from 'graphql/data/__generated__/types-and-hooks'\nimport { BagItem, BagItemStatus, UpdatedGenieAsset } from 'nft/types'\n\nexport const buildSellObject = (amount: string) => {\n  return {\n    address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n    amount,\n    decimals: 18,\n    name: 'Ethereum',\n    priceInfo: {\n      baseAsset: 'ETH',\n      basePrice: amount,\n      ETHPrice: amount,\n    },\n    symbol: 'ETH',\n    tokenId: 'ETH',\n    tokenType: 'ERC20',\n  }\n}\n\nexport const buildNftTradeInputFromBagItems = (itemsInBag: BagItem[]): NftTradeInput[] => {\n  const assetsToBuy = itemsInBag.filter((item) => item.status !== BagItemStatus.UNAVAILABLE).map((item) => item.asset)\n  return buildNftTradeInput(assetsToBuy)\n}\n\nconst buildNftTradeInput = (assets: UpdatedGenieAsset[]): NftTradeInput[] => {\n  return assets.flatMap((asset) => {\n    const { id, address, marketplace, priceInfo, tokenId, tokenType } = asset\n\n    if (!id || !marketplace || !tokenType) return []\n\n    const ethAmountInput: TokenAmountInput = {\n      amount: priceInfo.ETHPrice,\n      token: {\n        address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n        chainId: 1,\n        decimals: 18,\n        isNative: true,\n      },\n    }\n\n    return [\n      {\n        amount: 1,\n        contractAddress: address,\n        id,\n        marketplace: marketplace.toUpperCase() as NftMarketplace,\n        quotePrice: ethAmountInput,\n        tokenId,\n        tokenType,\n      },\n    ]\n  })\n}\n"],"mappings":"AACA,SAAkBA,aAAa,QAA2B,WAAW;AAErE,OAAO,MAAMC,eAAe,GAAIC,MAAc,IAAK;EACjD,OAAO;IACLC,OAAO,EAAE,4CAA4C;IACrDD,MAAM;IACNE,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAE;MACTC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAEN,MAAM;MACjBO,QAAQ,EAAEP;IACZ,CAAC;IACDQ,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE;EACb,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,8BAA8B,GAAIC,UAAqB,IAAsB;EACxF,MAAMC,WAAW,GAAGD,UAAU,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKlB,aAAa,CAACmB,WAAW,CAAC,CAACC,GAAG,CAAEH,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;EACpH,OAAOC,kBAAkB,CAACP,WAAW,CAAC;AACxC,CAAC;AAED,MAAMO,kBAAkB,GAAIC,MAA2B,IAAsB;EAC3E,OAAOA,MAAM,CAACC,OAAO,CAAEH,KAAK,IAAK;IAC/B,MAAM;MAAEI,EAAE;MAAEtB,OAAO;MAAEuB,WAAW;MAAEpB,SAAS;MAAEK,OAAO;MAAEC;IAAU,CAAC,GAAGS,KAAK;IAEzE,IAAI,CAACI,EAAE,IAAI,CAACC,WAAW,IAAI,CAACd,SAAS,EAAE,OAAO,EAAE;IAEhD,MAAMe,cAAgC,GAAG;MACvCzB,MAAM,EAAEI,SAAS,CAACG,QAAQ;MAC1BmB,KAAK,EAAE;QACLzB,OAAO,EAAE,4CAA4C;QACrD0B,OAAO,EAAE,CAAC;QACVzB,QAAQ,EAAE,EAAE;QACZ0B,QAAQ,EAAE;MACZ;IACF,CAAC;IAED,OAAO,CACL;MACE5B,MAAM,EAAE,CAAC;MACT6B,eAAe,EAAE5B,OAAO;MACxBsB,EAAE;MACFC,WAAW,EAAEA,WAAW,CAACM,WAAW,EAAoB;MACxDC,UAAU,EAAEN,cAAc;MAC1BhB,OAAO;MACPC;IACF,CAAC,CACF;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}