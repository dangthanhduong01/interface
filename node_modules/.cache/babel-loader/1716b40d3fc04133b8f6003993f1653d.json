{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { formatEther } from '@ethersproject/units';\nimport { useCurrency } from 'hooks/Tokens';\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice';\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount';\nimport { BagItemStatus } from 'nft/types';\nimport { useMemo } from 'react';\nimport { useBag } from './useBag';\nexport function useBagTotalEthPrice() {\n  _s();\n  const itemsInBag = useBag(state => state.itemsInBag);\n  return useMemo(() => {\n    const totalEthPrice = itemsInBag.reduce((total, item) => item.status !== BagItemStatus.UNAVAILABLE ? total.add(BigNumber.from(item.asset.updatedPriceInfo ? item.asset.updatedPriceInfo.ETHPrice : item.asset.priceInfo.ETHPrice)) : total, BigNumber.from(0));\n    return totalEthPrice;\n  }, [itemsInBag]);\n}\n_s(useBagTotalEthPrice, \"aTpREcoVoXqnZP0KzcWZocJUMtk=\", false, function () {\n  return [useBag];\n});\nexport function useBagTotalUsdPrice() {\n  _s2();\n  const totalEthPrice = useBagTotalEthPrice();\n  const defaultCurrency = useCurrency('ETH');\n  const parsedOutputAmount = useMemo(() => {\n    return tryParseCurrencyAmount(formatEther(totalEthPrice.toString()), defaultCurrency !== null && defaultCurrency !== void 0 ? defaultCurrency : undefined);\n  }, [defaultCurrency, totalEthPrice]);\n  const usdcValue = useStablecoinValue(parsedOutputAmount);\n  return useMemo(() => {\n    return usdcValue === null || usdcValue === void 0 ? void 0 : usdcValue.toExact();\n  }, [usdcValue]);\n}\n_s2(useBagTotalUsdPrice, \"TBUvO5kt9hShUkC4c0lnc+3Pbf8=\", false, function () {\n  return [useBagTotalEthPrice, useCurrency, useStablecoinValue];\n});","map":{"version":3,"names":["BigNumber","formatEther","useCurrency","useStablecoinValue","tryParseCurrencyAmount","BagItemStatus","useMemo","useBag","useBagTotalEthPrice","itemsInBag","state","totalEthPrice","reduce","total","item","status","UNAVAILABLE","add","from","asset","updatedPriceInfo","ETHPrice","priceInfo","useBagTotalUsdPrice","defaultCurrency","parsedOutputAmount","toString","undefined","usdcValue","toExact"],"sources":["/home/diep/freelance/interface/src/nft/hooks/useBagTotalEthPrice.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { BagItemStatus } from 'nft/types'\nimport { useMemo } from 'react'\n\nimport { useBag } from './useBag'\n\nexport function useBagTotalEthPrice(): BigNumber {\n  const itemsInBag = useBag((state) => state.itemsInBag)\n\n  return useMemo(() => {\n    const totalEthPrice = itemsInBag.reduce(\n      (total, item) =>\n        item.status !== BagItemStatus.UNAVAILABLE\n          ? total.add(\n              BigNumber.from(\n                item.asset.updatedPriceInfo ? item.asset.updatedPriceInfo.ETHPrice : item.asset.priceInfo.ETHPrice\n              )\n            )\n          : total,\n      BigNumber.from(0)\n    )\n\n    return totalEthPrice\n  }, [itemsInBag])\n}\n\nexport function useBagTotalUsdPrice(): string | undefined {\n  const totalEthPrice = useBagTotalEthPrice()\n  const defaultCurrency = useCurrency('ETH')\n\n  const parsedOutputAmount = useMemo(() => {\n    return tryParseCurrencyAmount(formatEther(totalEthPrice.toString()), defaultCurrency ?? undefined)\n  }, [defaultCurrency, totalEthPrice])\n\n  const usdcValue = useStablecoinValue(parsedOutputAmount)\n\n  return useMemo(() => {\n    return usdcValue?.toExact()\n  }, [usdcValue])\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,OAAOC,sBAAsB,MAAM,kCAAkC;AACrE,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,MAAM,QAAQ,UAAU;AAEjC,OAAO,SAASC,mBAAmB,GAAc;EAAA;EAC/C,MAAMC,UAAU,GAAGF,MAAM,CAAEG,KAAK,IAAKA,KAAK,CAACD,UAAU,CAAC;EAEtD,OAAOH,OAAO,CAAC,MAAM;IACnB,MAAMK,aAAa,GAAGF,UAAU,CAACG,MAAM,CACrC,CAACC,KAAK,EAAEC,IAAI,KACVA,IAAI,CAACC,MAAM,KAAKV,aAAa,CAACW,WAAW,GACrCH,KAAK,CAACI,GAAG,CACPjB,SAAS,CAACkB,IAAI,CACZJ,IAAI,CAACK,KAAK,CAACC,gBAAgB,GAAGN,IAAI,CAACK,KAAK,CAACC,gBAAgB,CAACC,QAAQ,GAAGP,IAAI,CAACK,KAAK,CAACG,SAAS,CAACD,QAAQ,CACnG,CACF,GACDR,KAAK,EACXb,SAAS,CAACkB,IAAI,CAAC,CAAC,CAAC,CAClB;IAED,OAAOP,aAAa;EACtB,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;AAClB;AAAC,GAlBeD,mBAAmB;EAAA,QACdD,MAAM;AAAA;AAmB3B,OAAO,SAASgB,mBAAmB,GAAuB;EAAA;EACxD,MAAMZ,aAAa,GAAGH,mBAAmB,EAAE;EAC3C,MAAMgB,eAAe,GAAGtB,WAAW,CAAC,KAAK,CAAC;EAE1C,MAAMuB,kBAAkB,GAAGnB,OAAO,CAAC,MAAM;IACvC,OAAOF,sBAAsB,CAACH,WAAW,CAACU,aAAa,CAACe,QAAQ,EAAE,CAAC,EAAEF,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAIG,SAAS,CAAC;EACpG,CAAC,EAAE,CAACH,eAAe,EAAEb,aAAa,CAAC,CAAC;EAEpC,MAAMiB,SAAS,GAAGzB,kBAAkB,CAACsB,kBAAkB,CAAC;EAExD,OAAOnB,OAAO,CAAC,MAAM;IACnB,OAAOsB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEC,OAAO,EAAE;EAC7B,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;AACjB;AAAC,IAbeL,mBAAmB;EAAA,QACXf,mBAAmB,EACjBN,WAAW,EAMjBC,kBAAkB;AAAA"},"metadata":{},"sourceType":"module"}