{"ast":null,"code":"import { MaxUint256 } from '@ethersproject/constants';\nimport { PERMIT2_ADDRESS, UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk';\nimport axios from 'axios';\nimport { BigNumber } from 'ethers/lib/ethers';\nimport { SwapType } from '../routers';\nimport { Erc20__factory } from '../types/other/factories/Erc20__factory';\nimport { Permit2__factory } from '../types/other/factories/Permit2__factory';\nimport { ChainId, log, MAX_UINT160, SWAP_ROUTER_02_ADDRESSES } from '../util';\nimport { APPROVE_TOKEN_FOR_TRANSFER } from '../util/callData';\nimport { calculateGasUsed, initSwapRouteFromExisting } from '../util/gas-factory-helpers';\nimport { SimulationStatus, Simulator } from './simulation-provider';\nconst TENDERLY_BATCH_SIMULATE_API = (tenderlyBaseUrl, tenderlyUser, tenderlyProject) => `${tenderlyBaseUrl}/api/v1/account/${tenderlyUser}/project/${tenderlyProject}/simulate-batch`;\n// We multiply tenderly gas limit by this to overestimate gas limit\nconst DEFAULT_ESTIMATE_MULTIPLIER = 1.25;\nexport class FallbackTenderlySimulator extends Simulator {\n  constructor(chainId, provider, tenderlySimulator, ethEstimateGasSimulator) {\n    super(provider, chainId);\n    this.tenderlySimulator = tenderlySimulator;\n    this.ethEstimateGasSimulator = ethEstimateGasSimulator;\n  }\n  async simulateTransaction(fromAddress, swapOptions, swapRoute, l2GasData, providerConfig) {\n    // Make call to eth estimate gas if possible\n    // For erc20s, we must check if the token allowance is sufficient\n    const inputAmount = swapRoute.trade.inputAmount;\n    if (inputAmount.currency.isNative || (await this.checkTokenApproved(fromAddress, inputAmount, swapOptions, this.provider))) {\n      log.info('Simulating with eth_estimateGas since token is native or approved.');\n      try {\n        const swapRouteWithGasEstimate = await this.ethEstimateGasSimulator.ethEstimateGas(fromAddress, swapOptions, swapRoute, l2GasData);\n        return swapRouteWithGasEstimate;\n      } catch (err) {\n        log.info({\n          err: err\n        }, 'Error simulating using eth_estimateGas');\n        return {\n          ...swapRoute,\n          simulationStatus: SimulationStatus.Failed\n        };\n      }\n    }\n    try {\n      return await this.tenderlySimulator.simulateTransaction(fromAddress, swapOptions, swapRoute, l2GasData, providerConfig);\n    } catch (err) {\n      log.info({\n        err: err\n      }, 'Failed to simulate via Tenderly');\n      return {\n        ...swapRoute,\n        simulationStatus: SimulationStatus.Failed\n      };\n    }\n  }\n}\nexport class TenderlySimulator extends Simulator {\n  constructor(chainId, tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, v2PoolProvider, v3PoolProvider, provider, overrideEstimateMultiplier) {\n    super(provider, chainId);\n    this.tenderlyBaseUrl = tenderlyBaseUrl;\n    this.tenderlyUser = tenderlyUser;\n    this.tenderlyProject = tenderlyProject;\n    this.tenderlyAccessKey = tenderlyAccessKey;\n    this.v2PoolProvider = v2PoolProvider;\n    this.v3PoolProvider = v3PoolProvider;\n    this.overrideEstimateMultiplier = overrideEstimateMultiplier !== null && overrideEstimateMultiplier !== void 0 ? overrideEstimateMultiplier : {};\n  }\n  async simulateTransaction(fromAddress, swapOptions, swapRoute, l2GasData, providerConfig) {\n    var _a;\n    const currencyIn = swapRoute.trade.inputAmount.currency;\n    const tokenIn = currencyIn.wrapped;\n    const chainId = this.chainId;\n    if ([ChainId.CELO, ChainId.CELO_ALFAJORES].includes(chainId)) {\n      const msg = 'Celo not supported by Tenderly!';\n      log.info(msg);\n      return {\n        ...swapRoute,\n        simulationStatus: SimulationStatus.NotSupported\n      };\n    }\n    if (!swapRoute.methodParameters) {\n      const msg = 'No calldata provided to simulate transaction';\n      log.info(msg);\n      throw new Error(msg);\n    }\n    const {\n      calldata\n    } = swapRoute.methodParameters;\n    log.info({\n      calldata: swapRoute.methodParameters.calldata,\n      fromAddress: fromAddress,\n      chainId: chainId,\n      tokenInAddress: tokenIn.address,\n      router: swapOptions.type\n    }, 'Simulating transaction on Tenderly');\n    const blockNumber = await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber);\n    let estimatedGasUsed;\n    const estimateMultiplier = (_a = this.overrideEstimateMultiplier[chainId]) !== null && _a !== void 0 ? _a : DEFAULT_ESTIMATE_MULTIPLIER;\n    if (swapOptions.type == SwapType.UNIVERSAL_ROUTER) {\n      // Do initial onboarding approval of Permit2.\n      const erc20Interface = Erc20__factory.createInterface();\n      const approvePermit2Calldata = erc20Interface.encodeFunctionData('approve', [PERMIT2_ADDRESS, MaxUint256]);\n      // We are unsure if the users calldata contains a permit or not. We just\n      // max approve the Univeral Router from Permit2 instead, which will cover both cases.\n      const permit2Interface = Permit2__factory.createInterface();\n      const approveUniversalRouterCallData = permit2Interface.encodeFunctionData('approve', [tokenIn.address, UNIVERSAL_ROUTER_ADDRESS(this.chainId), MAX_UINT160, Math.floor(new Date().getTime() / 1000) + 10000000]);\n      const approvePermit2 = {\n        network_id: chainId,\n        gas_estimate: true,\n        input: approvePermit2Calldata,\n        to: tokenIn.address,\n        value: '0',\n        from: fromAddress\n      };\n      const approveUniversalRouter = {\n        network_id: chainId,\n        gas_estimate: true,\n        input: approveUniversalRouterCallData,\n        to: PERMIT2_ADDRESS,\n        value: '0',\n        from: fromAddress\n      };\n      const swap = {\n        network_id: chainId,\n        input: calldata,\n        gas_estimate: true,\n        to: UNIVERSAL_ROUTER_ADDRESS(this.chainId),\n        value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',\n        from: fromAddress,\n        // TODO: This is a Temporary fix given by Tenderly team, remove once resolved on their end.\n        block_number: chainId == ChainId.ARBITRUM_ONE && blockNumber ? blockNumber - 5 : undefined\n      };\n      const body = {\n        simulations: [approvePermit2, approveUniversalRouter, swap],\n        gas_estimate: true\n      };\n      const opts = {\n        headers: {\n          'X-Access-Key': this.tenderlyAccessKey\n        }\n      };\n      const url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);\n      const resp = (await axios.post(url, body, opts)).data;\n      // Validate tenderly response body\n      if (!resp || resp.simulation_results.length < 3 || !resp.simulation_results[2].transaction || resp.simulation_results[2].transaction.error_message) {\n        this.logTenderlyErrorResponse(resp);\n        return {\n          ...swapRoute,\n          simulationStatus: SimulationStatus.Failed\n        };\n      }\n      // Parse the gas used in the simulation response object, and then pad it so that we overestimate.\n      estimatedGasUsed = BigNumber.from((resp.simulation_results[2].transaction.gas_used * estimateMultiplier).toFixed(0));\n      log.info({\n        body,\n        approvePermit2GasUsed: resp.simulation_results[0].transaction.gas_used,\n        approveUniversalRouterGasUsed: resp.simulation_results[1].transaction.gas_used,\n        swapGasUsed: resp.simulation_results[2].transaction.gas_used,\n        swapWithMultiplier: estimatedGasUsed.toString()\n      }, 'Successfully Simulated Approvals + Swap via Tenderly for Universal Router. Gas used.');\n      log.info({\n        swapTransaction: resp.simulation_results[2].transaction\n      }, 'Successful Tenderly Swap Transaction for Universal Router');\n      log.info({\n        swapSimulation: resp.simulation_results[2].simulation\n      }, 'Successful Tenderly Swap Simulation for Universal Router');\n    } else if (swapOptions.type == SwapType.SWAP_ROUTER_02) {\n      const approve = {\n        network_id: chainId,\n        input: APPROVE_TOKEN_FOR_TRANSFER,\n        gas_estimate: true,\n        to: tokenIn.address,\n        value: '0',\n        from: fromAddress\n      };\n      const swap = {\n        network_id: chainId,\n        input: calldata,\n        to: SWAP_ROUTER_02_ADDRESSES(chainId),\n        gas_estimate: true,\n        value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',\n        from: fromAddress,\n        // TODO: This is a Temporary fix given by Tenderly team, remove once resolved on their end.\n        block_number: chainId == ChainId.ARBITRUM_ONE && blockNumber ? blockNumber - 5 : undefined\n      };\n      const body = {\n        simulations: [approve, swap]\n      };\n      const opts = {\n        headers: {\n          'X-Access-Key': this.tenderlyAccessKey\n        }\n      };\n      const url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);\n      const resp = (await axios.post(url, body, opts)).data;\n      // Validate tenderly response body\n      if (!resp || resp.simulation_results.length < 2 || !resp.simulation_results[1].transaction || resp.simulation_results[1].transaction.error_message) {\n        const msg = `Failed to Simulate Via Tenderly!: ${resp.simulation_results[1].transaction.error_message}`;\n        log.info({\n          err: resp.simulation_results[1].transaction.error_message\n        }, msg);\n        return {\n          ...swapRoute,\n          simulationStatus: SimulationStatus.Failed\n        };\n      }\n      // Parse the gas used in the simulation response object, and then pad it so that we overestimate.\n      estimatedGasUsed = BigNumber.from((resp.simulation_results[1].transaction.gas_used * estimateMultiplier).toFixed(0));\n      log.info({\n        body,\n        approveGasUsed: resp.simulation_results[0].transaction.gas_used,\n        swapGasUsed: resp.simulation_results[1].transaction.gas_used,\n        swapWithMultiplier: estimatedGasUsed.toString()\n      }, 'Successfully Simulated Approval + Swap via Tenderly for SwapRouter02. Gas used.');\n      log.info({\n        swapTransaction: resp.simulation_results[1].transaction\n      }, 'Successful Tenderly Swap Transaction for SwapRouter02');\n      log.info({\n        swapSimulation: resp.simulation_results[1].simulation\n      }, 'Successful Tenderly Swap Simulation for SwapRouter02');\n    } else {\n      throw new Error(`Unsupported swap type: ${swapOptions}`);\n    }\n    const {\n      estimatedGasUsedUSD,\n      estimatedGasUsedQuoteToken,\n      quoteGasAdjusted\n    } = await calculateGasUsed(chainId, swapRoute, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, l2GasData);\n    return {\n      ...initSwapRouteFromExisting(swapRoute, this.v2PoolProvider, this.v3PoolProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD),\n      simulationStatus: SimulationStatus.Succeeded\n    };\n  }\n  logTenderlyErrorResponse(resp) {\n    log.info({\n      resp\n    }, 'Failed to Simulate on Tenderly');\n    log.info({\n      err: resp.simulation_results.length >= 1 ? resp.simulation_results[0].transaction : {}\n    }, 'Failed to Simulate on Tenderly #1 Transaction');\n    log.info({\n      err: resp.simulation_results.length >= 1 ? resp.simulation_results[0].simulation : {}\n    }, 'Failed to Simulate on Tenderly #1 Simulation');\n    log.info({\n      err: resp.simulation_results.length >= 2 ? resp.simulation_results[1].transaction : {}\n    }, 'Failed to Simulate on Tenderly #2 Transaction');\n    log.info({\n      err: resp.simulation_results.length >= 2 ? resp.simulation_results[1].simulation : {}\n    }, 'Failed to Simulate on Tenderly #2 Simulation');\n    log.info({\n      err: resp.simulation_results.length >= 3 ? resp.simulation_results[2].transaction : {}\n    }, 'Failed to Simulate on Tenderly #3 Transaction');\n    log.info({\n      err: resp.simulation_results.length >= 3 ? resp.simulation_results[2].simulation : {}\n    }, 'Failed to Simulate on Tenderly #3 Simulation');\n  }\n}","map":{"version":3,"sources":["../../../src/providers/tenderly-simulation-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { MaxUint256 } from '@ethersproject/constants';\nimport { PERMIT2_ADDRESS, UNIVERSAL_ROUTER_ADDRESS, } from '@uniswap/universal-router-sdk';\nimport axios from 'axios';\nimport { BigNumber } from 'ethers/lib/ethers';\nimport { SwapType } from '../routers';\nimport { Erc20__factory } from '../types/other/factories/Erc20__factory';\nimport { Permit2__factory } from '../types/other/factories/Permit2__factory';\nimport { ChainId, log, MAX_UINT160, SWAP_ROUTER_02_ADDRESSES } from '../util';\nimport { APPROVE_TOKEN_FOR_TRANSFER } from '../util/callData';\nimport { calculateGasUsed, initSwapRouteFromExisting, } from '../util/gas-factory-helpers';\nimport { SimulationStatus, Simulator, } from './simulation-provider';\nconst TENDERLY_BATCH_SIMULATE_API = (tenderlyBaseUrl, tenderlyUser, tenderlyProject) => `${tenderlyBaseUrl}/api/v1/account/${tenderlyUser}/project/${tenderlyProject}/simulate-batch`;\n// We multiply tenderly gas limit by this to overestimate gas limit\nconst DEFAULT_ESTIMATE_MULTIPLIER = 1.25;\nexport class FallbackTenderlySimulator extends Simulator {\n    constructor(chainId, provider, tenderlySimulator, ethEstimateGasSimulator) {\n        super(provider, chainId);\n        this.tenderlySimulator = tenderlySimulator;\n        this.ethEstimateGasSimulator = ethEstimateGasSimulator;\n    }\n    async simulateTransaction(fromAddress, swapOptions, swapRoute, l2GasData, providerConfig) {\n        // Make call to eth estimate gas if possible\n        // For erc20s, we must check if the token allowance is sufficient\n        const inputAmount = swapRoute.trade.inputAmount;\n        if (inputAmount.currency.isNative ||\n            (await this.checkTokenApproved(fromAddress, inputAmount, swapOptions, this.provider))) {\n            log.info('Simulating with eth_estimateGas since token is native or approved.');\n            try {\n                const swapRouteWithGasEstimate = await this.ethEstimateGasSimulator.ethEstimateGas(fromAddress, swapOptions, swapRoute, l2GasData);\n                return swapRouteWithGasEstimate;\n            }\n            catch (err) {\n                log.info({ err: err }, 'Error simulating using eth_estimateGas');\n                return { ...swapRoute, simulationStatus: SimulationStatus.Failed };\n            }\n        }\n        try {\n            return await this.tenderlySimulator.simulateTransaction(fromAddress, swapOptions, swapRoute, l2GasData, providerConfig);\n        }\n        catch (err) {\n            log.info({ err: err }, 'Failed to simulate via Tenderly');\n            return { ...swapRoute, simulationStatus: SimulationStatus.Failed };\n        }\n    }\n}\nexport class TenderlySimulator extends Simulator {\n    constructor(chainId, tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, v2PoolProvider, v3PoolProvider, provider, overrideEstimateMultiplier) {\n        super(provider, chainId);\n        this.tenderlyBaseUrl = tenderlyBaseUrl;\n        this.tenderlyUser = tenderlyUser;\n        this.tenderlyProject = tenderlyProject;\n        this.tenderlyAccessKey = tenderlyAccessKey;\n        this.v2PoolProvider = v2PoolProvider;\n        this.v3PoolProvider = v3PoolProvider;\n        this.overrideEstimateMultiplier = overrideEstimateMultiplier !== null && overrideEstimateMultiplier !== void 0 ? overrideEstimateMultiplier : {};\n    }\n    async simulateTransaction(fromAddress, swapOptions, swapRoute, l2GasData, providerConfig) {\n        var _a;\n        const currencyIn = swapRoute.trade.inputAmount.currency;\n        const tokenIn = currencyIn.wrapped;\n        const chainId = this.chainId;\n        if ([ChainId.CELO, ChainId.CELO_ALFAJORES].includes(chainId)) {\n            const msg = 'Celo not supported by Tenderly!';\n            log.info(msg);\n            return { ...swapRoute, simulationStatus: SimulationStatus.NotSupported };\n        }\n        if (!swapRoute.methodParameters) {\n            const msg = 'No calldata provided to simulate transaction';\n            log.info(msg);\n            throw new Error(msg);\n        }\n        const { calldata } = swapRoute.methodParameters;\n        log.info({\n            calldata: swapRoute.methodParameters.calldata,\n            fromAddress: fromAddress,\n            chainId: chainId,\n            tokenInAddress: tokenIn.address,\n            router: swapOptions.type,\n        }, 'Simulating transaction on Tenderly');\n        const blockNumber = await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber);\n        let estimatedGasUsed;\n        const estimateMultiplier = (_a = this.overrideEstimateMultiplier[chainId]) !== null && _a !== void 0 ? _a : DEFAULT_ESTIMATE_MULTIPLIER;\n        if (swapOptions.type == SwapType.UNIVERSAL_ROUTER) {\n            // Do initial onboarding approval of Permit2.\n            const erc20Interface = Erc20__factory.createInterface();\n            const approvePermit2Calldata = erc20Interface.encodeFunctionData('approve', [PERMIT2_ADDRESS, MaxUint256]);\n            // We are unsure if the users calldata contains a permit or not. We just\n            // max approve the Univeral Router from Permit2 instead, which will cover both cases.\n            const permit2Interface = Permit2__factory.createInterface();\n            const approveUniversalRouterCallData = permit2Interface.encodeFunctionData('approve', [\n                tokenIn.address,\n                UNIVERSAL_ROUTER_ADDRESS(this.chainId),\n                MAX_UINT160,\n                Math.floor(new Date().getTime() / 1000) + 10000000,\n            ]);\n            const approvePermit2 = {\n                network_id: chainId,\n                gas_estimate: true,\n                input: approvePermit2Calldata,\n                to: tokenIn.address,\n                value: '0',\n                from: fromAddress,\n            };\n            const approveUniversalRouter = {\n                network_id: chainId,\n                gas_estimate: true,\n                input: approveUniversalRouterCallData,\n                to: PERMIT2_ADDRESS,\n                value: '0',\n                from: fromAddress,\n            };\n            const swap = {\n                network_id: chainId,\n                input: calldata,\n                gas_estimate: true,\n                to: UNIVERSAL_ROUTER_ADDRESS(this.chainId),\n                value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',\n                from: fromAddress,\n                // TODO: This is a Temporary fix given by Tenderly team, remove once resolved on their end.\n                block_number: chainId == ChainId.ARBITRUM_ONE && blockNumber\n                    ? blockNumber - 5\n                    : undefined,\n            };\n            const body = {\n                simulations: [approvePermit2, approveUniversalRouter, swap],\n                gas_estimate: true,\n            };\n            const opts = {\n                headers: {\n                    'X-Access-Key': this.tenderlyAccessKey,\n                },\n            };\n            const url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);\n            const resp = (await axios.post(url, body, opts)).data;\n            // Validate tenderly response body\n            if (!resp ||\n                resp.simulation_results.length < 3 ||\n                !resp.simulation_results[2].transaction ||\n                resp.simulation_results[2].transaction.error_message) {\n                this.logTenderlyErrorResponse(resp);\n                return { ...swapRoute, simulationStatus: SimulationStatus.Failed };\n            }\n            // Parse the gas used in the simulation response object, and then pad it so that we overestimate.\n            estimatedGasUsed = BigNumber.from((resp.simulation_results[2].transaction.gas_used * estimateMultiplier).toFixed(0));\n            log.info({\n                body,\n                approvePermit2GasUsed: resp.simulation_results[0].transaction.gas_used,\n                approveUniversalRouterGasUsed: resp.simulation_results[1].transaction.gas_used,\n                swapGasUsed: resp.simulation_results[2].transaction.gas_used,\n                swapWithMultiplier: estimatedGasUsed.toString(),\n            }, 'Successfully Simulated Approvals + Swap via Tenderly for Universal Router. Gas used.');\n            log.info({ swapTransaction: resp.simulation_results[2].transaction }, 'Successful Tenderly Swap Transaction for Universal Router');\n            log.info({ swapSimulation: resp.simulation_results[2].simulation }, 'Successful Tenderly Swap Simulation for Universal Router');\n        }\n        else if (swapOptions.type == SwapType.SWAP_ROUTER_02) {\n            const approve = {\n                network_id: chainId,\n                input: APPROVE_TOKEN_FOR_TRANSFER,\n                gas_estimate: true,\n                to: tokenIn.address,\n                value: '0',\n                from: fromAddress,\n            };\n            const swap = {\n                network_id: chainId,\n                input: calldata,\n                to: SWAP_ROUTER_02_ADDRESSES(chainId),\n                gas_estimate: true,\n                value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',\n                from: fromAddress,\n                // TODO: This is a Temporary fix given by Tenderly team, remove once resolved on their end.\n                block_number: chainId == ChainId.ARBITRUM_ONE && blockNumber\n                    ? blockNumber - 5\n                    : undefined,\n            };\n            const body = { simulations: [approve, swap] };\n            const opts = {\n                headers: {\n                    'X-Access-Key': this.tenderlyAccessKey,\n                },\n            };\n            const url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);\n            const resp = (await axios.post(url, body, opts)).data;\n            // Validate tenderly response body\n            if (!resp ||\n                resp.simulation_results.length < 2 ||\n                !resp.simulation_results[1].transaction ||\n                resp.simulation_results[1].transaction.error_message) {\n                const msg = `Failed to Simulate Via Tenderly!: ${resp.simulation_results[1].transaction.error_message}`;\n                log.info({ err: resp.simulation_results[1].transaction.error_message }, msg);\n                return { ...swapRoute, simulationStatus: SimulationStatus.Failed };\n            }\n            // Parse the gas used in the simulation response object, and then pad it so that we overestimate.\n            estimatedGasUsed = BigNumber.from((resp.simulation_results[1].transaction.gas_used * estimateMultiplier).toFixed(0));\n            log.info({\n                body,\n                approveGasUsed: resp.simulation_results[0].transaction.gas_used,\n                swapGasUsed: resp.simulation_results[1].transaction.gas_used,\n                swapWithMultiplier: estimatedGasUsed.toString(),\n            }, 'Successfully Simulated Approval + Swap via Tenderly for SwapRouter02. Gas used.');\n            log.info({ swapTransaction: resp.simulation_results[1].transaction }, 'Successful Tenderly Swap Transaction for SwapRouter02');\n            log.info({ swapSimulation: resp.simulation_results[1].simulation }, 'Successful Tenderly Swap Simulation for SwapRouter02');\n        }\n        else {\n            throw new Error(`Unsupported swap type: ${swapOptions}`);\n        }\n        const { estimatedGasUsedUSD, estimatedGasUsedQuoteToken, quoteGasAdjusted, } = await calculateGasUsed(chainId, swapRoute, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, l2GasData);\n        return {\n            ...initSwapRouteFromExisting(swapRoute, this.v2PoolProvider, this.v3PoolProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD),\n            simulationStatus: SimulationStatus.Succeeded,\n        };\n    }\n    logTenderlyErrorResponse(resp) {\n        log.info({\n            resp,\n        }, 'Failed to Simulate on Tenderly');\n        log.info({\n            err: resp.simulation_results.length >= 1\n                ? resp.simulation_results[0].transaction\n                : {},\n        }, 'Failed to Simulate on Tenderly #1 Transaction');\n        log.info({\n            err: resp.simulation_results.length >= 1\n                ? resp.simulation_results[0].simulation\n                : {},\n        }, 'Failed to Simulate on Tenderly #1 Simulation');\n        log.info({\n            err: resp.simulation_results.length >= 2\n                ? resp.simulation_results[1].transaction\n                : {},\n        }, 'Failed to Simulate on Tenderly #2 Transaction');\n        log.info({\n            err: resp.simulation_results.length >= 2\n                ? resp.simulation_results[1].simulation\n                : {},\n        }, 'Failed to Simulate on Tenderly #2 Simulation');\n        log.info({\n            err: resp.simulation_results.length >= 3\n                ? resp.simulation_results[2].transaction\n                : {},\n        }, 'Failed to Simulate on Tenderly #3 Transaction');\n        log.info({\n            err: resp.simulation_results.length >= 3\n                ? resp.simulation_results[2].simulation\n                : {},\n        }, 'Failed to Simulate on Tenderly #3 Simulation');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"module"}