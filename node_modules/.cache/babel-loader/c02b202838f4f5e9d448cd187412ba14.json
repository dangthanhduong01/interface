{"ast":null,"code":"import { useTheme as _useTheme } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/nft/components/bag/BagFooter.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { formatEther, parseEther } from '@ethersproject/units';\nimport { sendAnalyticsEvent, TraceEvent } from '@uniswap/analytics';\nimport { BrowserEvent, InterfaceElementName, NFTEventName } from '@uniswap/analytics-events';\nimport { useWeb3React } from '@web3-react/core';\nimport { useToggleAccountDrawer } from 'components/AccountDrawer';\nimport Column from 'components/Column';\nimport Loader from 'components/Icons/LoadingSpinner';\nimport CurrencyLogo from 'components/Logo/CurrencyLogo';\nimport Row from 'components/Row';\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal';\nimport { LoadingBubble } from 'components/Tokens/loading';\nimport { MouseoverTooltip } from 'components/Tooltip';\nimport { SupportedChainId } from 'constants/chains';\nimport { usePayWithAnyTokenEnabled } from 'featureFlags/flags/payWithAnyToken';\nimport { useCurrency } from 'hooks/Tokens';\nimport { AllowanceState } from 'hooks/usePermit2Allowance';\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice';\nimport { useTokenBalance } from 'lib/hooks/useCurrencyBalance';\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount';\nimport { useBag } from 'nft/hooks/useBag';\nimport { useBagTotalEthPrice } from 'nft/hooks/useBagTotalEthPrice';\nimport useDerivedPayWithAnyTokenSwapInfo from 'nft/hooks/useDerivedPayWithAnyTokenSwapInfo';\nimport { useFetchAssets } from 'nft/hooks/useFetchAssets';\nimport usePayWithAnyTokenSwap from 'nft/hooks/usePayWithAnyTokenSwap';\nimport usePermit2Approval from 'nft/hooks/usePermit2Approval';\nimport { usePriceImpact } from 'nft/hooks/usePriceImpact';\nimport { useSubscribeTransactionState } from 'nft/hooks/useSubscribeTransactionState';\nimport { useTokenInput } from 'nft/hooks/useTokenInput';\nimport { useWalletBalance } from 'nft/hooks/useWalletBalance';\nimport { BagStatus } from 'nft/types';\nimport { ethNumberStandardFormatter, formatWeiToDecimal } from 'nft/utils';\nimport { useEffect, useMemo, useState } from 'react';\nimport { AlertTriangle, ChevronDown } from 'react-feather';\nimport { TradeState } from 'state/routing/types';\nimport { ThemedText } from 'theme';\nimport { switchChain } from 'utils/switchChain';\nimport { shallow } from 'zustand/shallow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FooterContainer = _styled.div.withConfig({\n  displayName: \"BagFooter__FooterContainer\",\n  componentId: \"sc-rcepl8-0\"\n})([\"padding:0px 12px;\"]);\nconst Footer = _styled.div.withConfig({\n  displayName: \"BagFooter__Footer\",\n  componentId: \"sc-rcepl8-1\"\n})([\"border-top:1px solid \", \";color:\", \";display:flex;flex-direction:column;margin:0px 16px 8px;padding:12px 0px;border-bottom-left-radius:12px;border-bottom-right-radius:12px;\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.backgroundOutline;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.textPrimary;\n});\nconst FooterHeader = _styled(Column).withConfig({\n  displayName: \"BagFooter__FooterHeader\",\n  componentId: \"sc-rcepl8-2\"\n})([\"padding-top:8px;padding-bottom:\", \";\"], _ref3 => {\n  let {\n    usingPayWithAnyToken\n  } = _ref3;\n  return usingPayWithAnyToken ? '16px' : '20px';\n});\nconst CurrencyRow = _styled(Row).withConfig({\n  displayName: \"BagFooter__CurrencyRow\",\n  componentId: \"sc-rcepl8-3\"\n})([\"justify-content:space-between;align-items:start;gap:8px;\"]);\nconst TotalColumn = _styled(Column).withConfig({\n  displayName: \"BagFooter__TotalColumn\",\n  componentId: \"sc-rcepl8-4\"\n})([\"text-align:end;overflow-x:hidden;\"]);\nconst WarningIcon = _styled(AlertTriangle).withConfig({\n  displayName: \"BagFooter__WarningIcon\",\n  componentId: \"sc-rcepl8-5\"\n})([\"width:14px;margin-right:4px;color:inherit;\"]);\nconst WarningText = _styled(ThemedText.BodyPrimary).withConfig({\n  displayName: \"BagFooter__WarningText\",\n  componentId: \"sc-rcepl8-6\"\n})([\"align-items:center;color:\", \";display:flex;justify-content:center;margin-bottom:10px !important;text-align:center;\"], _ref4 => {\n  let {\n    $color\n  } = _ref4;\n  return $color;\n});\nconst HelperText = _styled(ThemedText.Caption).withConfig({\n  displayName: \"BagFooter__HelperText\",\n  componentId: \"sc-rcepl8-7\"\n})([\"color:\", \";display:flex;justify-content:center;text-align:center;margin-bottom:10px !important;\"], _ref5 => {\n  let {\n    $color\n  } = _ref5;\n  return $color;\n});\nconst CurrencyInput = _styled(Row).withConfig({\n  displayName: \"BagFooter__CurrencyInput\",\n  componentId: \"sc-rcepl8-8\"\n})([\"gap:8px;cursor:pointer;\"]);\nconst PayButton = _styled.button.withConfig({\n  displayName: \"BagFooter__PayButton\",\n  componentId: \"sc-rcepl8-9\"\n})([\"display:flex;background:\", \";color:\", \";font-weight:600;line-height:24px;font-size:16px;gap:16px;justify-content:center;border:none;border-radius:12px;padding:12px 0px;cursor:pointer;align-items:center;&:disabled{opacity:0.6;cursor:auto;}\"], _ref6 => {\n  let {\n    $backgroundColor\n  } = _ref6;\n  return $backgroundColor;\n}, _ref7 => {\n  let {\n    $color\n  } = _ref7;\n  return $color;\n});\nconst FiatLoadingBubble = _styled(LoadingBubble).withConfig({\n  displayName: \"BagFooter__FiatLoadingBubble\",\n  componentId: \"sc-rcepl8-10\"\n})([\"border-radius:4px;width:4rem;height:20px;align-self:end;\"]);\nconst PriceImpactContainer = _styled(Row).withConfig({\n  displayName: \"BagFooter__PriceImpactContainer\",\n  componentId: \"sc-rcepl8-11\"\n})([\"align-items:center;gap:8px;width:100%;justify-content:flex-end;\"]);\nconst PriceImpactRow = _styled(Row).withConfig({\n  displayName: \"BagFooter__PriceImpactRow\",\n  componentId: \"sc-rcepl8-12\"\n})([\"align-items:center;gap:8px;\"]);\nconst ValueText = _styled(ThemedText.BodyPrimary).withConfig({\n  displayName: \"BagFooter__ValueText\",\n  componentId: \"sc-rcepl8-13\"\n})([\"line-height:20px;font-weight:500;overflow-x:hidden;text-overflow:ellipsis;white-space:nowrap;scrollbar-width:none;::-webkit-scrollbar{display:none;}\"]);\nconst ActionButton = _ref8 => {\n  let {\n    disabled,\n    children,\n    onClick,\n    backgroundColor,\n    textColor\n  } = _ref8;\n  return /*#__PURE__*/_jsxDEV(PayButton, {\n    disabled: disabled,\n    onClick: onClick,\n    $backgroundColor: backgroundColor,\n    $color: textColor,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_c = ActionButton;\nconst Warning = _ref9 => {\n  let {\n    color,\n    children\n  } = _ref9;\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(WarningText, {\n    fontSize: \"14px\",\n    lineHeight: \"20px\",\n    $color: color,\n    children: [/*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Warning;\nconst Helper = _ref10 => {\n  let {\n    children,\n    color\n  } = _ref10;\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(HelperText, {\n    lineHeight: \"16px\",\n    $color: color,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Helper;\nconst InputCurrencyValue = _ref11 => {\n  let {\n    usingPayWithAnyToken,\n    totalEthPrice,\n    activeCurrency,\n    tradeState,\n    trade\n  } = _ref11;\n  if (!usingPayWithAnyToken) {\n    var _activeCurrency$symbo;\n    return /*#__PURE__*/_jsxDEV(ThemedText.BodyPrimary, {\n      lineHeight: \"20px\",\n      fontWeight: \"500\",\n      children: [formatWeiToDecimal(totalEthPrice.toString()), \"\\xA0\", (_activeCurrency$symbo = activeCurrency === null || activeCurrency === void 0 ? void 0 : activeCurrency.symbol) !== null && _activeCurrency$symbo !== void 0 ? _activeCurrency$symbo : 'ETH']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  }\n  if (tradeState === TradeState.LOADING) {\n    return /*#__PURE__*/_jsxDEV(ThemedText.BodyPrimary, {\n      color: \"textTertiary\",\n      lineHeight: \"20px\",\n      fontWeight: \"500\",\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Fetching price...\"\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ValueText, {\n    color: tradeState === TradeState.SYNCING ? 'textTertiary' : 'textPrimary',\n    children: ethNumberStandardFormatter(trade === null || trade === void 0 ? void 0 : trade.inputAmount.toExact())\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_c4 = InputCurrencyValue;\nconst FiatValue = _ref12 => {\n  let {\n    usdcValue,\n    priceImpact,\n    tradeState,\n    usingPayWithAnyToken\n  } = _ref12;\n  if (!usdcValue) {\n    if (usingPayWithAnyToken && (tradeState === TradeState.INVALID || tradeState === TradeState.NO_ROUTE_FOUND)) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(FiatLoadingBubble, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PriceImpactContainer, {\n    children: [priceImpact && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(MouseoverTooltip, {\n        text: /*i18n*/i18n._(\"The estimated difference between the USD values of input and output amounts.\"),\n        children: /*#__PURE__*/_jsxDEV(PriceImpactRow, {\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            color: priceImpact.priceImpactSeverity.color,\n            size: \"16px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.BodySmall, {\n            style: {\n              color: priceImpact.priceImpactSeverity.color\n            },\n            lineHeight: \"20px\",\n            children: [\"(\", /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"{0}\",\n              values: {\n                0: priceImpact.displayPercentage()\n              }\n            }, void 0, false, void 0, this), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(ThemedText.BodySmall, {\n      color: \"textTertiary\",\n      lineHeight: \"20px\",\n      children: `${ethNumberStandardFormatter(usdcValue === null || usdcValue === void 0 ? void 0 : usdcValue.toExact(), true)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_c5 = FiatValue;\nconst PENDING_BAG_STATUSES = [BagStatus.FETCHING_ROUTE, BagStatus.CONFIRMING_IN_WALLET, BagStatus.FETCHING_FINAL_ROUTE, BagStatus.PROCESSING_TRANSACTION];\nexport const BagFooter = _ref13 => {\n  _s();\n  var _activeCurrency$symbo2;\n  let {\n    setModalIsOpen,\n    eventProperties\n  } = _ref13;\n  const toggleWalletDrawer = useToggleAccountDrawer();\n  const theme = _useTheme();\n  const {\n    account,\n    chainId,\n    connector\n  } = useWeb3React();\n  const connected = Boolean(account && chainId);\n  const totalEthPrice = useBagTotalEthPrice();\n  const shouldUsePayWithAnyToken = usePayWithAnyTokenEnabled();\n  const inputCurrency = useTokenInput(state => state.inputCurrency);\n  const setInputCurrency = useTokenInput(state => state.setInputCurrency);\n  const defaultCurrency = useCurrency('ETH');\n  const inputCurrencyBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, !!inputCurrency && inputCurrency.isToken ? inputCurrency : undefined);\n  const {\n    isLocked: bagIsLocked,\n    bagStatus,\n    setBagExpanded,\n    setBagStatus\n  } = useBag(_ref14 => {\n    let {\n      isLocked,\n      bagStatus,\n      setBagExpanded,\n      setBagStatus\n    } = _ref14;\n    return {\n      isLocked,\n      bagStatus,\n      setBagExpanded,\n      setBagStatus\n    };\n  }, shallow);\n  const [tokenSelectorOpen, setTokenSelectorOpen] = useState(false);\n  const isPending = PENDING_BAG_STATUSES.includes(bagStatus);\n  const activeCurrency = inputCurrency !== null && inputCurrency !== void 0 ? inputCurrency : defaultCurrency;\n  const usingPayWithAnyToken = !!inputCurrency && shouldUsePayWithAnyToken && chainId === SupportedChainId.MAINNET;\n  useSubscribeTransactionState(setModalIsOpen);\n  const fetchAssets = useFetchAssets();\n  const parsedOutputAmount = useMemo(() => {\n    return tryParseCurrencyAmount(formatEther(totalEthPrice.toString()), defaultCurrency !== null && defaultCurrency !== void 0 ? defaultCurrency : undefined);\n  }, [defaultCurrency, totalEthPrice]);\n  const {\n    state: tradeState,\n    trade,\n    maximumAmountIn,\n    allowedSlippage\n  } = useDerivedPayWithAnyTokenSwapInfo(usingPayWithAnyToken ? inputCurrency : undefined, parsedOutputAmount);\n  const {\n    allowance,\n    isAllowancePending,\n    isApprovalLoading,\n    updateAllowance\n  } = usePermit2Approval((trade === null || trade === void 0 ? void 0 : trade.inputAmount.currency.isToken) ? trade === null || trade === void 0 ? void 0 : trade.inputAmount : undefined, maximumAmountIn, shouldUsePayWithAnyToken, true);\n  usePayWithAnyTokenSwap(trade, allowance, allowedSlippage);\n  const priceImpact = usePriceImpact(trade);\n  const fiatValueTradeInput = useStablecoinValue(trade === null || trade === void 0 ? void 0 : trade.inputAmount);\n  const fiatValueTradeOutput = useStablecoinValue(parsedOutputAmount);\n  const usdcValue = usingPayWithAnyToken ? fiatValueTradeInput : fiatValueTradeOutput;\n  const {\n    balance: balanceInEth\n  } = useWalletBalance();\n  const sufficientBalance = useMemo(() => {\n    if (!connected || chainId !== SupportedChainId.MAINNET) {\n      return undefined;\n    }\n    if (inputCurrency) {\n      const inputAmount = trade === null || trade === void 0 ? void 0 : trade.inputAmount;\n      if (!inputCurrencyBalance || !inputAmount) {\n        return undefined;\n      }\n      return !inputCurrencyBalance.lessThan(inputAmount);\n    }\n    return parseEther(balanceInEth).gte(totalEthPrice);\n  }, [connected, chainId, inputCurrency, balanceInEth, totalEthPrice, trade === null || trade === void 0 ? void 0 : trade.inputAmount, inputCurrencyBalance]);\n  useEffect(() => {\n    setBagStatus(BagStatus.ADDING_TO_BAG);\n  }, [inputCurrency, setBagStatus]);\n  const {\n    buttonText,\n    buttonTextColor,\n    disabled,\n    warningText,\n    warningTextColor,\n    helperText,\n    helperTextColor,\n    handleClick,\n    buttonColor\n  } = useMemo(() => {\n    let handleClick = fetchAssets;\n    let buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Something went wrong\"\n    }, void 0, false, void 0, this);\n    let disabled = true;\n    let warningText = undefined;\n    let warningTextColor = theme.accentWarning;\n    let helperText = undefined;\n    let helperTextColor = theme.textSecondary;\n    let buttonColor = theme.accentAction;\n    let buttonTextColor = theme.accentTextLightPrimary;\n    if (connected && chainId !== SupportedChainId.MAINNET) {\n      handleClick = () => switchChain(connector, SupportedChainId.MAINNET);\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Switch networks\"\n      }, void 0, false, void 0, this);\n      disabled = false;\n      warningText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Wrong network\"\n      }, void 0, false, void 0, this);\n    } else if (sufficientBalance === false) {\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Pay\"\n      }, void 0, false, void 0, this);\n      disabled = true;\n      warningText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Insufficient funds\"\n      }, void 0, false, void 0, this);\n    } else if (bagStatus === BagStatus.WARNING) {\n      warningText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Something went wrong. Please try again.\"\n      }, void 0, false, void 0, this);\n    } else if (!connected) {\n      handleClick = () => {\n        toggleWalletDrawer();\n        setBagExpanded({\n          bagExpanded: false\n        });\n      };\n      disabled = false;\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Connect wallet\"\n      }, void 0, false, void 0, this);\n    } else if (bagStatus === BagStatus.FETCHING_FINAL_ROUTE || bagStatus === BagStatus.CONFIRMING_IN_WALLET) {\n      disabled = true;\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Proceed in wallet\"\n      }, void 0, false, void 0, this);\n    } else if (bagStatus === BagStatus.PROCESSING_TRANSACTION) {\n      disabled = true;\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Transaction pending\"\n      }, void 0, false, void 0, this);\n    } else if (usingPayWithAnyToken && tradeState !== TradeState.VALID) {\n      disabled = true;\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Fetching Route\"\n      }, void 0, false, void 0, this);\n      if (tradeState === TradeState.INVALID) {\n        buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Pay\"\n        }, void 0, false, void 0, this);\n      }\n      if (tradeState === TradeState.NO_ROUTE_FOUND) {\n        buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Insufficient liquidity\"\n        }, void 0, false, void 0, this);\n        buttonColor = theme.backgroundInteractive;\n        buttonTextColor = theme.textPrimary;\n        helperText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Insufficient pool liquidity to complete transaction\"\n        }, void 0, false, void 0, this);\n      }\n    } else if (allowance.state === AllowanceState.REQUIRED || allowance.state === AllowanceState.LOADING) {\n      handleClick = () => updateAllowance();\n      disabled = isAllowancePending || isApprovalLoading || allowance.state === AllowanceState.LOADING;\n      if (allowance.state === AllowanceState.LOADING) {\n        buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Loading Allowance\"\n        }, void 0, false, void 0, this);\n      } else if (isAllowancePending) {\n        buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Approve in your wallet\"\n        }, void 0, false, void 0, this);\n      } else if (isApprovalLoading) {\n        buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Approval pending\"\n        }, void 0, false, void 0, this);\n      } else {\n        helperText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"An approval is needed to use this token.\"\n        }, void 0, false, void 0, this);\n        buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Approve\"\n        }, void 0, false, void 0, this);\n      }\n    } else if (bagStatus === BagStatus.CONFIRM_QUOTE) {\n      disabled = false;\n      warningTextColor = theme.accentAction;\n      warningText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Price updated\"\n      }, void 0, false, void 0, this);\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Pay\"\n      }, void 0, false, void 0, this);\n    } else if (priceImpact && priceImpact.priceImpactSeverity.type === 'error') {\n      disabled = false;\n      buttonColor = priceImpact.priceImpactSeverity.color;\n      helperText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Price impact warning\"\n      }, void 0, false, void 0, this);\n      helperTextColor = priceImpact.priceImpactSeverity.color;\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Pay Anyway\"\n      }, void 0, false, void 0, this);\n    } else if (sufficientBalance === true) {\n      disabled = false;\n      buttonText = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Pay\"\n      }, void 0, false, void 0, this);\n      helperText = usingPayWithAnyToken ? /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Refunds for unavailable items will be given in ETH\"\n      }, void 0, false, void 0, this) : undefined;\n    }\n    return {\n      buttonText,\n      buttonTextColor,\n      disabled,\n      warningText,\n      warningTextColor,\n      helperText,\n      helperTextColor,\n      handleClick,\n      buttonColor\n    };\n  }, [fetchAssets, theme.accentWarning, theme.textSecondary, theme.accentAction, theme.accentTextLightPrimary, theme.backgroundInteractive, theme.textPrimary, connected, chainId, sufficientBalance, bagStatus, usingPayWithAnyToken, tradeState, allowance.state, priceImpact, connector, toggleWalletDrawer, setBagExpanded, isAllowancePending, isApprovalLoading, updateAllowance]);\n  const traceEventProperties = {\n    usd_value: usdcValue === null || usdcValue === void 0 ? void 0 : usdcValue.toExact(),\n    using_erc20: !!inputCurrency,\n    ...eventProperties\n  };\n  return /*#__PURE__*/_jsxDEV(FooterContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Footer, {\n      children: [shouldUsePayWithAnyToken && /*#__PURE__*/_jsxDEV(FooterHeader, {\n        gap: \"xs\",\n        usingPayWithAnyToken: shouldUsePayWithAnyToken,\n        children: [/*#__PURE__*/_jsxDEV(CurrencyRow, {\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            gap: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(ThemedText.SubHeaderSmall, {\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Pay with\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInput, {\n              onClick: () => {\n                if (!bagIsLocked) {\n                  setTokenSelectorOpen(true);\n                  sendAnalyticsEvent(NFTEventName.NFT_BUY_TOKEN_SELECTOR_CLICKED);\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                currency: activeCurrency,\n                size: \"24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ThemedText.HeadlineSmall, {\n                fontWeight: 500,\n                lineHeight: \"24px\",\n                children: activeCurrency === null || activeCurrency === void 0 ? void 0 : activeCurrency.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n                size: 20,\n                color: theme.textSecondary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TotalColumn, {\n            gap: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(ThemedText.SubHeaderSmall, {\n              marginBottom: \"4px\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Total\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputCurrencyValue, {\n              usingPayWithAnyToken: usingPayWithAnyToken,\n              totalEthPrice: totalEthPrice,\n              activeCurrency: activeCurrency,\n              tradeState: tradeState,\n              trade: trade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FiatValue, {\n          usdcValue: usdcValue,\n          priceImpact: priceImpact,\n          tradeState: tradeState,\n          usingPayWithAnyToken: usingPayWithAnyToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this), !shouldUsePayWithAnyToken && /*#__PURE__*/_jsxDEV(FooterHeader, {\n        gap: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ThemedText.HeadlineSmall, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ThemedText.HeadlineSmall, {\n              children: [formatWeiToDecimal(totalEthPrice.toString()), \"\\xA0\", (_activeCurrency$symbo2 = activeCurrency === null || activeCurrency === void 0 ? void 0 : activeCurrency.symbol) !== null && _activeCurrency$symbo2 !== void 0 ? _activeCurrency$symbo2 : 'ETH']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FiatValue, {\n          usdcValue: usdcValue,\n          priceImpact: priceImpact,\n          tradeState: tradeState,\n          usingPayWithAnyToken: usingPayWithAnyToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TraceEvent, {\n        events: [BrowserEvent.onClick],\n        name: NFTEventName.NFT_BUY_BAG_PAY,\n        element: InterfaceElementName.NFT_BUY_BAG_PAY_BUTTON,\n        properties: {\n          ...traceEventProperties\n        },\n        shouldLogImpression: connected && !disabled,\n        children: [/*#__PURE__*/_jsxDEV(Warning, {\n          color: warningTextColor,\n          children: warningText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Helper, {\n          color: helperTextColor,\n          children: helperText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n          onClick: handleClick,\n          disabled: disabled || isPending,\n          backgroundColor: buttonColor,\n          textColor: buttonTextColor,\n          children: [isPending && /*#__PURE__*/_jsxDEV(Loader, {\n            size: \"20px\",\n            stroke: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 27\n          }, this), buttonText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrencySearchModal, {\n      isOpen: tokenSelectorOpen,\n      onDismiss: () => setTokenSelectorOpen(false),\n      onCurrencySelect: currency => {\n        setInputCurrency(currency.isNative ? undefined : currency);\n        if (currency.isToken) {\n          sendAnalyticsEvent(NFTEventName.NFT_BUY_TOKEN_SELECTED, {\n            token_address: currency.address,\n            token_symbol: currency.symbol\n          });\n        }\n      },\n      selectedCurrency: activeCurrency !== null && activeCurrency !== void 0 ? activeCurrency : undefined,\n      onlyShowCurrenciesWithBalance: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 5\n  }, this);\n};\n_s(BagFooter, \"XriBtVfvsdbZt9rdhXrGgo6MoJk=\", false, function () {\n  return [useToggleAccountDrawer, _useTheme, useWeb3React, useBagTotalEthPrice, usePayWithAnyTokenEnabled, useTokenInput, useTokenInput, useCurrency, useTokenBalance, useBag, useSubscribeTransactionState, useFetchAssets, useDerivedPayWithAnyTokenSwapInfo, usePermit2Approval, usePayWithAnyTokenSwap, usePriceImpact, useStablecoinValue, useStablecoinValue, useWalletBalance];\n});\n_c6 = BagFooter;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ActionButton\");\n$RefreshReg$(_c2, \"Warning\");\n$RefreshReg$(_c3, \"Helper\");\n$RefreshReg$(_c4, \"InputCurrencyValue\");\n$RefreshReg$(_c5, \"FiatValue\");\n$RefreshReg$(_c6, \"BagFooter\");","map":{"version":3,"names":["formatEther","parseEther","sendAnalyticsEvent","TraceEvent","BrowserEvent","InterfaceElementName","NFTEventName","useWeb3React","useToggleAccountDrawer","Column","Loader","CurrencyLogo","Row","CurrencySearchModal","LoadingBubble","MouseoverTooltip","SupportedChainId","usePayWithAnyTokenEnabled","useCurrency","AllowanceState","useStablecoinValue","useTokenBalance","tryParseCurrencyAmount","useBag","useBagTotalEthPrice","useDerivedPayWithAnyTokenSwapInfo","useFetchAssets","usePayWithAnyTokenSwap","usePermit2Approval","usePriceImpact","useSubscribeTransactionState","useTokenInput","useWalletBalance","BagStatus","ethNumberStandardFormatter","formatWeiToDecimal","useEffect","useMemo","useState","AlertTriangle","ChevronDown","TradeState","ThemedText","switchChain","shallow","FooterContainer","styled","div","Footer","theme","backgroundOutline","textPrimary","FooterHeader","usingPayWithAnyToken","CurrencyRow","TotalColumn","WarningIcon","WarningText","BodyPrimary","$color","HelperText","Caption","CurrencyInput","PayButton","button","$backgroundColor","FiatLoadingBubble","PriceImpactContainer","PriceImpactRow","ValueText","ActionButton","disabled","children","onClick","backgroundColor","textColor","Warning","color","Helper","InputCurrencyValue","totalEthPrice","activeCurrency","tradeState","trade","toString","symbol","LOADING","SYNCING","inputAmount","toExact","FiatValue","usdcValue","priceImpact","INVALID","NO_ROUTE_FOUND","priceImpactSeverity","displayPercentage","PENDING_BAG_STATUSES","FETCHING_ROUTE","CONFIRMING_IN_WALLET","FETCHING_FINAL_ROUTE","PROCESSING_TRANSACTION","BagFooter","setModalIsOpen","eventProperties","toggleWalletDrawer","useTheme","account","chainId","connector","connected","Boolean","shouldUsePayWithAnyToken","inputCurrency","state","setInputCurrency","defaultCurrency","inputCurrencyBalance","undefined","isToken","isLocked","bagIsLocked","bagStatus","setBagExpanded","setBagStatus","tokenSelectorOpen","setTokenSelectorOpen","isPending","includes","MAINNET","fetchAssets","parsedOutputAmount","maximumAmountIn","allowedSlippage","allowance","isAllowancePending","isApprovalLoading","updateAllowance","currency","fiatValueTradeInput","fiatValueTradeOutput","balance","balanceInEth","sufficientBalance","lessThan","gte","ADDING_TO_BAG","buttonText","buttonTextColor","warningText","warningTextColor","helperText","helperTextColor","handleClick","buttonColor","accentWarning","textSecondary","accentAction","accentTextLightPrimary","WARNING","bagExpanded","VALID","backgroundInteractive","REQUIRED","CONFIRM_QUOTE","type","traceEventProperties","usd_value","using_erc20","NFT_BUY_TOKEN_SELECTOR_CLICKED","NFT_BUY_BAG_PAY","NFT_BUY_BAG_PAY_BUTTON","isNative","NFT_BUY_TOKEN_SELECTED","token_address","address","token_symbol"],"sources":["/home/diep/freelance/interface/src/nft/components/bag/BagFooter.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther, parseEther } from '@ethersproject/units'\nimport { t, Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent, TraceEvent } from '@uniswap/analytics'\nimport { BrowserEvent, InterfaceElementName, NFTEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport Column from 'components/Column'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { SupportedChainId } from 'constants/chains'\nimport { usePayWithAnyTokenEnabled } from 'featureFlags/flags/payWithAnyToken'\nimport { useCurrency } from 'hooks/Tokens'\nimport { AllowanceState } from 'hooks/usePermit2Allowance'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport { useTokenBalance } from 'lib/hooks/useCurrencyBalance'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { useBag } from 'nft/hooks/useBag'\nimport { useBagTotalEthPrice } from 'nft/hooks/useBagTotalEthPrice'\nimport useDerivedPayWithAnyTokenSwapInfo from 'nft/hooks/useDerivedPayWithAnyTokenSwapInfo'\nimport { useFetchAssets } from 'nft/hooks/useFetchAssets'\nimport usePayWithAnyTokenSwap from 'nft/hooks/usePayWithAnyTokenSwap'\nimport usePermit2Approval from 'nft/hooks/usePermit2Approval'\nimport { PriceImpact, usePriceImpact } from 'nft/hooks/usePriceImpact'\nimport { useSubscribeTransactionState } from 'nft/hooks/useSubscribeTransactionState'\nimport { useTokenInput } from 'nft/hooks/useTokenInput'\nimport { useWalletBalance } from 'nft/hooks/useWalletBalance'\nimport { BagStatus } from 'nft/types'\nimport { ethNumberStandardFormatter, formatWeiToDecimal } from 'nft/utils'\nimport { PropsWithChildren, useEffect, useMemo, useState } from 'react'\nimport { AlertTriangle, ChevronDown } from 'react-feather'\nimport { InterfaceTrade, TradeState } from 'state/routing/types'\nimport styled, { useTheme } from 'styled-components/macro'\nimport { ThemedText } from 'theme'\nimport { switchChain } from 'utils/switchChain'\nimport { shallow } from 'zustand/shallow'\n\nconst FooterContainer = styled.div`\n  padding: 0px 12px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => theme.backgroundOutline};\n  color: ${({ theme }) => theme.textPrimary};\n  display: flex;\n  flex-direction: column;\n  margin: 0px 16px 8px;\n  padding: 12px 0px;\n  border-bottom-left-radius: 12px;\n  border-bottom-right-radius: 12px;\n`\n\nconst FooterHeader = styled(Column)<{ usingPayWithAnyToken?: boolean }>`\n  padding-top: 8px;\n  padding-bottom: ${({ usingPayWithAnyToken }) => (usingPayWithAnyToken ? '16px' : '20px')};\n`\n\nconst CurrencyRow = styled(Row)`\n  justify-content: space-between;\n  align-items: start;\n  gap: 8px;\n`\n\nconst TotalColumn = styled(Column)`\n  text-align: end;\n  overflow-x: hidden;\n`\n\nconst WarningIcon = styled(AlertTriangle)`\n  width: 14px;\n  margin-right: 4px;\n  color: inherit;\n`\nconst WarningText = styled(ThemedText.BodyPrimary)<{ $color: string }>`\n  align-items: center;\n  color: ${({ $color }) => $color};\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px !important;\n  text-align: center;\n`\n\nconst HelperText = styled(ThemedText.Caption)<{ $color: string }>`\n  color: ${({ $color }) => $color};\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  margin-bottom: 10px !important;\n`\n\nconst CurrencyInput = styled(Row)`\n  gap: 8px;\n  cursor: pointer;\n`\n\nconst PayButton = styled.button<{ $backgroundColor: string; $color: string }>`\n  display: flex;\n  background: ${({ $backgroundColor }) => $backgroundColor};\n  color: ${({ $color }) => $color};\n  font-weight: 600;\n  line-height: 24px;\n  font-size: 16px;\n  gap: 16px;\n  justify-content: center;\n  border: none;\n  border-radius: 12px;\n  padding: 12px 0px;\n  cursor: pointer;\n  align-items: center;\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: auto;\n  }\n`\nconst FiatLoadingBubble = styled(LoadingBubble)`\n  border-radius: 4px;\n  width: 4rem;\n  height: 20px;\n  align-self: end;\n`\nconst PriceImpactContainer = styled(Row)`\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  justify-content: flex-end;\n`\n\nconst PriceImpactRow = styled(Row)`\n  align-items: center;\n  gap: 8px;\n`\n\nconst ValueText = styled(ThemedText.BodyPrimary)`\n  line-height: 20px;\n  font-weight: 500;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  scrollbar-width: none;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface ActionButtonProps {\n  disabled?: boolean\n  onClick: () => void\n  backgroundColor: string\n  textColor: string\n}\n\nconst ActionButton = ({\n  disabled,\n  children,\n  onClick,\n  backgroundColor,\n  textColor,\n}: PropsWithChildren<ActionButtonProps>) => {\n  return (\n    <PayButton disabled={disabled} onClick={onClick} $backgroundColor={backgroundColor} $color={textColor}>\n      {children}\n    </PayButton>\n  )\n}\n\ninterface HelperTextProps {\n  color: string\n}\n\nconst Warning = ({ color, children }: PropsWithChildren<HelperTextProps>) => {\n  if (!children) {\n    return null\n  }\n  return (\n    <WarningText fontSize=\"14px\" lineHeight=\"20px\" $color={color}>\n      <WarningIcon />\n      {children}\n    </WarningText>\n  )\n}\n\nconst Helper = ({ children, color }: PropsWithChildren<HelperTextProps>) => {\n  if (!children) {\n    return null\n  }\n  return (\n    <HelperText lineHeight=\"16px\" $color={color}>\n      {children}\n    </HelperText>\n  )\n}\n\nconst InputCurrencyValue = ({\n  usingPayWithAnyToken,\n  totalEthPrice,\n  activeCurrency,\n  tradeState,\n  trade,\n}: {\n  usingPayWithAnyToken: boolean\n  totalEthPrice: BigNumber\n  activeCurrency: Currency | undefined | null\n  tradeState: TradeState\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined\n}) => {\n  if (!usingPayWithAnyToken) {\n    return (\n      <ThemedText.BodyPrimary lineHeight=\"20px\" fontWeight=\"500\">\n        {formatWeiToDecimal(totalEthPrice.toString())}\n        &nbsp;{activeCurrency?.symbol ?? 'ETH'}\n      </ThemedText.BodyPrimary>\n    )\n  }\n\n  if (tradeState === TradeState.LOADING) {\n    return (\n      <ThemedText.BodyPrimary color=\"textTertiary\" lineHeight=\"20px\" fontWeight=\"500\">\n        <Trans>Fetching price...</Trans>\n      </ThemedText.BodyPrimary>\n    )\n  }\n\n  return (\n    <ValueText color={tradeState === TradeState.SYNCING ? 'textTertiary' : 'textPrimary'}>\n      {ethNumberStandardFormatter(trade?.inputAmount.toExact())}\n    </ValueText>\n  )\n}\n\nconst FiatValue = ({\n  usdcValue,\n  priceImpact,\n  tradeState,\n  usingPayWithAnyToken,\n}: {\n  usdcValue: CurrencyAmount<Token> | null\n  priceImpact: PriceImpact | undefined\n  tradeState: TradeState\n  usingPayWithAnyToken: boolean\n}) => {\n  if (!usdcValue) {\n    if (usingPayWithAnyToken && (tradeState === TradeState.INVALID || tradeState === TradeState.NO_ROUTE_FOUND)) {\n      return null\n    }\n\n    return <FiatLoadingBubble />\n  }\n\n  return (\n    <PriceImpactContainer>\n      {priceImpact && (\n        <>\n          <MouseoverTooltip text={t`The estimated difference between the USD values of input and output amounts.`}>\n            <PriceImpactRow>\n              <AlertTriangle color={priceImpact.priceImpactSeverity.color} size=\"16px\" />\n              <ThemedText.BodySmall style={{ color: priceImpact.priceImpactSeverity.color }} lineHeight=\"20px\">\n                (<Trans>{priceImpact.displayPercentage()}</Trans>)\n              </ThemedText.BodySmall>\n            </PriceImpactRow>\n          </MouseoverTooltip>\n        </>\n      )}\n      <ThemedText.BodySmall color=\"textTertiary\" lineHeight=\"20px\">\n        {`${ethNumberStandardFormatter(usdcValue?.toExact(), true)}`}\n      </ThemedText.BodySmall>\n    </PriceImpactContainer>\n  )\n}\n\ninterface BagFooterProps {\n  setModalIsOpen: (open: boolean) => void\n  eventProperties: Record<string, unknown>\n}\n\nconst PENDING_BAG_STATUSES = [\n  BagStatus.FETCHING_ROUTE,\n  BagStatus.CONFIRMING_IN_WALLET,\n  BagStatus.FETCHING_FINAL_ROUTE,\n  BagStatus.PROCESSING_TRANSACTION,\n]\n\nexport const BagFooter = ({ setModalIsOpen, eventProperties }: BagFooterProps) => {\n  const toggleWalletDrawer = useToggleAccountDrawer()\n  const theme = useTheme()\n  const { account, chainId, connector } = useWeb3React()\n  const connected = Boolean(account && chainId)\n  const totalEthPrice = useBagTotalEthPrice()\n  const shouldUsePayWithAnyToken = usePayWithAnyTokenEnabled()\n  const inputCurrency = useTokenInput((state) => state.inputCurrency)\n  const setInputCurrency = useTokenInput((state) => state.setInputCurrency)\n  const defaultCurrency = useCurrency('ETH')\n  const inputCurrencyBalance = useTokenBalance(\n    account ?? undefined,\n    !!inputCurrency && inputCurrency.isToken ? inputCurrency : undefined\n  )\n  const {\n    isLocked: bagIsLocked,\n    bagStatus,\n    setBagExpanded,\n    setBagStatus,\n  } = useBag(\n    ({ isLocked, bagStatus, setBagExpanded, setBagStatus }) => ({\n      isLocked,\n      bagStatus,\n      setBagExpanded,\n      setBagStatus,\n    }),\n    shallow\n  )\n  const [tokenSelectorOpen, setTokenSelectorOpen] = useState(false)\n  const isPending = PENDING_BAG_STATUSES.includes(bagStatus)\n  const activeCurrency = inputCurrency ?? defaultCurrency\n  const usingPayWithAnyToken = !!inputCurrency && shouldUsePayWithAnyToken && chainId === SupportedChainId.MAINNET\n\n  useSubscribeTransactionState(setModalIsOpen)\n  const fetchAssets = useFetchAssets()\n\n  const parsedOutputAmount = useMemo(() => {\n    return tryParseCurrencyAmount(formatEther(totalEthPrice.toString()), defaultCurrency ?? undefined)\n  }, [defaultCurrency, totalEthPrice])\n  const {\n    state: tradeState,\n    trade,\n    maximumAmountIn,\n    allowedSlippage,\n  } = useDerivedPayWithAnyTokenSwapInfo(usingPayWithAnyToken ? inputCurrency : undefined, parsedOutputAmount)\n  const { allowance, isAllowancePending, isApprovalLoading, updateAllowance } = usePermit2Approval(\n    trade?.inputAmount.currency.isToken ? (trade?.inputAmount as CurrencyAmount<Token>) : undefined,\n    maximumAmountIn,\n    shouldUsePayWithAnyToken,\n    true\n  )\n  usePayWithAnyTokenSwap(trade, allowance, allowedSlippage)\n  const priceImpact = usePriceImpact(trade)\n\n  const fiatValueTradeInput = useStablecoinValue(trade?.inputAmount)\n  const fiatValueTradeOutput = useStablecoinValue(parsedOutputAmount)\n  const usdcValue = usingPayWithAnyToken ? fiatValueTradeInput : fiatValueTradeOutput\n\n  const { balance: balanceInEth } = useWalletBalance()\n  const sufficientBalance = useMemo(() => {\n    if (!connected || chainId !== SupportedChainId.MAINNET) {\n      return undefined\n    }\n\n    if (inputCurrency) {\n      const inputAmount = trade?.inputAmount\n\n      if (!inputCurrencyBalance || !inputAmount) {\n        return undefined\n      }\n\n      return !inputCurrencyBalance.lessThan(inputAmount)\n    }\n\n    return parseEther(balanceInEth).gte(totalEthPrice)\n  }, [connected, chainId, inputCurrency, balanceInEth, totalEthPrice, trade?.inputAmount, inputCurrencyBalance])\n\n  useEffect(() => {\n    setBagStatus(BagStatus.ADDING_TO_BAG)\n  }, [inputCurrency, setBagStatus])\n\n  const {\n    buttonText,\n    buttonTextColor,\n    disabled,\n    warningText,\n    warningTextColor,\n    helperText,\n    helperTextColor,\n    handleClick,\n    buttonColor,\n  } = useMemo(() => {\n    let handleClick: (() => void) | (() => Promise<void>) = fetchAssets\n    let buttonText = <Trans>Something went wrong</Trans>\n    let disabled = true\n    let warningText = undefined\n    let warningTextColor = theme.accentWarning\n    let helperText = undefined\n    let helperTextColor = theme.textSecondary\n    let buttonColor = theme.accentAction\n    let buttonTextColor = theme.accentTextLightPrimary\n\n    if (connected && chainId !== SupportedChainId.MAINNET) {\n      handleClick = () => switchChain(connector, SupportedChainId.MAINNET)\n      buttonText = <Trans>Switch networks</Trans>\n      disabled = false\n      warningText = <Trans>Wrong network</Trans>\n    } else if (sufficientBalance === false) {\n      buttonText = <Trans>Pay</Trans>\n      disabled = true\n      warningText = <Trans>Insufficient funds</Trans>\n    } else if (bagStatus === BagStatus.WARNING) {\n      warningText = <Trans>Something went wrong. Please try again.</Trans>\n    } else if (!connected) {\n      handleClick = () => {\n        toggleWalletDrawer()\n        setBagExpanded({ bagExpanded: false })\n      }\n      disabled = false\n      buttonText = <Trans>Connect wallet</Trans>\n    } else if (bagStatus === BagStatus.FETCHING_FINAL_ROUTE || bagStatus === BagStatus.CONFIRMING_IN_WALLET) {\n      disabled = true\n      buttonText = <Trans>Proceed in wallet</Trans>\n    } else if (bagStatus === BagStatus.PROCESSING_TRANSACTION) {\n      disabled = true\n      buttonText = <Trans>Transaction pending</Trans>\n    } else if (usingPayWithAnyToken && tradeState !== TradeState.VALID) {\n      disabled = true\n      buttonText = <Trans>Fetching Route</Trans>\n\n      if (tradeState === TradeState.INVALID) {\n        buttonText = <Trans>Pay</Trans>\n      }\n\n      if (tradeState === TradeState.NO_ROUTE_FOUND) {\n        buttonText = <Trans>Insufficient liquidity</Trans>\n        buttonColor = theme.backgroundInteractive\n        buttonTextColor = theme.textPrimary\n        helperText = <Trans>Insufficient pool liquidity to complete transaction</Trans>\n      }\n    } else if (allowance.state === AllowanceState.REQUIRED || allowance.state === AllowanceState.LOADING) {\n      handleClick = () => updateAllowance()\n      disabled = isAllowancePending || isApprovalLoading || allowance.state === AllowanceState.LOADING\n\n      if (allowance.state === AllowanceState.LOADING) {\n        buttonText = <Trans>Loading Allowance</Trans>\n      } else if (isAllowancePending) {\n        buttonText = <Trans>Approve in your wallet</Trans>\n      } else if (isApprovalLoading) {\n        buttonText = <Trans>Approval pending</Trans>\n      } else {\n        helperText = <Trans>An approval is needed to use this token. </Trans>\n        buttonText = <Trans>Approve</Trans>\n      }\n    } else if (bagStatus === BagStatus.CONFIRM_QUOTE) {\n      disabled = false\n      warningTextColor = theme.accentAction\n      warningText = <Trans>Price updated</Trans>\n      buttonText = <Trans>Pay</Trans>\n    } else if (priceImpact && priceImpact.priceImpactSeverity.type === 'error') {\n      disabled = false\n      buttonColor = priceImpact.priceImpactSeverity.color\n      helperText = <Trans>Price impact warning</Trans>\n      helperTextColor = priceImpact.priceImpactSeverity.color\n      buttonText = <Trans>Pay Anyway</Trans>\n    } else if (sufficientBalance === true) {\n      disabled = false\n      buttonText = <Trans>Pay</Trans>\n      helperText = usingPayWithAnyToken ? <Trans>Refunds for unavailable items will be given in ETH</Trans> : undefined\n    }\n\n    return {\n      buttonText,\n      buttonTextColor,\n      disabled,\n      warningText,\n      warningTextColor,\n      helperText,\n      helperTextColor,\n      handleClick,\n      buttonColor,\n    }\n  }, [\n    fetchAssets,\n    theme.accentWarning,\n    theme.textSecondary,\n    theme.accentAction,\n    theme.accentTextLightPrimary,\n    theme.backgroundInteractive,\n    theme.textPrimary,\n    connected,\n    chainId,\n    sufficientBalance,\n    bagStatus,\n    usingPayWithAnyToken,\n    tradeState,\n    allowance.state,\n    priceImpact,\n    connector,\n    toggleWalletDrawer,\n    setBagExpanded,\n    isAllowancePending,\n    isApprovalLoading,\n    updateAllowance,\n  ])\n\n  const traceEventProperties = {\n    usd_value: usdcValue?.toExact(),\n    using_erc20: !!inputCurrency,\n    ...eventProperties,\n  }\n\n  return (\n    <FooterContainer>\n      <Footer>\n        {shouldUsePayWithAnyToken && (\n          <FooterHeader gap=\"xs\" usingPayWithAnyToken={shouldUsePayWithAnyToken}>\n            <CurrencyRow>\n              <Column gap=\"xs\">\n                <ThemedText.SubHeaderSmall>\n                  <Trans>Pay with</Trans>\n                </ThemedText.SubHeaderSmall>\n                <CurrencyInput\n                  onClick={() => {\n                    if (!bagIsLocked) {\n                      setTokenSelectorOpen(true)\n                      sendAnalyticsEvent(NFTEventName.NFT_BUY_TOKEN_SELECTOR_CLICKED)\n                    }\n                  }}\n                >\n                  <CurrencyLogo currency={activeCurrency} size=\"24px\" />\n                  <ThemedText.HeadlineSmall fontWeight={500} lineHeight=\"24px\">\n                    {activeCurrency?.symbol}\n                  </ThemedText.HeadlineSmall>\n                  <ChevronDown size={20} color={theme.textSecondary} />\n                </CurrencyInput>\n              </Column>\n              <TotalColumn gap=\"xs\">\n                <ThemedText.SubHeaderSmall marginBottom=\"4px\">\n                  <Trans>Total</Trans>\n                </ThemedText.SubHeaderSmall>\n                <InputCurrencyValue\n                  usingPayWithAnyToken={usingPayWithAnyToken}\n                  totalEthPrice={totalEthPrice}\n                  activeCurrency={activeCurrency}\n                  tradeState={tradeState}\n                  trade={trade}\n                />\n              </TotalColumn>\n            </CurrencyRow>\n            <FiatValue\n              usdcValue={usdcValue}\n              priceImpact={priceImpact}\n              tradeState={tradeState}\n              usingPayWithAnyToken={usingPayWithAnyToken}\n            />\n          </FooterHeader>\n        )}\n        {!shouldUsePayWithAnyToken && (\n          <FooterHeader gap=\"xs\">\n            <Row justify=\"space-between\">\n              <div>\n                <ThemedText.HeadlineSmall>Total</ThemedText.HeadlineSmall>\n              </div>\n              <div>\n                <ThemedText.HeadlineSmall>\n                  {formatWeiToDecimal(totalEthPrice.toString())}\n                  &nbsp;{activeCurrency?.symbol ?? 'ETH'}\n                </ThemedText.HeadlineSmall>\n              </div>\n            </Row>\n            <FiatValue\n              usdcValue={usdcValue}\n              priceImpact={priceImpact}\n              tradeState={tradeState}\n              usingPayWithAnyToken={usingPayWithAnyToken}\n            />\n          </FooterHeader>\n        )}\n        <TraceEvent\n          events={[BrowserEvent.onClick]}\n          name={NFTEventName.NFT_BUY_BAG_PAY}\n          element={InterfaceElementName.NFT_BUY_BAG_PAY_BUTTON}\n          properties={{ ...traceEventProperties }}\n          shouldLogImpression={connected && !disabled}\n        >\n          <Warning color={warningTextColor}>{warningText}</Warning>\n          <Helper color={helperTextColor}>{helperText}</Helper>\n          <ActionButton\n            onClick={handleClick}\n            disabled={disabled || isPending}\n            backgroundColor={buttonColor}\n            textColor={buttonTextColor}\n          >\n            {isPending && <Loader size=\"20px\" stroke=\"white\" />}\n            {buttonText}\n          </ActionButton>\n        </TraceEvent>\n      </Footer>\n      <CurrencySearchModal\n        isOpen={tokenSelectorOpen}\n        onDismiss={() => setTokenSelectorOpen(false)}\n        onCurrencySelect={(currency: Currency) => {\n          setInputCurrency(currency.isNative ? undefined : currency)\n          if (currency.isToken) {\n            sendAnalyticsEvent(NFTEventName.NFT_BUY_TOKEN_SELECTED, {\n              token_address: currency.address,\n              token_symbol: currency.symbol,\n            })\n          }\n        }}\n        selectedCurrency={activeCurrency ?? undefined}\n        onlyShowCurrenciesWithBalance={true}\n      />\n    </FooterContainer>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}