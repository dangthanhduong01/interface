{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/components/AccountDrawer/MiniPortfolio/Tokens/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { TraceEvent } from '@uniswap/analytics';\nimport { BrowserEvent, InterfaceElementName, SharedEventName } from '@uniswap/analytics-events';\nimport { formatNumber, NumberType } from '@uniswap/conedison/format';\nimport Row from 'components/Row';\nimport { formatDelta } from 'components/Tokens/TokenDetails/PriceChart';\nimport { usePortfolioBalancesQuery } from 'graphql/data/__generated__/types-and-hooks';\nimport { getTokenDetailsURL, gqlToCurrency } from 'graphql/data/util';\nimport { useAtomValue } from 'jotai/utils';\nimport { EmptyWalletModule } from 'nft/components/profile/view/EmptyWalletContent';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { EllipsisStyle, ThemedText } from 'theme';\nimport { useToggleAccountDrawer } from '../..';\nimport { PortfolioArrow } from '../../AuthenticatedHeader';\nimport { hideSmallBalancesAtom } from '../../SmallBalanceToggle';\nimport { ExpandoRow } from '../ExpandoRow';\nimport { PortfolioLogo } from '../PortfolioLogo';\nimport PortfolioRow, { PortfolioSkeleton, PortfolioTabWrapper } from '../PortfolioRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HIDE_SMALL_USD_BALANCES_THRESHOLD = 1;\nfunction meetsThreshold(tokenBalance, hideSmallBalances) {\n  var _tokenBalance$denomin, _tokenBalance$denomin2;\n  return !hideSmallBalances || ((_tokenBalance$denomin = (_tokenBalance$denomin2 = tokenBalance.denominatedValue) === null || _tokenBalance$denomin2 === void 0 ? void 0 : _tokenBalance$denomin2.value) !== null && _tokenBalance$denomin !== void 0 ? _tokenBalance$denomin : 0) > HIDE_SMALL_USD_BALANCES_THRESHOLD;\n}\nexport default function Tokens(_ref) {\n  _s();\n  var _data$portfolios4, _data$portfolios4$0$t;\n  let {\n    account\n  } = _ref;\n  const toggleWalletDrawer = useToggleAccountDrawer();\n  const hideSmallBalances = useAtomValue(hideSmallBalancesAtom);\n  const [showHiddenTokens, setShowHiddenTokens] = useState(false);\n  const {\n    data\n  } = usePortfolioBalancesQuery({\n    variables: {\n      ownerAddress: account\n    },\n    fetchPolicy: 'cache-only',\n    // PrefetchBalancesWrapper handles balance fetching/staleness; this component only reads from cache\n    errorPolicy: 'all'\n  });\n  const visibleTokens = useMemo(() => {\n    var _data$portfolios$0$to, _data$portfolios, _data$portfolios$0$to2, _data$portfolios2, _data$portfolios2$0$t;\n    return !hideSmallBalances ? (_data$portfolios$0$to = data === null || data === void 0 ? void 0 : (_data$portfolios = data.portfolios) === null || _data$portfolios === void 0 ? void 0 : _data$portfolios[0].tokenBalances) !== null && _data$portfolios$0$to !== void 0 ? _data$portfolios$0$to : [] : (_data$portfolios$0$to2 = data === null || data === void 0 ? void 0 : (_data$portfolios2 = data.portfolios) === null || _data$portfolios2 === void 0 ? void 0 : (_data$portfolios2$0$t = _data$portfolios2[0].tokenBalances) === null || _data$portfolios2$0$t === void 0 ? void 0 : _data$portfolios2$0$t.filter(tokenBalance => meetsThreshold(tokenBalance, hideSmallBalances))) !== null && _data$portfolios$0$to2 !== void 0 ? _data$portfolios$0$to2 : [];\n  }, [data === null || data === void 0 ? void 0 : data.portfolios, hideSmallBalances]);\n  const hiddenTokens = useMemo(() => {\n    var _data$portfolios$0$to3, _data$portfolios3, _data$portfolios3$0$t;\n    return !hideSmallBalances ? [] : (_data$portfolios$0$to3 = data === null || data === void 0 ? void 0 : (_data$portfolios3 = data.portfolios) === null || _data$portfolios3 === void 0 ? void 0 : (_data$portfolios3$0$t = _data$portfolios3[0].tokenBalances) === null || _data$portfolios3$0$t === void 0 ? void 0 : _data$portfolios3$0$t.filter(tokenBalance => !meetsThreshold(tokenBalance, hideSmallBalances))) !== null && _data$portfolios$0$to3 !== void 0 ? _data$portfolios$0$to3 : [];\n  }, [data === null || data === void 0 ? void 0 : data.portfolios, hideSmallBalances]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(PortfolioSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if ((data === null || data === void 0 ? void 0 : (_data$portfolios4 = data.portfolios) === null || _data$portfolios4 === void 0 ? void 0 : (_data$portfolios4$0$t = _data$portfolios4[0].tokenBalances) === null || _data$portfolios4$0$t === void 0 ? void 0 : _data$portfolios4$0$t.length) === 0) {\n    // TODO: consider launching moonpay here instead of just closing the drawer\n    return /*#__PURE__*/_jsxDEV(EmptyWalletModule, {\n      type: \"token\",\n      onNavigateClick: toggleWalletDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  const toggleHiddenTokens = () => setShowHiddenTokens(showHiddenTokens => !showHiddenTokens);\n  return /*#__PURE__*/_jsxDEV(PortfolioTabWrapper, {\n    children: [visibleTokens.map(tokenBalance => tokenBalance.token && meetsThreshold(tokenBalance, hideSmallBalances) && /*#__PURE__*/_jsxDEV(TokenRow, {\n      ...tokenBalance,\n      token: tokenBalance.token\n    }, tokenBalance.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(ExpandoRow, {\n      isExpanded: showHiddenTokens,\n      toggle: toggleHiddenTokens,\n      numItems: hiddenTokens.length,\n      children: hiddenTokens.map(tokenBalance => tokenBalance.token && /*#__PURE__*/_jsxDEV(TokenRow, {\n        ...tokenBalance,\n        token: tokenBalance.token\n      }, tokenBalance.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Tokens, \"ycUjj0mchQPviLaTMLfqZZ6EQZs=\", false, function () {\n  return [useToggleAccountDrawer, useAtomValue, usePortfolioBalancesQuery];\n});\n_c = Tokens;\nconst TokenBalanceText = _styled(ThemedText.BodySecondary).withConfig({\n  displayName: \"Tokens__TokenBalanceText\",\n  componentId: \"sc-eqtxsv-0\"\n})([\"\", \"\"], EllipsisStyle);\nfunction TokenRow(_ref2) {\n  _s2();\n  var _tokenProjectMarket$p, _tokenProjectMarket$p2;\n  let {\n    token,\n    quantity,\n    denominatedValue,\n    tokenProjectMarket\n  } = _ref2;\n  const percentChange = (_tokenProjectMarket$p = tokenProjectMarket === null || tokenProjectMarket === void 0 ? void 0 : (_tokenProjectMarket$p2 = tokenProjectMarket.pricePercentChange) === null || _tokenProjectMarket$p2 === void 0 ? void 0 : _tokenProjectMarket$p2.value) !== null && _tokenProjectMarket$p !== void 0 ? _tokenProjectMarket$p : 0;\n  const navigate = useNavigate();\n  const toggleWalletDrawer = useToggleAccountDrawer();\n  const navigateToTokenDetails = useCallback(async () => {\n    navigate(getTokenDetailsURL(token));\n    toggleWalletDrawer();\n  }, [navigate, token, toggleWalletDrawer]);\n  const currency = gqlToCurrency(token);\n  return /*#__PURE__*/_jsxDEV(TraceEvent, {\n    events: [BrowserEvent.onClick],\n    name: SharedEventName.ELEMENT_CLICKED,\n    element: InterfaceElementName.MINI_PORTFOLIO_TOKEN_ROW,\n    properties: {\n      chain_id: currency.chainId,\n      token_name: token === null || token === void 0 ? void 0 : token.name,\n      address: token === null || token === void 0 ? void 0 : token.address\n    },\n    children: /*#__PURE__*/_jsxDEV(PortfolioRow, {\n      left: /*#__PURE__*/_jsxDEV(PortfolioLogo, {\n        chainId: currency.chainId,\n        currencies: [currency],\n        size: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this),\n      title: /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n        fontWeight: 500,\n        children: token === null || token === void 0 ? void 0 : token.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }, this),\n      descriptor: /*#__PURE__*/_jsxDEV(TokenBalanceText, {\n        children: [formatNumber(quantity, NumberType.TokenNonTx), \" \", token === null || token === void 0 ? void 0 : token.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this),\n      onClick: navigateToTokenDetails,\n      right: denominatedValue && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n          fontWeight: 500,\n          children: formatNumber(denominatedValue === null || denominatedValue === void 0 ? void 0 : denominatedValue.value, NumberType.PortfolioBalance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(PortfolioArrow, {\n            change: percentChange,\n            size: 20,\n            strokeWidth: 1.75\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.BodySecondary, {\n            children: formatDelta(percentChange)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s2(TokenRow, \"xmYM5WKlW8duJOfmJxHqPiyM6XI=\", false, function () {\n  return [useNavigate, useToggleAccountDrawer];\n});\n_c2 = TokenRow;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tokens\");\n$RefreshReg$(_c2, \"TokenRow\");","map":{"version":3,"names":["TraceEvent","BrowserEvent","InterfaceElementName","SharedEventName","formatNumber","NumberType","Row","formatDelta","usePortfolioBalancesQuery","getTokenDetailsURL","gqlToCurrency","useAtomValue","EmptyWalletModule","useCallback","useMemo","useState","useNavigate","EllipsisStyle","ThemedText","useToggleAccountDrawer","PortfolioArrow","hideSmallBalancesAtom","ExpandoRow","PortfolioLogo","PortfolioRow","PortfolioSkeleton","PortfolioTabWrapper","HIDE_SMALL_USD_BALANCES_THRESHOLD","meetsThreshold","tokenBalance","hideSmallBalances","denominatedValue","value","Tokens","account","toggleWalletDrawer","showHiddenTokens","setShowHiddenTokens","data","variables","ownerAddress","fetchPolicy","errorPolicy","visibleTokens","portfolios","tokenBalances","filter","hiddenTokens","length","toggleHiddenTokens","map","token","id","TokenBalanceText","styled","BodySecondary","TokenRow","quantity","tokenProjectMarket","percentChange","pricePercentChange","navigate","navigateToTokenDetails","currency","onClick","ELEMENT_CLICKED","MINI_PORTFOLIO_TOKEN_ROW","chain_id","chainId","token_name","name","address","TokenNonTx","symbol","PortfolioBalance"],"sources":["/home/diep/freelance/interface/src/components/AccountDrawer/MiniPortfolio/Tokens/index.tsx"],"sourcesContent":["import { TraceEvent } from '@uniswap/analytics'\nimport { BrowserEvent, InterfaceElementName, SharedEventName } from '@uniswap/analytics-events'\nimport { formatNumber, NumberType } from '@uniswap/conedison/format'\nimport Row from 'components/Row'\nimport { formatDelta } from 'components/Tokens/TokenDetails/PriceChart'\nimport { PortfolioBalancesQuery, usePortfolioBalancesQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { getTokenDetailsURL, gqlToCurrency } from 'graphql/data/util'\nimport { useAtomValue } from 'jotai/utils'\nimport { EmptyWalletModule } from 'nft/components/profile/view/EmptyWalletContent'\nimport { useCallback, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { EllipsisStyle, ThemedText } from 'theme'\n\nimport { useToggleAccountDrawer } from '../..'\nimport { PortfolioArrow } from '../../AuthenticatedHeader'\nimport { hideSmallBalancesAtom } from '../../SmallBalanceToggle'\nimport { ExpandoRow } from '../ExpandoRow'\nimport { PortfolioLogo } from '../PortfolioLogo'\nimport PortfolioRow, { PortfolioSkeleton, PortfolioTabWrapper } from '../PortfolioRow'\n\nconst HIDE_SMALL_USD_BALANCES_THRESHOLD = 1\n\nfunction meetsThreshold(tokenBalance: TokenBalance, hideSmallBalances: boolean) {\n  return !hideSmallBalances || (tokenBalance.denominatedValue?.value ?? 0) > HIDE_SMALL_USD_BALANCES_THRESHOLD\n}\n\nexport default function Tokens({ account }: { account: string }) {\n  const toggleWalletDrawer = useToggleAccountDrawer()\n  const hideSmallBalances = useAtomValue(hideSmallBalancesAtom)\n  const [showHiddenTokens, setShowHiddenTokens] = useState(false)\n\n  const { data } = usePortfolioBalancesQuery({\n    variables: { ownerAddress: account },\n    fetchPolicy: 'cache-only', // PrefetchBalancesWrapper handles balance fetching/staleness; this component only reads from cache\n    errorPolicy: 'all',\n  })\n\n  const visibleTokens = useMemo(() => {\n    return !hideSmallBalances\n      ? data?.portfolios?.[0].tokenBalances ?? []\n      : data?.portfolios?.[0].tokenBalances?.filter((tokenBalance) =>\n          meetsThreshold(tokenBalance, hideSmallBalances)\n        ) ?? []\n  }, [data?.portfolios, hideSmallBalances])\n\n  const hiddenTokens = useMemo(() => {\n    return !hideSmallBalances\n      ? []\n      : data?.portfolios?.[0].tokenBalances?.filter(\n          (tokenBalance) => !meetsThreshold(tokenBalance, hideSmallBalances)\n        ) ?? []\n  }, [data?.portfolios, hideSmallBalances])\n\n  if (!data) {\n    return <PortfolioSkeleton />\n  }\n\n  if (data?.portfolios?.[0].tokenBalances?.length === 0) {\n    // TODO: consider launching moonpay here instead of just closing the drawer\n    return <EmptyWalletModule type=\"token\" onNavigateClick={toggleWalletDrawer} />\n  }\n\n  const toggleHiddenTokens = () => setShowHiddenTokens((showHiddenTokens) => !showHiddenTokens)\n\n  return (\n    <PortfolioTabWrapper>\n      {visibleTokens.map(\n        (tokenBalance) =>\n          tokenBalance.token &&\n          meetsThreshold(tokenBalance, hideSmallBalances) && (\n            <TokenRow key={tokenBalance.id} {...tokenBalance} token={tokenBalance.token} />\n          )\n      )}\n      <ExpandoRow isExpanded={showHiddenTokens} toggle={toggleHiddenTokens} numItems={hiddenTokens.length}>\n        {hiddenTokens.map(\n          (tokenBalance) =>\n            tokenBalance.token && <TokenRow key={tokenBalance.id} {...tokenBalance} token={tokenBalance.token} />\n        )}\n      </ExpandoRow>\n    </PortfolioTabWrapper>\n  )\n}\n\nconst TokenBalanceText = styled(ThemedText.BodySecondary)`\n  ${EllipsisStyle}\n`\n\ntype TokenBalance = NonNullable<\n  NonNullable<NonNullable<PortfolioBalancesQuery['portfolios']>[number]>['tokenBalances']\n>[number]\n\ntype PortfolioToken = NonNullable<TokenBalance['token']>\n\nfunction TokenRow({ token, quantity, denominatedValue, tokenProjectMarket }: TokenBalance & { token: PortfolioToken }) {\n  const percentChange = tokenProjectMarket?.pricePercentChange?.value ?? 0\n\n  const navigate = useNavigate()\n  const toggleWalletDrawer = useToggleAccountDrawer()\n  const navigateToTokenDetails = useCallback(async () => {\n    navigate(getTokenDetailsURL(token))\n    toggleWalletDrawer()\n  }, [navigate, token, toggleWalletDrawer])\n\n  const currency = gqlToCurrency(token)\n  return (\n    <TraceEvent\n      events={[BrowserEvent.onClick]}\n      name={SharedEventName.ELEMENT_CLICKED}\n      element={InterfaceElementName.MINI_PORTFOLIO_TOKEN_ROW}\n      properties={{ chain_id: currency.chainId, token_name: token?.name, address: token?.address }}\n    >\n      <PortfolioRow\n        left={<PortfolioLogo chainId={currency.chainId} currencies={[currency]} size=\"40px\" />}\n        title={<ThemedText.SubHeader fontWeight={500}>{token?.name}</ThemedText.SubHeader>}\n        descriptor={\n          <TokenBalanceText>\n            {formatNumber(quantity, NumberType.TokenNonTx)} {token?.symbol}\n          </TokenBalanceText>\n        }\n        onClick={navigateToTokenDetails}\n        right={\n          denominatedValue && (\n            <>\n              <ThemedText.SubHeader fontWeight={500}>\n                {formatNumber(denominatedValue?.value, NumberType.PortfolioBalance)}\n              </ThemedText.SubHeader>\n              <Row justify=\"flex-end\">\n                <PortfolioArrow change={percentChange} size={20} strokeWidth={1.75} />\n                <ThemedText.BodySecondary>{formatDelta(percentChange)}</ThemedText.BodySecondary>\n              </Row>\n            </>\n          )\n        }\n      />\n    </TraceEvent>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}