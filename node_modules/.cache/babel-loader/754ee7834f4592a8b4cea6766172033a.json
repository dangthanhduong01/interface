{"ast":null,"code":"import { BigNumber } from '@ethersproject/bignumber';\nimport { Contract } from '@ethersproject/contracts';\nimport { parseEther } from '@ethersproject/units';\nimport { addressesByNetwork, signMakerOrder, SupportedChainId } from '@looksrare/sdk';\nimport { Seaport } from '@opensea/seaport-js';\nimport { ItemType } from '@opensea/seaport-js/lib/constants';\nimport { ZERO_ADDRESS } from 'constants/misc';\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks';\nimport { OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY, OPENSEA_FEE_ADDRESS, OPENSEA_KEY_TO_CONDUIT, OPENSEA_SEAPORT_V1_4_CONTRACT } from 'nft/queries/openSea';\nimport ERC721 from '../../abis/erc721.json';\nimport ERC1155 from '../../abis/erc1155.json';\nimport { createLooksRareOrder, getOrderId, LOOKSRARE_MARKETPLACE_CONTRACT_721, newX2Y2Order, PostOpenSeaSellOrder } from '../queries';\nimport { INVERSE_BASIS_POINTS } from '../queries/openSea';\nimport { ListingStatus } from '../types';\nimport { createSellOrder, encodeOrder, signOrderData } from './x2y2';\nexport const LOOKS_RARE_CREATOR_BASIS_POINTS = 50;\nexport const ListingMarkets = [{\n  name: 'X2Y2',\n  fee: 0.5,\n  icon: '/nft/svgs/marketplaces/x2y2.svg'\n}, {\n  name: 'OpenSea',\n  fee: 0,\n  icon: '/nft/svgs/marketplaces/opensea.svg'\n}];\nconst createConsiderationItem = (basisPoints, recipient) => {\n  return {\n    amount: basisPoints,\n    recipient\n  };\n};\nconst getConsiderationItems = (asset, price, signerAddress) => {\n  var _asset$basisPoints, _asset$asset_contract, _asset$asset_contract2;\n  const creatorFeeBasisPoints = (_asset$basisPoints = asset === null || asset === void 0 ? void 0 : asset.basisPoints) !== null && _asset$basisPoints !== void 0 ? _asset$basisPoints : 0;\n  const openSeaBasisPoints = !(asset === null || asset === void 0 ? void 0 : asset.basisPoints) ? 50 : 0;\n  const sellerBasisPoints = INVERSE_BASIS_POINTS - creatorFeeBasisPoints - openSeaBasisPoints;\n  const creatorFee = price.mul(BigNumber.from(creatorFeeBasisPoints)).div(BigNumber.from(INVERSE_BASIS_POINTS)).toString();\n  const sellerFee = price.mul(BigNumber.from(sellerBasisPoints)).div(BigNumber.from(INVERSE_BASIS_POINTS)).toString();\n  const openSeaFee = price.mul(BigNumber.from(openSeaBasisPoints)).div(BigNumber.from(INVERSE_BASIS_POINTS)).toString();\n  return {\n    sellerFee: createConsiderationItem(sellerFee, signerAddress),\n    creatorFee: creatorFeeBasisPoints > 0 ? createConsiderationItem(creatorFee, (_asset$asset_contract = asset === null || asset === void 0 ? void 0 : (_asset$asset_contract2 = asset.asset_contract) === null || _asset$asset_contract2 === void 0 ? void 0 : _asset$asset_contract2.payout_address) !== null && _asset$asset_contract !== void 0 ? _asset$asset_contract : '') : undefined,\n    openSeaFee: openSeaBasisPoints ? createConsiderationItem(openSeaFee, OPENSEA_FEE_ADDRESS) : undefined\n  };\n};\nexport async function approveCollection(operator, collectionAddress, signer, setStatus) {\n  let nftStandard = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : NftStandard.Erc721;\n  const contract = new Contract(collectionAddress, nftStandard === NftStandard.Erc721 ? ERC721 : ERC1155, signer);\n  const signerAddress = await signer.getAddress();\n  try {\n    const approved = await contract.isApprovedForAll(signerAddress, operator);\n    if (approved) {\n      setStatus(ListingStatus.APPROVED);\n      return;\n    }\n    setStatus(ListingStatus.SIGNING);\n    const approvalTransaction = await contract.setApprovalForAll(operator, true);\n    setStatus(ListingStatus.PENDING);\n    const tx = await approvalTransaction.wait();\n    tx.status === 1 ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED);\n  } catch (error) {\n    if (error.code === 4001) setStatus(ListingStatus.REJECTED);else setStatus(ListingStatus.FAILED);\n  }\n}\nexport async function signListing(marketplace, asset, signer, provider) {\n  var _asset$newListings, _asset$newListings$fi;\n  let looksRareNonce = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  let setStatus = arguments.length > 5 ? arguments[5] : undefined;\n  const seaport = new Seaport(provider, {\n    conduitKeyToConduit: OPENSEA_KEY_TO_CONDUIT,\n    overrides: {\n      defaultConduitKey: OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY\n    },\n    seaportVersion: '1.4'\n  });\n  const signerAddress = await signer.getAddress();\n  const listingPrice = (_asset$newListings = asset.newListings) === null || _asset$newListings === void 0 ? void 0 : (_asset$newListings$fi = _asset$newListings.find(listing => listing.marketplace.name === marketplace.name)) === null || _asset$newListings$fi === void 0 ? void 0 : _asset$newListings$fi.price;\n  if (!listingPrice || !asset.expirationTime || !asset.asset_contract.address || !asset.tokenId) return false;\n  switch (marketplace.name) {\n    case 'OpenSea':\n      try {\n        const listingInWei = parseEther(`${listingPrice}`);\n        const {\n          sellerFee,\n          creatorFee,\n          openSeaFee\n        } = getConsiderationItems(asset, listingInWei, signerAddress);\n        const considerationItems = [sellerFee, creatorFee, openSeaFee].filter(item => item !== undefined);\n        const {\n          executeAllActions\n        } = await seaport.createOrder({\n          offer: [{\n            itemType: asset.asset_contract.tokenType === NftStandard.Erc721 ? ItemType.ERC721 : ItemType.ERC1155,\n            token: asset.asset_contract.address,\n            identifier: asset.tokenId,\n            amount: '1'\n          }],\n          consideration: considerationItems,\n          endTime: asset.expirationTime.toString(),\n          zone: ZERO_ADDRESS,\n          allowPartialFills: true\n        }, signerAddress);\n        const order = await executeAllActions();\n        const seaportV14Order = {\n          ...order,\n          protocol_address: OPENSEA_SEAPORT_V1_4_CONTRACT\n        };\n        setStatus(ListingStatus.PENDING);\n        const res = await PostOpenSeaSellOrder(seaportV14Order);\n        res ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED);\n        return res;\n      } catch (error) {\n        if (error.code === 4001) setStatus(ListingStatus.REJECTED);else setStatus(ListingStatus.FAILED);\n        return false;\n      }\n    case 'LooksRare':\n      {\n        const addresses = addressesByNetwork[SupportedChainId.MAINNET];\n        const currentTime = Math.round(Date.now() / 1000);\n        const makerOrder = {\n          // true --> ask / false --> bid\n          isOrderAsk: true,\n          // signer address of the maker order\n          signer: signerAddress,\n          // collection address\n          collection: asset.asset_contract.address,\n          // Price in WEI\n          price: parseEther(listingPrice.toString()),\n          // Token ID\n          tokenId: BigNumber.from(asset.tokenId),\n          // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n          amount: BigNumber.from(1),\n          // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice), see addresses in the SDK\n          strategy: addresses.STRATEGY_STANDARD_SALE,\n          // currency address\n          currency: addresses.WETH,\n          // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n          nonce: BigNumber.from(looksRareNonce),\n          // startTime timestamp in seconds\n          startTime: BigNumber.from(currentTime),\n          // endTime timestamp in seconds\n          endTime: BigNumber.from(asset.expirationTime),\n          // minimum ratio to be received by the user (per 10000)\n          // As of 11.10.22 LooksRare charges 1.5% + 0.5% if there's creator royalties set https://docs.looksrare.org/blog/looksrare-offers-zero-royalty-trading-shares-protocol-fees-with-creators-instead\n          minPercentageToAsk: BigNumber.from(10000).sub(BigNumber.from(150 + (asset.basisPoints ? 50 : 0))).toNumber(),\n          // params (e.g., price, target account for private sale)\n          params: []\n        };\n        try {\n          const signatureHash = await signMakerOrder(signer, SupportedChainId.MAINNET, makerOrder, LOOKSRARE_MARKETPLACE_CONTRACT_721);\n          setStatus(ListingStatus.PENDING);\n          const payload = {\n            signature: signatureHash,\n            tokenId: asset.tokenId,\n            collection: asset.asset_contract.address,\n            strategy: addresses.STRATEGY_STANDARD_SALE,\n            currency: addresses.WETH,\n            signer: signerAddress,\n            isOrderAsk: true,\n            nonce: looksRareNonce,\n            amount: 1,\n            price: parseEther(listingPrice.toString()).toString(),\n            startTime: currentTime,\n            endTime: asset.expirationTime,\n            minPercentageToAsk: 10000 - (150 + (asset.basisPoints ? 50 : 0)),\n            params: []\n          };\n          const res = await createLooksRareOrder(payload);\n          res ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED);\n          return res;\n        } catch (error) {\n          if (error.code === 4001) setStatus(ListingStatus.REJECTED);else setStatus(ListingStatus.FAILED);\n          return false;\n        }\n      }\n    case 'X2Y2':\n      {\n        const orderItem = {\n          price: parseEther(listingPrice.toString()),\n          tokens: [{\n            token: asset.asset_contract.address,\n            tokenId: BigNumber.from(asset.tokenId),\n            amount: 1\n          }]\n        };\n        const order = createSellOrder(signerAddress, asset.expirationTime, [orderItem], asset.asset_contract.tokenType);\n        try {\n          const prevOrderId = await getOrderId(asset.asset_contract.address, asset.tokenId);\n          await signOrderData(provider, order);\n          const payload = {\n            order: encodeOrder(order),\n            isBundle: false,\n            bundleName: '',\n            bundleDesc: '',\n            orderIds: prevOrderId ? [prevOrderId] : [],\n            changePrice: Boolean(prevOrderId),\n            isCollection: false\n          };\n          setStatus(ListingStatus.PENDING);\n          // call server api\n          const resp = await newX2Y2Order(payload);\n          resp ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED);\n          return resp;\n        } catch (error) {\n          if (error.code === 4001) setStatus(ListingStatus.REJECTED);else setStatus(ListingStatus.FAILED);\n          return false;\n        }\n      }\n    default:\n      return false;\n  }\n}","map":{"version":3,"names":["BigNumber","Contract","parseEther","addressesByNetwork","signMakerOrder","SupportedChainId","Seaport","ItemType","ZERO_ADDRESS","NftStandard","OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY","OPENSEA_FEE_ADDRESS","OPENSEA_KEY_TO_CONDUIT","OPENSEA_SEAPORT_V1_4_CONTRACT","ERC721","ERC1155","createLooksRareOrder","getOrderId","LOOKSRARE_MARKETPLACE_CONTRACT_721","newX2Y2Order","PostOpenSeaSellOrder","INVERSE_BASIS_POINTS","ListingStatus","createSellOrder","encodeOrder","signOrderData","LOOKS_RARE_CREATOR_BASIS_POINTS","ListingMarkets","name","fee","icon","createConsiderationItem","basisPoints","recipient","amount","getConsiderationItems","asset","price","signerAddress","creatorFeeBasisPoints","openSeaBasisPoints","sellerBasisPoints","creatorFee","mul","from","div","toString","sellerFee","openSeaFee","asset_contract","payout_address","undefined","approveCollection","operator","collectionAddress","signer","setStatus","nftStandard","Erc721","contract","getAddress","approved","isApprovedForAll","APPROVED","SIGNING","approvalTransaction","setApprovalForAll","PENDING","tx","wait","status","FAILED","error","code","REJECTED","signListing","marketplace","provider","looksRareNonce","seaport","conduitKeyToConduit","overrides","defaultConduitKey","seaportVersion","listingPrice","newListings","find","listing","expirationTime","address","tokenId","listingInWei","considerationItems","filter","item","executeAllActions","createOrder","offer","itemType","tokenType","token","identifier","consideration","endTime","zone","allowPartialFills","order","seaportV14Order","protocol_address","res","addresses","MAINNET","currentTime","Math","round","Date","now","makerOrder","isOrderAsk","collection","strategy","STRATEGY_STANDARD_SALE","currency","WETH","nonce","startTime","minPercentageToAsk","sub","toNumber","params","signatureHash","payload","signature","orderItem","tokens","prevOrderId","isBundle","bundleName","bundleDesc","orderIds","changePrice","Boolean","isCollection","resp"],"sources":["/home/diep/freelance/interface/src/nft/utils/listNfts.ts"],"sourcesContent":["import { Signer } from '@ethersproject/abstract-signer'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport type { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { parseEther } from '@ethersproject/units'\nimport { addressesByNetwork, MakerOrder, signMakerOrder, SupportedChainId } from '@looksrare/sdk'\nimport { Seaport } from '@opensea/seaport-js'\nimport { ItemType } from '@opensea/seaport-js/lib/constants'\nimport { ConsiderationInputItem } from '@opensea/seaport-js/lib/types'\nimport { ZERO_ADDRESS } from 'constants/misc'\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport {\n  OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY,\n  OPENSEA_FEE_ADDRESS,\n  OPENSEA_KEY_TO_CONDUIT,\n  OPENSEA_SEAPORT_V1_4_CONTRACT,\n} from 'nft/queries/openSea'\n\nimport ERC721 from '../../abis/erc721.json'\nimport ERC1155 from '../../abis/erc1155.json'\nimport {\n  createLooksRareOrder,\n  getOrderId,\n  LOOKSRARE_MARKETPLACE_CONTRACT_721,\n  newX2Y2Order,\n  PostOpenSeaSellOrder,\n} from '../queries'\nimport { INVERSE_BASIS_POINTS } from '../queries/openSea'\nimport { ListingMarket, ListingStatus, WalletAsset } from '../types'\nimport { createSellOrder, encodeOrder, OfferItem, OrderPayload, signOrderData } from './x2y2'\n\nexport const LOOKS_RARE_CREATOR_BASIS_POINTS = 50\n\nexport const ListingMarkets: ListingMarket[] = [\n  {\n    name: 'X2Y2',\n    fee: 0.5,\n    icon: '/nft/svgs/marketplaces/x2y2.svg',\n  },\n  {\n    name: 'OpenSea',\n    fee: 0,\n    icon: '/nft/svgs/marketplaces/opensea.svg',\n  },\n]\n\nconst createConsiderationItem = (basisPoints: string, recipient: string): ConsiderationInputItem => {\n  return {\n    amount: basisPoints,\n    recipient,\n  }\n}\n\nconst getConsiderationItems = (\n  asset: WalletAsset,\n  price: BigNumber,\n  signerAddress: string\n): {\n  sellerFee: ConsiderationInputItem\n  creatorFee?: ConsiderationInputItem\n  openSeaFee?: ConsiderationInputItem\n} => {\n  const creatorFeeBasisPoints = asset?.basisPoints ?? 0\n  const openSeaBasisPoints = !asset?.basisPoints ? 50 : 0\n  const sellerBasisPoints = INVERSE_BASIS_POINTS - creatorFeeBasisPoints - openSeaBasisPoints\n\n  const creatorFee = price\n    .mul(BigNumber.from(creatorFeeBasisPoints))\n    .div(BigNumber.from(INVERSE_BASIS_POINTS))\n    .toString()\n  const sellerFee = price.mul(BigNumber.from(sellerBasisPoints)).div(BigNumber.from(INVERSE_BASIS_POINTS)).toString()\n  const openSeaFee = price.mul(BigNumber.from(openSeaBasisPoints)).div(BigNumber.from(INVERSE_BASIS_POINTS)).toString()\n\n  return {\n    sellerFee: createConsiderationItem(sellerFee, signerAddress),\n    creatorFee:\n      creatorFeeBasisPoints > 0\n        ? createConsiderationItem(creatorFee, asset?.asset_contract?.payout_address ?? '')\n        : undefined,\n    openSeaFee: openSeaBasisPoints ? createConsiderationItem(openSeaFee, OPENSEA_FEE_ADDRESS) : undefined,\n  }\n}\n\nexport async function approveCollection(\n  operator: string,\n  collectionAddress: string,\n  signer: Signer,\n  setStatus: (newStatus: ListingStatus) => void,\n  nftStandard: NftStandard = NftStandard.Erc721\n): Promise<void> {\n  const contract = new Contract(collectionAddress, nftStandard === NftStandard.Erc721 ? ERC721 : ERC1155, signer)\n  const signerAddress = await signer.getAddress()\n\n  try {\n    const approved = await contract.isApprovedForAll(signerAddress, operator)\n    if (approved) {\n      setStatus(ListingStatus.APPROVED)\n      return\n    }\n\n    setStatus(ListingStatus.SIGNING)\n    const approvalTransaction = await contract.setApprovalForAll(operator, true)\n\n    setStatus(ListingStatus.PENDING)\n    const tx = await approvalTransaction.wait()\n\n    tx.status === 1 ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n  } catch (error) {\n    if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n    else setStatus(ListingStatus.FAILED)\n  }\n}\n\nexport async function signListing(\n  marketplace: ListingMarket,\n  asset: WalletAsset,\n  signer: JsonRpcSigner,\n  provider: Web3Provider,\n  looksRareNonce = 0,\n  setStatus: (newStatus: ListingStatus) => void\n): Promise<boolean> {\n  const seaport = new Seaport(provider, {\n    conduitKeyToConduit: OPENSEA_KEY_TO_CONDUIT,\n    overrides: {\n      defaultConduitKey: OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY,\n    },\n    seaportVersion: '1.4',\n  })\n\n  const signerAddress = await signer.getAddress()\n  const listingPrice = asset.newListings?.find((listing) => listing.marketplace.name === marketplace.name)?.price\n  if (!listingPrice || !asset.expirationTime || !asset.asset_contract.address || !asset.tokenId) return false\n  switch (marketplace.name) {\n    case 'OpenSea':\n      try {\n        const listingInWei = parseEther(`${listingPrice}`)\n        const { sellerFee, creatorFee, openSeaFee } = getConsiderationItems(asset, listingInWei, signerAddress)\n        const considerationItems = [sellerFee, creatorFee, openSeaFee].filter(\n          (item): item is ConsiderationInputItem => item !== undefined\n        )\n\n        const { executeAllActions } = await seaport.createOrder(\n          {\n            offer: [\n              {\n                itemType: asset.asset_contract.tokenType === NftStandard.Erc721 ? ItemType.ERC721 : ItemType.ERC1155,\n                token: asset.asset_contract.address,\n                identifier: asset.tokenId,\n                amount: '1',\n              },\n            ],\n            consideration: considerationItems,\n            endTime: asset.expirationTime.toString(),\n            zone: ZERO_ADDRESS,\n            allowPartialFills: true,\n          },\n          signerAddress\n        )\n\n        const order = await executeAllActions()\n        const seaportV14Order = { ...order, protocol_address: OPENSEA_SEAPORT_V1_4_CONTRACT }\n        setStatus(ListingStatus.PENDING)\n        const res = await PostOpenSeaSellOrder(seaportV14Order)\n        res ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n        return res\n      } catch (error) {\n        if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n        else setStatus(ListingStatus.FAILED)\n        return false\n      }\n    case 'LooksRare': {\n      const addresses = addressesByNetwork[SupportedChainId.MAINNET]\n      const currentTime = Math.round(Date.now() / 1000)\n      const makerOrder: MakerOrder = {\n        // true --> ask / false --> bid\n        isOrderAsk: true,\n        // signer address of the maker order\n        signer: signerAddress,\n        // collection address\n        collection: asset.asset_contract.address,\n        // Price in WEI\n        price: parseEther(listingPrice.toString()),\n        // Token ID\n        tokenId: BigNumber.from(asset.tokenId),\n        // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n        amount: BigNumber.from(1),\n        // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice), see addresses in the SDK\n        strategy: addresses.STRATEGY_STANDARD_SALE,\n        // currency address\n        currency: addresses.WETH,\n        // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n        nonce: BigNumber.from(looksRareNonce),\n        // startTime timestamp in seconds\n        startTime: BigNumber.from(currentTime),\n        // endTime timestamp in seconds\n        endTime: BigNumber.from(asset.expirationTime),\n        // minimum ratio to be received by the user (per 10000)\n        // As of 11.10.22 LooksRare charges 1.5% + 0.5% if there's creator royalties set https://docs.looksrare.org/blog/looksrare-offers-zero-royalty-trading-shares-protocol-fees-with-creators-instead\n        minPercentageToAsk: BigNumber.from(10000)\n          .sub(BigNumber.from(150 + (asset.basisPoints ? 50 : 0)))\n          .toNumber(),\n        // params (e.g., price, target account for private sale)\n        params: [],\n      }\n\n      try {\n        const signatureHash = await signMakerOrder(\n          signer,\n          SupportedChainId.MAINNET,\n          makerOrder,\n          LOOKSRARE_MARKETPLACE_CONTRACT_721\n        )\n        setStatus(ListingStatus.PENDING)\n        const payload = {\n          signature: signatureHash,\n          tokenId: asset.tokenId,\n          collection: asset.asset_contract.address,\n          strategy: addresses.STRATEGY_STANDARD_SALE,\n          currency: addresses.WETH,\n          signer: signerAddress,\n          isOrderAsk: true,\n          nonce: looksRareNonce,\n          amount: 1,\n          price: parseEther(listingPrice.toString()).toString(),\n          startTime: currentTime,\n          endTime: asset.expirationTime,\n          minPercentageToAsk: 10000 - (150 + (asset.basisPoints ? 50 : 0)),\n          params: [],\n        }\n        const res = await createLooksRareOrder(payload)\n        res ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n        return res\n      } catch (error) {\n        if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n        else setStatus(ListingStatus.FAILED)\n        return false\n      }\n    }\n    case 'X2Y2': {\n      const orderItem: OfferItem = {\n        price: parseEther(listingPrice.toString()),\n        tokens: [\n          {\n            token: asset.asset_contract.address,\n            tokenId: BigNumber.from(asset.tokenId),\n            amount: 1,\n          },\n        ],\n      }\n      const order = createSellOrder(signerAddress, asset.expirationTime, [orderItem], asset.asset_contract.tokenType)\n      try {\n        const prevOrderId = await getOrderId(asset.asset_contract.address, asset.tokenId)\n        await signOrderData(provider, order)\n        const payload: OrderPayload = {\n          order: encodeOrder(order),\n          isBundle: false,\n          bundleName: '',\n          bundleDesc: '',\n          orderIds: prevOrderId ? [prevOrderId] : [],\n          changePrice: Boolean(prevOrderId),\n          isCollection: false,\n        }\n        setStatus(ListingStatus.PENDING)\n        // call server api\n        const resp = await newX2Y2Order(payload)\n        resp ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n        return resp\n      } catch (error) {\n        if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n        else setStatus(ListingStatus.FAILED)\n        return false\n      }\n    }\n    default:\n      return false\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}