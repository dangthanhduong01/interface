{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/nft/components/profile/view/ViewMyNftsAsset.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { useTrace } from '@uniswap/analytics';\nimport { sendAnalyticsEvent } from '@uniswap/analytics';\nimport { NFTEventName } from '@uniswap/analytics-events';\nimport { NftCard } from 'nft/components/card';\nimport { detailsHref } from 'nft/components/card/utils';\nimport { VerifiedIcon } from 'nft/components/icons';\nimport { useBag, useIsMobile, useSellAsset } from 'nft/hooks';\nimport { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewMyNftsAsset = _ref => {\n  _s();\n  let {\n    asset,\n    mediaShouldBePlaying,\n    setCurrentTokenPlayingMedia,\n    hideDetails\n  } = _ref;\n  const sellAssets = useSellAsset(state => state.sellAssets);\n  const selectSellAsset = useSellAsset(state => state.selectSellAsset);\n  const removeSellAsset = useSellAsset(state => state.removeSellAsset);\n  const cartExpanded = useBag(state => state.bagExpanded);\n  const toggleCart = useBag(state => state.toggleBag);\n  const isMobile = useIsMobile();\n  const navigate = useNavigate();\n  const isSelected = useMemo(() => {\n    return sellAssets.some(item => item.tokenId === asset.tokenId && item.asset_contract.address === asset.asset_contract.address);\n  }, [asset, sellAssets]);\n  const trace = useTrace();\n  const toggleSelect = () => handleSelect(isSelected);\n  const handleSelect = removeAsset => {\n    if (removeAsset) {\n      removeSellAsset(asset);\n    } else {\n      selectSellAsset(asset);\n      sendAnalyticsEvent(NFTEventName.NFT_SELL_ITEM_ADDED, {\n        collection_address: asset.asset_contract.address,\n        token_id: asset.tokenId,\n        ...trace\n      });\n    }\n    if (!cartExpanded && !sellAssets.find(x => x.tokenId === asset.tokenId && x.asset_contract.address === asset.asset_contract.address) && !isMobile) toggleCart();\n  };\n  const isDisabled = asset.susFlag;\n  const display = useMemo(() => {\n    var _asset$name;\n    return {\n      primaryInfo: !!asset.asset_contract.name && asset.asset_contract.name,\n      primaryInfoIcon: asset.collectionIsVerified && /*#__PURE__*/_jsxDEV(VerifiedIcon, {\n        height: \"16px\",\n        width: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 54\n      }, this),\n      secondaryInfo: asset.name || asset.tokenId ? (_asset$name = asset.name) !== null && _asset$name !== void 0 ? _asset$name : `#${asset.tokenId}` : null,\n      selectedInfo: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Remove from bag\"\n      }, void 0, false, void 0, this),\n      notSelectedInfo: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"List for sale\"\n      }, void 0, false, void 0, this),\n      disabledInfo: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Unavailable for listing\"\n      }, void 0, false, void 0, this)\n    };\n  }, [asset.asset_contract.name, asset.collectionIsVerified, asset.name, asset.tokenId]);\n  return /*#__PURE__*/_jsxDEV(NftCard, {\n    asset: asset,\n    display: display,\n    isSelected: isSelected,\n    isDisabled: Boolean(isDisabled),\n    selectAsset: () => handleSelect(false),\n    unselectAsset: () => handleSelect(true),\n    onButtonClick: toggleSelect,\n    onCardClick: () => {\n      if (!hideDetails) navigate(detailsHref(asset));\n    },\n    mediaShouldBePlaying: mediaShouldBePlaying,\n    setCurrentTokenPlayingMedia: setCurrentTokenPlayingMedia,\n    testId: \"nft-profile-asset\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewMyNftsAsset, \"iVgc+HK8+LPgTUYC7p56p7wOVvs=\", false, function () {\n  return [useSellAsset, useSellAsset, useSellAsset, useBag, useBag, useIsMobile, useNavigate, useTrace];\n});\n_c = ViewMyNftsAsset;\nvar _c;\n$RefreshReg$(_c, \"ViewMyNftsAsset\");","map":{"version":3,"names":["useTrace","sendAnalyticsEvent","NFTEventName","NftCard","detailsHref","VerifiedIcon","useBag","useIsMobile","useSellAsset","useMemo","useNavigate","ViewMyNftsAsset","asset","mediaShouldBePlaying","setCurrentTokenPlayingMedia","hideDetails","sellAssets","state","selectSellAsset","removeSellAsset","cartExpanded","bagExpanded","toggleCart","toggleBag","isMobile","navigate","isSelected","some","item","tokenId","asset_contract","address","trace","toggleSelect","handleSelect","removeAsset","NFT_SELL_ITEM_ADDED","collection_address","token_id","find","x","isDisabled","susFlag","display","primaryInfo","name","primaryInfoIcon","collectionIsVerified","secondaryInfo","selectedInfo","notSelectedInfo","disabledInfo","Boolean"],"sources":["/home/diep/freelance/interface/src/nft/components/profile/view/ViewMyNftsAsset.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { useTrace } from '@uniswap/analytics'\nimport { sendAnalyticsEvent } from '@uniswap/analytics'\nimport { NFTEventName } from '@uniswap/analytics-events'\nimport { NftCard, NftCardDisplayProps } from 'nft/components/card'\nimport { detailsHref } from 'nft/components/card/utils'\nimport { VerifiedIcon } from 'nft/components/icons'\nimport { useBag, useIsMobile, useSellAsset } from 'nft/hooks'\nimport { WalletAsset } from 'nft/types'\nimport { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ninterface ViewMyNftsAssetProps {\n  asset: WalletAsset\n  mediaShouldBePlaying: boolean\n  setCurrentTokenPlayingMedia: (tokenId: string | undefined) => void\n  hideDetails: boolean\n}\n\nexport const ViewMyNftsAsset = ({\n  asset,\n  mediaShouldBePlaying,\n  setCurrentTokenPlayingMedia,\n  hideDetails,\n}: ViewMyNftsAssetProps) => {\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const selectSellAsset = useSellAsset((state) => state.selectSellAsset)\n  const removeSellAsset = useSellAsset((state) => state.removeSellAsset)\n  const cartExpanded = useBag((state) => state.bagExpanded)\n  const toggleCart = useBag((state) => state.toggleBag)\n  const isMobile = useIsMobile()\n  const navigate = useNavigate()\n\n  const isSelected = useMemo(() => {\n    return sellAssets.some(\n      (item) => item.tokenId === asset.tokenId && item.asset_contract.address === asset.asset_contract.address\n    )\n  }, [asset, sellAssets])\n\n  const trace = useTrace()\n  const toggleSelect = () => handleSelect(isSelected)\n\n  const handleSelect = (removeAsset: boolean) => {\n    if (removeAsset) {\n      removeSellAsset(asset)\n    } else {\n      selectSellAsset(asset)\n      sendAnalyticsEvent(NFTEventName.NFT_SELL_ITEM_ADDED, {\n        collection_address: asset.asset_contract.address,\n        token_id: asset.tokenId,\n        ...trace,\n      })\n    }\n    if (\n      !cartExpanded &&\n      !sellAssets.find(\n        (x) => x.tokenId === asset.tokenId && x.asset_contract.address === asset.asset_contract.address\n      ) &&\n      !isMobile\n    )\n      toggleCart()\n  }\n\n  const isDisabled = asset.susFlag\n\n  const display: NftCardDisplayProps = useMemo(() => {\n    return {\n      primaryInfo: !!asset.asset_contract.name && asset.asset_contract.name,\n      primaryInfoIcon: asset.collectionIsVerified && <VerifiedIcon height=\"16px\" width=\"16px\" />,\n      secondaryInfo: asset.name || asset.tokenId ? asset.name ?? `#${asset.tokenId}` : null,\n      selectedInfo: <Trans>Remove from bag</Trans>,\n      notSelectedInfo: <Trans>List for sale</Trans>,\n      disabledInfo: <Trans>Unavailable for listing</Trans>,\n    }\n  }, [asset.asset_contract.name, asset.collectionIsVerified, asset.name, asset.tokenId])\n\n  return (\n    <NftCard\n      asset={asset}\n      display={display}\n      isSelected={isSelected}\n      isDisabled={Boolean(isDisabled)}\n      selectAsset={() => handleSelect(false)}\n      unselectAsset={() => handleSelect(true)}\n      onButtonClick={toggleSelect}\n      onCardClick={() => {\n        if (!hideDetails) navigate(detailsHref(asset))\n      }}\n      mediaShouldBePlaying={mediaShouldBePlaying}\n      setCurrentTokenPlayingMedia={setCurrentTokenPlayingMedia}\n      testId=\"nft-profile-asset\"\n    />\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}