{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/lib/hooks/useBlockNumber.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport useIsWindowVisible from 'hooks/useIsWindowVisible';\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MISSING_PROVIDER = Symbol();\nconst BlockNumberContext = /*#__PURE__*/createContext(MISSING_PROVIDER);\n_c = BlockNumberContext;\nfunction useBlockNumberContext() {\n  _s();\n  const blockNumber = useContext(BlockNumberContext);\n  if (blockNumber === MISSING_PROVIDER) {\n    throw new Error('BlockNumber hooks must be wrapped in a <BlockNumberProvider>');\n  }\n  return blockNumber;\n}\n\n/** Requires that BlockUpdater be installed in the DOM tree. */\n_s(useBlockNumberContext, \"xXRP/yOmNWd62ZzrDDVJrlTEItY=\");\nexport default function useBlockNumber() {\n  _s2();\n  return useBlockNumberContext().value;\n}\n_s2(useBlockNumber, \"Gr/YKvNmPvifEksV7PhNjI44rnM=\", false, function () {\n  return [useBlockNumberContext];\n});\nexport function useFastForwardBlockNumber() {\n  _s3();\n  return useBlockNumberContext().fastForward;\n}\n_s3(useFastForwardBlockNumber, \"Gr/YKvNmPvifEksV7PhNjI44rnM=\", false, function () {\n  return [useBlockNumberContext];\n});\nexport function BlockNumberProvider(_ref) {\n  _s4();\n  let {\n    children\n  } = _ref;\n  const {\n    chainId: activeChainId,\n    provider\n  } = useWeb3React();\n  const [{\n    chainId,\n    block\n  }, setChainBlock] = useState({\n    chainId: activeChainId\n  });\n  const onBlock = useCallback(block => {\n    setChainBlock(chainBlock => {\n      if (chainBlock.chainId === activeChainId) {\n        if (!chainBlock.block || chainBlock.block < block) {\n          return {\n            chainId: activeChainId,\n            block\n          };\n        }\n      }\n      return chainBlock;\n    });\n  }, [activeChainId, setChainBlock]);\n  const windowVisible = useIsWindowVisible();\n  useEffect(() => {\n    let stale = false;\n    if (provider && activeChainId && windowVisible) {\n      // If chainId hasn't changed, don't clear the block. This prevents re-fetching still valid data.\n      setChainBlock(chainBlock => chainBlock.chainId === activeChainId ? chainBlock : {\n        chainId: activeChainId\n      });\n      provider.getBlockNumber().then(block => {\n        if (!stale) onBlock(block);\n      }).catch(error => {\n        console.error(`Failed to get block number for chainId ${activeChainId}`, error);\n      });\n      provider.on('block', onBlock);\n      return () => {\n        stale = true;\n        provider.removeListener('block', onBlock);\n      };\n    }\n    return void 0;\n  }, [activeChainId, provider, onBlock, setChainBlock, windowVisible]);\n  const value = useMemo(() => ({\n    value: chainId === activeChainId ? block : undefined,\n    fastForward: update => {\n      if (block && update > block) {\n        setChainBlock({\n          chainId: activeChainId,\n          block: update\n        });\n      }\n    }\n  }), [activeChainId, block, chainId]);\n  return /*#__PURE__*/_jsxDEV(BlockNumberContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n}\n_s4(BlockNumberProvider, \"bEx073ibFBH/8aGl7n/ptWE9Ubo=\", false, function () {\n  return [useWeb3React, useIsWindowVisible];\n});\n_c2 = BlockNumberProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"BlockNumberContext\");\n$RefreshReg$(_c2, \"BlockNumberProvider\");","map":{"version":3,"names":["useWeb3React","useIsWindowVisible","createContext","useCallback","useContext","useEffect","useMemo","useState","MISSING_PROVIDER","Symbol","BlockNumberContext","useBlockNumberContext","blockNumber","Error","useBlockNumber","value","useFastForwardBlockNumber","fastForward","BlockNumberProvider","children","chainId","activeChainId","provider","block","setChainBlock","onBlock","chainBlock","windowVisible","stale","getBlockNumber","then","catch","error","console","on","removeListener","undefined","update"],"sources":["/home/diep/freelance/interface/src/lib/hooks/useBlockNumber.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { createContext, ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react'\n\nconst MISSING_PROVIDER = Symbol()\nconst BlockNumberContext = createContext<\n  | {\n      value?: number\n      fastForward(block: number): void\n    }\n  | typeof MISSING_PROVIDER\n>(MISSING_PROVIDER)\n\nfunction useBlockNumberContext() {\n  const blockNumber = useContext(BlockNumberContext)\n  if (blockNumber === MISSING_PROVIDER) {\n    throw new Error('BlockNumber hooks must be wrapped in a <BlockNumberProvider>')\n  }\n  return blockNumber\n}\n\n/** Requires that BlockUpdater be installed in the DOM tree. */\nexport default function useBlockNumber(): number | undefined {\n  return useBlockNumberContext().value\n}\n\nexport function useFastForwardBlockNumber(): (block: number) => void {\n  return useBlockNumberContext().fastForward\n}\n\nexport function BlockNumberProvider({ children }: { children: ReactNode }) {\n  const { chainId: activeChainId, provider } = useWeb3React()\n  const [{ chainId, block }, setChainBlock] = useState<{ chainId?: number; block?: number }>({ chainId: activeChainId })\n\n  const onBlock = useCallback(\n    (block: number) => {\n      setChainBlock((chainBlock) => {\n        if (chainBlock.chainId === activeChainId) {\n          if (!chainBlock.block || chainBlock.block < block) {\n            return { chainId: activeChainId, block }\n          }\n        }\n        return chainBlock\n      })\n    },\n    [activeChainId, setChainBlock]\n  )\n\n  const windowVisible = useIsWindowVisible()\n  useEffect(() => {\n    let stale = false\n\n    if (provider && activeChainId && windowVisible) {\n      // If chainId hasn't changed, don't clear the block. This prevents re-fetching still valid data.\n      setChainBlock((chainBlock) => (chainBlock.chainId === activeChainId ? chainBlock : { chainId: activeChainId }))\n\n      provider\n        .getBlockNumber()\n        .then((block) => {\n          if (!stale) onBlock(block)\n        })\n        .catch((error) => {\n          console.error(`Failed to get block number for chainId ${activeChainId}`, error)\n        })\n\n      provider.on('block', onBlock)\n      return () => {\n        stale = true\n        provider.removeListener('block', onBlock)\n      }\n    }\n\n    return void 0\n  }, [activeChainId, provider, onBlock, setChainBlock, windowVisible])\n\n  const value = useMemo(\n    () => ({\n      value: chainId === activeChainId ? block : undefined,\n      fastForward: (update: number) => {\n        if (block && update > block) {\n          setChainBlock({ chainId: activeChainId, block: update })\n        }\n      },\n    }),\n    [activeChainId, block, chainId]\n  )\n  return <BlockNumberContext.Provider value={value}>{children}</BlockNumberContext.Provider>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}