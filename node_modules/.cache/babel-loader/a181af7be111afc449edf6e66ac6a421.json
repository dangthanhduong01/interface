{"ast":null,"code":"import { dynamicRequire } from '@sentry/utils';\nconst lazyLoadedNodePerformanceMonitoringIntegrations = [() => {\n  const integration = dynamicRequire(module, './apollo');\n  return new integration.Apollo();\n}, () => {\n  const integration = dynamicRequire(module, './apollo');\n  return new integration.Apollo({\n    useNestjs: true\n  });\n}, () => {\n  const integration = dynamicRequire(module, './graphql');\n  return new integration.GraphQL();\n}, () => {\n  const integration = dynamicRequire(module, './mongo');\n  return new integration.Mongo();\n}, () => {\n  const integration = dynamicRequire(module, './mongo');\n  return new integration.Mongo({\n    mongoose: true\n  });\n}, () => {\n  const integration = dynamicRequire(module, './mysql');\n  return new integration.Mysql();\n}, () => {\n  const integration = dynamicRequire(module, './postgres');\n  return new integration.Postgres();\n}];\nexport { lazyLoadedNodePerformanceMonitoringIntegrations };","map":{"version":3,"sources":["../../../../src/node/integrations/lazy.ts"],"names":[],"mappings":";AAGA,MAAA,+CAAA,GAAA,CACA,MAAA;EACA,MAAA,WAAA,GAAA,cAAA,CAAA,MAAA,EAAA,UAAA,CAAA;EAGA,OAAA,IAAA,WAAA,CAAA,MAAA,EAAA;AACA,CAAA,EACA,MAAA;EACA,MAAA,WAAA,GAAA,cAAA,CAAA,MAAA,EAAA,UAAA,CAAA;EAGA,OAAA,IAAA,WAAA,CAAA,MAAA,CAAA;IAAA,SAAA,EAAA;EAAA,CAAA,CAAA;AACA,CAAA,EACA,MAAA;EACA,MAAA,WAAA,GAAA,cAAA,CAAA,MAAA,EAAA,WAAA,CAAA;EAGA,OAAA,IAAA,WAAA,CAAA,OAAA,EAAA;AACA,CAAA,EACA,MAAA;EACA,MAAA,WAAA,GAAA,cAAA,CAAA,MAAA,EAAA,SAAA,CAAA;EAGA,OAAA,IAAA,WAAA,CAAA,KAAA,EAAA;AACA,CAAA,EACA,MAAA;EACA,MAAA,WAAA,GAAA,cAAA,CAAA,MAAA,EAAA,SAAA,CAAA;EAGA,OAAA,IAAA,WAAA,CAAA,KAAA,CAAA;IAAA,QAAA,EAAA;EAAA,CAAA,CAAA;AACA,CAAA,EACA,MAAA;EACA,MAAA,WAAA,GAAA,cAAA,CAAA,MAAA,EAAA,SAAA,CAAA;EAGA,OAAA,IAAA,WAAA,CAAA,KAAA,EAAA;AACA,CAAA,EACA,MAAA;EACA,MAAA,WAAA,GAAA,cAAA,CAAA,MAAA,EAAA,YAAA,CAAA;EAGA,OAAA,IAAA,WAAA,CAAA,QAAA,EAAA;AACA,CAAA,CACA","sourcesContent":["import type { Integration, IntegrationClass } from '@sentry/types';\nimport { dynamicRequire } from '@sentry/utils';\n\nexport const lazyLoadedNodePerformanceMonitoringIntegrations: (() => Integration)[] = [\n  () => {\n    const integration = dynamicRequire(module, './apollo') as {\n      Apollo: IntegrationClass<Integration>;\n    };\n    return new integration.Apollo();\n  },\n  () => {\n    const integration = dynamicRequire(module, './apollo') as {\n      Apollo: IntegrationClass<Integration>;\n    };\n    return new integration.Apollo({ useNestjs: true });\n  },\n  () => {\n    const integration = dynamicRequire(module, './graphql') as {\n      GraphQL: IntegrationClass<Integration>;\n    };\n    return new integration.GraphQL();\n  },\n  () => {\n    const integration = dynamicRequire(module, './mongo') as {\n      Mongo: IntegrationClass<Integration>;\n    };\n    return new integration.Mongo();\n  },\n  () => {\n    const integration = dynamicRequire(module, './mongo') as {\n      Mongo: IntegrationClass<Integration>;\n    };\n    return new integration.Mongo({ mongoose: true });\n  },\n  () => {\n    const integration = dynamicRequire(module, './mysql') as {\n      Mysql: IntegrationClass<Integration>;\n    };\n    return new integration.Mysql();\n  },\n  () => {\n    const integration = dynamicRequire(module, './postgres') as {\n      Postgres: IntegrationClass<Integration>;\n    };\n    return new integration.Postgres();\n  },\n];\n"]},"metadata":{},"sourceType":"module"}