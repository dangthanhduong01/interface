{"ast":null,"code":"import { useTheme as _useTheme } from \"styled-components\";\nvar _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { computeRealizedPriceImpact, getPriceImpactWarning } from 'utils/prices';\nexport function usePriceImpact(trade) {\n  _s();\n  const theme = _useTheme();\n  return useMemo(() => {\n    const marketPriceImpact = trade ? computeRealizedPriceImpact(trade) : undefined;\n    const priceImpactWarning = marketPriceImpact ? getPriceImpactWarning(marketPriceImpact) : undefined;\n    const warningColor = priceImpactWarning === 'error' ? theme.accentCritical : priceImpactWarning === 'warning' ? theme.accentWarning : undefined;\n    return marketPriceImpact && priceImpactWarning && warningColor ? {\n      priceImpactSeverity: {\n        type: priceImpactWarning,\n        color: warningColor\n      },\n      displayPercentage: () => toHumanReadablePercent(marketPriceImpact)\n    } : undefined;\n  }, [theme.accentCritical, theme.accentWarning, trade]);\n}\n_s(usePriceImpact, \"2uZ8kHKqDtVGU1DmJpWBNujTeGE=\", false, function () {\n  return [_useTheme];\n});\nfunction toHumanReadablePercent(priceImpact) {\n  var _priceImpact$multiply;\n  const sign = priceImpact.lessThan(0) ? '+' : '';\n  const exactFloat = Number(priceImpact.numerator) / Number(priceImpact.denominator) * 100;\n  if (exactFloat < 0.005) {\n    return '0.00%';\n  }\n  const number = parseFloat((_priceImpact$multiply = priceImpact.multiply(-1)) === null || _priceImpact$multiply === void 0 ? void 0 : _priceImpact$multiply.toFixed(2));\n  return `${sign}${number}%`;\n}","map":{"version":3,"names":["useMemo","computeRealizedPriceImpact","getPriceImpactWarning","usePriceImpact","trade","theme","useTheme","marketPriceImpact","undefined","priceImpactWarning","warningColor","accentCritical","accentWarning","priceImpactSeverity","type","color","displayPercentage","toHumanReadablePercent","priceImpact","sign","lessThan","exactFloat","Number","numerator","denominator","number","parseFloat","multiply","toFixed"],"sources":["/home/diep/freelance/interface/src/nft/hooks/usePriceImpact.ts"],"sourcesContent":["import { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { InterfaceTrade } from 'state/routing/types'\nimport { useTheme } from 'styled-components/macro'\nimport { computeRealizedPriceImpact, getPriceImpactWarning } from 'utils/prices'\n\nexport interface PriceImpact {\n  priceImpactSeverity: PriceImpactSeverity\n  displayPercentage(): string\n}\n\ninterface PriceImpactSeverity {\n  type: 'warning' | 'error'\n  color: string\n}\n\nexport function usePriceImpact(trade?: InterfaceTrade<Currency, Currency, TradeType>): PriceImpact | undefined {\n  const theme = useTheme()\n\n  return useMemo(() => {\n    const marketPriceImpact = trade ? computeRealizedPriceImpact(trade) : undefined\n    const priceImpactWarning = marketPriceImpact ? getPriceImpactWarning(marketPriceImpact) : undefined\n    const warningColor =\n      priceImpactWarning === 'error'\n        ? theme.accentCritical\n        : priceImpactWarning === 'warning'\n        ? theme.accentWarning\n        : undefined\n\n    return marketPriceImpact && priceImpactWarning && warningColor\n      ? {\n          priceImpactSeverity: {\n            type: priceImpactWarning,\n            color: warningColor,\n          },\n          displayPercentage: () => toHumanReadablePercent(marketPriceImpact),\n        }\n      : undefined\n  }, [theme.accentCritical, theme.accentWarning, trade])\n}\n\nfunction toHumanReadablePercent(priceImpact: Percent): string {\n  const sign = priceImpact.lessThan(0) ? '+' : ''\n  const exactFloat = (Number(priceImpact.numerator) / Number(priceImpact.denominator)) * 100\n  if (exactFloat < 0.005) {\n    return '0.00%'\n  }\n  const number = parseFloat(priceImpact.multiply(-1)?.toFixed(2))\n  return `${sign}${number}%`\n}\n"],"mappings":";;AACA,SAASA,OAAO,QAAQ,OAAO;AAG/B,SAASC,0BAA0B,EAAEC,qBAAqB,QAAQ,cAAc;AAYhF,OAAO,SAASC,cAAc,CAACC,KAAqD,EAA2B;EAAA;EAC7G,MAAMC,KAAK,GAAGC,SAAQ,EAAE;EAExB,OAAON,OAAO,CAAC,MAAM;IACnB,MAAMO,iBAAiB,GAAGH,KAAK,GAAGH,0BAA0B,CAACG,KAAK,CAAC,GAAGI,SAAS;IAC/E,MAAMC,kBAAkB,GAAGF,iBAAiB,GAAGL,qBAAqB,CAACK,iBAAiB,CAAC,GAAGC,SAAS;IACnG,MAAME,YAAY,GAChBD,kBAAkB,KAAK,OAAO,GAC1BJ,KAAK,CAACM,cAAc,GACpBF,kBAAkB,KAAK,SAAS,GAChCJ,KAAK,CAACO,aAAa,GACnBJ,SAAS;IAEf,OAAOD,iBAAiB,IAAIE,kBAAkB,IAAIC,YAAY,GAC1D;MACEG,mBAAmB,EAAE;QACnBC,IAAI,EAAEL,kBAAkB;QACxBM,KAAK,EAAEL;MACT,CAAC;MACDM,iBAAiB,EAAE,MAAMC,sBAAsB,CAACV,iBAAiB;IACnE,CAAC,GACDC,SAAS;EACf,CAAC,EAAE,CAACH,KAAK,CAACM,cAAc,EAAEN,KAAK,CAACO,aAAa,EAAER,KAAK,CAAC,CAAC;AACxD;AAAC,GAvBeD,cAAc;EAAA,QACdG,SAAQ;AAAA;AAwBxB,SAASW,sBAAsB,CAACC,WAAoB,EAAU;EAAA;EAC5D,MAAMC,IAAI,GAAGD,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;EAC/C,MAAMC,UAAU,GAAIC,MAAM,CAACJ,WAAW,CAACK,SAAS,CAAC,GAAGD,MAAM,CAACJ,WAAW,CAACM,WAAW,CAAC,GAAI,GAAG;EAC1F,IAAIH,UAAU,GAAG,KAAK,EAAE;IACtB,OAAO,OAAO;EAChB;EACA,MAAMI,MAAM,GAAGC,UAAU,0BAACR,WAAW,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC,0DAAxB,sBAA0BC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/D,OAAQ,GAAET,IAAK,GAAEM,MAAO,GAAE;AAC5B"},"metadata":{},"sourceType":"module"}