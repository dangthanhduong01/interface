{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/nft/components/profile/list/ListPage.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { sendAnalyticsEvent, useTrace } from '@uniswap/analytics';\nimport { InterfaceModalName, NFTEventName } from '@uniswap/analytics-events';\nimport { formatCurrencyAmount, NumberType } from '@uniswap/conedison/format';\nimport { useWeb3React } from '@web3-react/core';\nimport Column from 'components/Column';\nimport Row from 'components/Row';\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice';\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency';\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount';\nimport { ListingButton } from 'nft/components/profile/list/ListingButton';\nimport { approveCollectionRow, getTotalEthValue, useSubscribeListingState, verifyStatus } from 'nft/components/profile/list/utils';\nimport { useIsMobile, useNFTList, useProfilePageState, useSellAsset } from 'nft/hooks';\nimport { LIST_PAGE_MARGIN, LIST_PAGE_MARGIN_MOBILE } from 'nft/pages/profile/shared';\nimport { looksRareNonceFetcher } from 'nft/queries';\nimport { ProfilePageStateType } from 'nft/types';\nimport { formatEth } from 'nft/utils';\nimport { ListingMarkets } from 'nft/utils/listNfts';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\nimport { ArrowLeft } from 'react-feather';\nimport { BREAKPOINTS, ThemedText } from 'theme';\nimport { Z_INDEX } from 'theme/zIndex';\nimport { shallow } from 'zustand/shallow';\nimport { ListModal } from './Modal/ListModal';\nimport { NFTListingsGrid } from './NFTListingsGrid';\nimport { SelectMarketplacesDropdown } from './SelectMarketplacesDropdown';\nimport { SetDurationModal } from './SetDurationModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListingHeader = _styled(Column).withConfig({\n  displayName: \"ListPage__ListingHeader\",\n  componentId: \"sc-1th7sa1-0\"\n})([\"gap:16px;margin-top:36px;@media screen and (min-width:\", \"px){gap:4px;}\"], BREAKPOINTS.xs);\nconst ArrowContainer = _styled.div.withConfig({\n  displayName: \"ListPage__ArrowContainer\",\n  componentId: \"sc-1th7sa1-1\"\n})([\"display:flex;align-items:center;justify-content:center;margin-right:4px;@media screen and (min-width:\", \"px){height:40px;width:40px;}\"], BREAKPOINTS.sm);\nconst BackArrow = _styled(ArrowLeft).withConfig({\n  displayName: \"ListPage__BackArrow\",\n  componentId: \"sc-1th7sa1-2\"\n})([\"height:16px;width:16px;cursor:pointer;color:\", \";@media screen and (min-width:\", \"px){height:20px;width:20px;}\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.textSecondary;\n}, BREAKPOINTS.sm);\nconst TitleWrapper = _styled(Row).withConfig({\n  displayName: \"ListPage__TitleWrapper\",\n  componentId: \"sc-1th7sa1-3\"\n})([\"gap:4px;margin-bottom:12px;white-space:nowrap;width:min-content;font-weight:500;font-size:20px;line-height:28px;@media screen and (min-width:\", \"px){margin-bottom:0px;font-weight:500;font-size:28px;line-height:36px;}\"], BREAKPOINTS.xs);\nconst ButtonsWrapper = _styled(Row).withConfig({\n  displayName: \"ListPage__ButtonsWrapper\",\n  componentId: \"sc-1th7sa1-4\"\n})([\"gap:12px;width:min-content;\"]);\nconst MarketWrap = _styled.section.withConfig({\n  displayName: \"ListPage__MarketWrap\",\n  componentId: \"sc-1th7sa1-5\"\n})([\"gap:48px;margin:0px auto;width:100%;max-width:1200px;\"]);\nconst ListingHeaderRow = _styled(Row).withConfig({\n  displayName: \"ListPage__ListingHeaderRow\",\n  componentId: \"sc-1th7sa1-6\"\n})([\"align-items:center;justify-content:space-between;flex-wrap:wrap;@media screen and (min-width:\", \"px){padding-left:40px;}\"], BREAKPOINTS.sm);\nconst GridWrapper = _styled.div.withConfig({\n  displayName: \"ListPage__GridWrapper\",\n  componentId: \"sc-1th7sa1-7\"\n})([\"margin-top:24px;margin-bottom:48px;\"]);\nconst FloatingConfirmationBar = _styled(Row).withConfig({\n  displayName: \"ListPage__FloatingConfirmationBar\",\n  componentId: \"sc-1th7sa1-8\"\n})([\"padding:12px 12px 12px 32px;border:1px solid;border-color:\", \";border-radius:20px;white-space:nowrap;justify-content:space-between;background:\", \";position:fixed;bottom:32px;width:calc(100vw - \", \"px);left:50%;transform:translateX(-50%);max-width:\", \";z-index:\", \";box-shadow:\", \";@media screen and (max-width:\", \"px){bottom:68px;}@media screen and (max-width:\", \"px){width:calc(100% - \", \"px);padding:8px 8px 8px 16px;}\"], _ref2 => {\n  let {\n    theme,\n    issues\n  } = _ref2;\n  return issues ? theme.backgroundOutline : theme.accentAction;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.backgroundSurface;\n}, LIST_PAGE_MARGIN * 2, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.maxWidth;\n}, Z_INDEX.under_dropdown, _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.shallowShadow;\n}, BREAKPOINTS.lg, BREAKPOINTS.sm, LIST_PAGE_MARGIN_MOBILE * 2);\nconst Overlay = _styled.div.withConfig({\n  displayName: \"ListPage__Overlay\",\n  componentId: \"sc-1th7sa1-9\"\n})([\"position:fixed;bottom:0px;height:158px;width:100vw;background:\", \";\"], _ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return `linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, ${theme.backgroundBackdrop} 100%)`;\n});\nconst UsdValue = _styled(ThemedText.SubHeader).withConfig({\n  displayName: \"ListPage__UsdValue\",\n  componentId: \"sc-1th7sa1-10\"\n})([\"line-height:24px;color:\", \";display:none;@media screen and (min-width:\", \"px){display:flex;}\"], _ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.textSecondary;\n}, BREAKPOINTS.lg);\nconst ProceedsAndButtonWrapper = _styled(Row).withConfig({\n  displayName: \"ListPage__ProceedsAndButtonWrapper\",\n  componentId: \"sc-1th7sa1-11\"\n})([\"width:min-content;gap:40px;@media screen and (max-width:\", \"px){gap:20px;}\"], BREAKPOINTS.sm);\nconst ProceedsWrapper = _styled(Row).withConfig({\n  displayName: \"ListPage__ProceedsWrapper\",\n  componentId: \"sc-1th7sa1-12\"\n})([\"width:min-content;gap:16px;\"]);\nconst EthValueWrapper = _styled.span.withConfig({\n  displayName: \"ListPage__EthValueWrapper\",\n  componentId: \"sc-1th7sa1-13\"\n})([\"font-weight:500;font-size:20px;line-height:28px;color:\", \";@media screen and (max-width:\", \"px){font-size:16px;line-height:24px;}\"], _ref8 => {\n  let {\n    theme,\n    totalEthListingValue\n  } = _ref8;\n  return totalEthListingValue ? theme.textPrimary : theme.textSecondary;\n}, BREAKPOINTS.sm);\nexport const ListPage = () => {\n  _s();\n  const {\n    setProfilePageState: setSellPageState\n  } = useProfilePageState();\n  const {\n    provider\n  } = useWeb3React();\n  const isMobile = useIsMobile();\n  const trace = useTrace({\n    modal: InterfaceModalName.NFT_LISTING\n  });\n  const {\n    setGlobalMarketplaces,\n    sellAssets,\n    issues\n  } = useSellAsset(_ref9 => {\n    let {\n      setGlobalMarketplaces,\n      sellAssets,\n      issues\n    } = _ref9;\n    return {\n      setGlobalMarketplaces,\n      sellAssets,\n      issues\n    };\n  }, shallow);\n  const {\n    listings,\n    collectionsRequiringApproval,\n    setLooksRareNonce,\n    setCollectionStatusAndCallback\n  } = useNFTList(_ref10 => {\n    let {\n      listings,\n      collectionsRequiringApproval,\n      setLooksRareNonce,\n      setCollectionStatusAndCallback\n    } = _ref10;\n    return {\n      listings,\n      collectionsRequiringApproval,\n      setLooksRareNonce,\n      setCollectionStatusAndCallback\n    };\n  }, shallow);\n  const totalEthListingValue = useMemo(() => getTotalEthValue(sellAssets), [sellAssets]);\n  const nativeCurrency = useNativeCurrency();\n  const parsedAmount = tryParseCurrencyAmount(totalEthListingValue.toString(), nativeCurrency);\n  const usdcValue = useStablecoinValue(parsedAmount);\n  const usdcAmount = formatCurrencyAmount(usdcValue, NumberType.FiatTokenPrice);\n  const [showListModal, toggleShowListModal] = useReducer(s => !s, false);\n  const [selectedMarkets, setSelectedMarkets] = useState([ListingMarkets[0]]); // default marketplace: x2y2\n  const signer = provider === null || provider === void 0 ? void 0 : provider.getSigner();\n\n  // instantiate listings and collections to approve when users modify input data\n  useSubscribeListingState();\n  useEffect(() => {\n    setGlobalMarketplaces(selectedMarkets);\n  }, [selectedMarkets, setGlobalMarketplaces]);\n  const startListingEventProperties = {\n    collection_addresses: sellAssets.map(asset => asset.asset_contract.address),\n    token_ids: sellAssets.map(asset => asset.tokenId),\n    marketplaces: Array.from(new Set(listings.map(asset => asset.marketplace.name))),\n    list_quantity: listings.length,\n    usd_value: usdcAmount,\n    ...trace\n  };\n  const startListingFlow = async () => {\n    if (!signer) return;\n    sendAnalyticsEvent(NFTEventName.NFT_SELL_START_LISTING, {\n      ...startListingEventProperties\n    });\n    const signerAddress = await signer.getAddress();\n    const nonce = await looksRareNonceFetcher(signerAddress);\n    setLooksRareNonce(nonce !== null && nonce !== void 0 ? nonce : 0);\n\n    // for all unique collection, marketplace combos -> approve collections\n    for (const collectionRow of collectionsRequiringApproval) {\n      verifyStatus(collectionRow.status) && (isMobile ? await approveCollectionRow(collectionRow, signer, setCollectionStatusAndCallback) : approveCollectionRow(collectionRow, signer, setCollectionStatusAndCallback));\n    }\n  };\n  const showModalAndStartListing = () => {\n    toggleShowListModal();\n    startListingFlow();\n  };\n  const BannerText = isMobile ? /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n    lineHeight: \"24px\",\n    children: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Receive\"\n    }, void 0, false, void 0, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ThemedText.HeadlineSmall, {\n    lineHeight: \"28px\",\n    children: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"You receive\"\n    }, void 0, false, void 0, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Column, {\n    children: [/*#__PURE__*/_jsxDEV(MarketWrap, {\n      children: [/*#__PURE__*/_jsxDEV(ListingHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(ArrowContainer, {\n            children: /*#__PURE__*/_jsxDEV(BackArrow, {\n              onClick: () => setSellPageState(ProfilePageStateType.VIEWING)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.BodySmall, {\n            lineHeight: \"20px\",\n            color: \"textSecondary\",\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"My NFTs\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListingHeaderRow, {\n          children: [/*#__PURE__*/_jsxDEV(TitleWrapper, {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Sell NFTs\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonsWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(SelectMarketplacesDropdown, {\n              setSelectedMarkets: setSelectedMarkets,\n              selectedMarkets: selectedMarkets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SetDurationModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridWrapper, {\n        children: /*#__PURE__*/_jsxDEV(NFTListingsGrid, {\n          selectedMarkets: selectedMarkets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FloatingConfirmationBar, {\n      issues: !!issues,\n      children: [BannerText, /*#__PURE__*/_jsxDEV(ProceedsAndButtonWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ProceedsWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(EthValueWrapper, {\n            totalEthListingValue: !!totalEthListingValue,\n            children: [totalEthListingValue > 0 ? formatEth(totalEthListingValue) : '-', \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), !!usdcValue && /*#__PURE__*/_jsxDEV(UsdValue, {\n            children: usdcAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListingButton, {\n          onClick: showModalAndStartListing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), showListModal && /*#__PURE__*/_jsxDEV(ListModal, {\n      overlayClick: toggleShowListModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(ListPage, \"5NSYb2QtyVYigPEX+JgvHxcDL1Y=\", false, function () {\n  return [useProfilePageState, useWeb3React, useIsMobile, useTrace, useSellAsset, useNFTList, useNativeCurrency, useStablecoinValue, useSubscribeListingState];\n});\n_c = ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["sendAnalyticsEvent","useTrace","InterfaceModalName","NFTEventName","formatCurrencyAmount","NumberType","useWeb3React","Column","Row","useStablecoinValue","useNativeCurrency","tryParseCurrencyAmount","ListingButton","approveCollectionRow","getTotalEthValue","useSubscribeListingState","verifyStatus","useIsMobile","useNFTList","useProfilePageState","useSellAsset","LIST_PAGE_MARGIN","LIST_PAGE_MARGIN_MOBILE","looksRareNonceFetcher","ProfilePageStateType","formatEth","ListingMarkets","useEffect","useMemo","useReducer","useState","ArrowLeft","BREAKPOINTS","ThemedText","Z_INDEX","shallow","ListModal","NFTListingsGrid","SelectMarketplacesDropdown","SetDurationModal","ListingHeader","styled","xs","ArrowContainer","div","sm","BackArrow","theme","textSecondary","TitleWrapper","ButtonsWrapper","MarketWrap","section","ListingHeaderRow","GridWrapper","FloatingConfirmationBar","issues","backgroundOutline","accentAction","backgroundSurface","maxWidth","under_dropdown","shallowShadow","lg","Overlay","backgroundBackdrop","UsdValue","SubHeader","ProceedsAndButtonWrapper","ProceedsWrapper","EthValueWrapper","span","totalEthListingValue","textPrimary","ListPage","setProfilePageState","setSellPageState","provider","isMobile","trace","modal","NFT_LISTING","setGlobalMarketplaces","sellAssets","listings","collectionsRequiringApproval","setLooksRareNonce","setCollectionStatusAndCallback","nativeCurrency","parsedAmount","toString","usdcValue","usdcAmount","FiatTokenPrice","showListModal","toggleShowListModal","s","selectedMarkets","setSelectedMarkets","signer","getSigner","startListingEventProperties","collection_addresses","map","asset","asset_contract","address","token_ids","tokenId","marketplaces","Array","from","Set","marketplace","name","list_quantity","length","usd_value","startListingFlow","NFT_SELL_START_LISTING","signerAddress","getAddress","nonce","collectionRow","status","showModalAndStartListing","BannerText","VIEWING"],"sources":["/home/diep/freelance/interface/src/nft/components/profile/list/ListPage.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent, useTrace } from '@uniswap/analytics'\nimport { InterfaceModalName, NFTEventName } from '@uniswap/analytics-events'\nimport { formatCurrencyAmount, NumberType } from '@uniswap/conedison/format'\nimport { useWeb3React } from '@web3-react/core'\nimport Column from 'components/Column'\nimport Row from 'components/Row'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ListingButton } from 'nft/components/profile/list/ListingButton'\nimport {\n  approveCollectionRow,\n  getTotalEthValue,\n  useSubscribeListingState,\n  verifyStatus,\n} from 'nft/components/profile/list/utils'\nimport { useIsMobile, useNFTList, useProfilePageState, useSellAsset } from 'nft/hooks'\nimport { LIST_PAGE_MARGIN, LIST_PAGE_MARGIN_MOBILE } from 'nft/pages/profile/shared'\nimport { looksRareNonceFetcher } from 'nft/queries'\nimport { ProfilePageStateType } from 'nft/types'\nimport { formatEth } from 'nft/utils'\nimport { ListingMarkets } from 'nft/utils/listNfts'\nimport { useEffect, useMemo, useReducer, useState } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport styled from 'styled-components/macro'\nimport { BREAKPOINTS, ThemedText } from 'theme'\nimport { Z_INDEX } from 'theme/zIndex'\nimport { shallow } from 'zustand/shallow'\n\nimport { ListModal } from './Modal/ListModal'\nimport { NFTListingsGrid } from './NFTListingsGrid'\nimport { SelectMarketplacesDropdown } from './SelectMarketplacesDropdown'\nimport { SetDurationModal } from './SetDurationModal'\n\nconst ListingHeader = styled(Column)`\n  gap: 16px;\n  margin-top: 36px;\n\n  @media screen and (min-width: ${BREAKPOINTS.xs}px) {\n    gap: 4px;\n  }\n`\n\nconst ArrowContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n\n  @media screen and (min-width: ${BREAKPOINTS.sm}px) {\n    height: 40px;\n    width: 40px;\n  }\n`\n\nconst BackArrow = styled(ArrowLeft)`\n  height: 16px;\n  width: 16px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textSecondary};\n\n  @media screen and (min-width: ${BREAKPOINTS.sm}px) {\n    height: 20px;\n    width: 20px;\n  }\n`\n\nconst TitleWrapper = styled(Row)`\n  gap: 4px;\n  margin-bottom: 12px;\n  white-space: nowrap;\n  width: min-content;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 28px;\n\n  @media screen and (min-width: ${BREAKPOINTS.xs}px) {\n    margin-bottom: 0px;\n    font-weight: 500;\n    font-size: 28px;\n    line-height: 36px;\n  }\n`\n\nconst ButtonsWrapper = styled(Row)`\n  gap: 12px;\n  width: min-content;\n`\n\nconst MarketWrap = styled.section`\n  gap: 48px;\n  margin: 0px auto;\n  width: 100%;\n  max-width: 1200px;\n`\n\nconst ListingHeaderRow = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: ${BREAKPOINTS.sm}px) {\n    padding-left: 40px;\n  }\n`\n\nconst GridWrapper = styled.div`\n  margin-top: 24px;\n  margin-bottom: 48px;\n`\n\nconst FloatingConfirmationBar = styled(Row)<{ issues: boolean }>`\n  padding: 12px 12px 12px 32px;\n  border: 1px solid;\n  border-color: ${({ theme, issues }) => (issues ? theme.backgroundOutline : theme.accentAction)};\n  border-radius: 20px;\n  white-space: nowrap;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.backgroundSurface};\n  position: fixed;\n  bottom: 32px;\n  width: calc(100vw - ${LIST_PAGE_MARGIN * 2}px);\n  left: 50%;\n  transform: translateX(-50%);\n  max-width: ${({ theme }) => theme.maxWidth};\n  z-index: ${Z_INDEX.under_dropdown};\n  box-shadow: ${({ theme }) => theme.shallowShadow};\n\n  @media screen and (max-width: ${BREAKPOINTS.lg}px) {\n    bottom: 68px;\n  }\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    width: calc(100% - ${LIST_PAGE_MARGIN_MOBILE * 2}px);\n    padding: 8px 8px 8px 16px;\n  }\n`\n\nconst Overlay = styled.div`\n  position: fixed;\n  bottom: 0px;\n  height: 158px;\n  width: 100vw;\n  background: ${({ theme }) => `linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, ${theme.backgroundBackdrop} 100%)`};\n`\n\nconst UsdValue = styled(ThemedText.SubHeader)`\n  line-height: 24px;\n  color: ${({ theme }) => theme.textSecondary};\n  display: none;\n\n  @media screen and (min-width: ${BREAKPOINTS.lg}px) {\n    display: flex;\n  }\n`\n\nconst ProceedsAndButtonWrapper = styled(Row)`\n  width: min-content;\n  gap: 40px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    gap: 20px;\n  }\n`\n\nconst ProceedsWrapper = styled(Row)`\n  width: min-content;\n  gap: 16px;\n`\n\nconst EthValueWrapper = styled.span<{ totalEthListingValue: boolean }>`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 28px;\n  color: ${({ theme, totalEthListingValue }) => (totalEthListingValue ? theme.textPrimary : theme.textSecondary)};\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`\n\nexport const ListPage = () => {\n  const { setProfilePageState: setSellPageState } = useProfilePageState()\n  const { provider } = useWeb3React()\n  const isMobile = useIsMobile()\n  const trace = useTrace({ modal: InterfaceModalName.NFT_LISTING })\n  const { setGlobalMarketplaces, sellAssets, issues } = useSellAsset(\n    ({ setGlobalMarketplaces, sellAssets, issues }) => ({\n      setGlobalMarketplaces,\n      sellAssets,\n      issues,\n    }),\n    shallow\n  )\n  const { listings, collectionsRequiringApproval, setLooksRareNonce, setCollectionStatusAndCallback } = useNFTList(\n    ({ listings, collectionsRequiringApproval, setLooksRareNonce, setCollectionStatusAndCallback }) => ({\n      listings,\n      collectionsRequiringApproval,\n      setLooksRareNonce,\n      setCollectionStatusAndCallback,\n    }),\n    shallow\n  )\n\n  const totalEthListingValue = useMemo(() => getTotalEthValue(sellAssets), [sellAssets])\n  const nativeCurrency = useNativeCurrency()\n  const parsedAmount = tryParseCurrencyAmount(totalEthListingValue.toString(), nativeCurrency)\n  const usdcValue = useStablecoinValue(parsedAmount)\n  const usdcAmount = formatCurrencyAmount(usdcValue, NumberType.FiatTokenPrice)\n  const [showListModal, toggleShowListModal] = useReducer((s) => !s, false)\n  const [selectedMarkets, setSelectedMarkets] = useState([ListingMarkets[0]]) // default marketplace: x2y2\n  const signer = provider?.getSigner()\n\n  // instantiate listings and collections to approve when users modify input data\n  useSubscribeListingState()\n\n  useEffect(() => {\n    setGlobalMarketplaces(selectedMarkets)\n  }, [selectedMarkets, setGlobalMarketplaces])\n\n  const startListingEventProperties = {\n    collection_addresses: sellAssets.map((asset) => asset.asset_contract.address),\n    token_ids: sellAssets.map((asset) => asset.tokenId),\n    marketplaces: Array.from(new Set(listings.map((asset) => asset.marketplace.name))),\n    list_quantity: listings.length,\n    usd_value: usdcAmount,\n    ...trace,\n  }\n\n  const startListingFlow = async () => {\n    if (!signer) return\n    sendAnalyticsEvent(NFTEventName.NFT_SELL_START_LISTING, { ...startListingEventProperties })\n    const signerAddress = await signer.getAddress()\n    const nonce = await looksRareNonceFetcher(signerAddress)\n    setLooksRareNonce(nonce ?? 0)\n\n    // for all unique collection, marketplace combos -> approve collections\n    for (const collectionRow of collectionsRequiringApproval) {\n      verifyStatus(collectionRow.status) &&\n        (isMobile\n          ? await approveCollectionRow(collectionRow, signer, setCollectionStatusAndCallback)\n          : approveCollectionRow(collectionRow, signer, setCollectionStatusAndCallback))\n    }\n  }\n\n  const showModalAndStartListing = () => {\n    toggleShowListModal()\n    startListingFlow()\n  }\n\n  const BannerText = isMobile ? (\n    <ThemedText.SubHeader lineHeight=\"24px\">\n      <Trans>Receive</Trans>\n    </ThemedText.SubHeader>\n  ) : (\n    <ThemedText.HeadlineSmall lineHeight=\"28px\">\n      <Trans>You receive</Trans>\n    </ThemedText.HeadlineSmall>\n  )\n\n  return (\n    <Column>\n      <MarketWrap>\n        <ListingHeader>\n          <Row>\n            <ArrowContainer>\n              <BackArrow onClick={() => setSellPageState(ProfilePageStateType.VIEWING)} />\n            </ArrowContainer>\n            <ThemedText.BodySmall lineHeight=\"20px\" color=\"textSecondary\">\n              <Trans>My NFTs</Trans>\n            </ThemedText.BodySmall>\n          </Row>\n          <ListingHeaderRow>\n            <TitleWrapper>\n              <Trans>Sell NFTs</Trans>\n            </TitleWrapper>\n            <ButtonsWrapper>\n              <SelectMarketplacesDropdown setSelectedMarkets={setSelectedMarkets} selectedMarkets={selectedMarkets} />\n              <SetDurationModal />\n            </ButtonsWrapper>\n          </ListingHeaderRow>\n        </ListingHeader>\n        <GridWrapper>\n          <NFTListingsGrid selectedMarkets={selectedMarkets} />\n        </GridWrapper>\n      </MarketWrap>\n\n      <FloatingConfirmationBar issues={!!issues}>\n        {BannerText}\n        <ProceedsAndButtonWrapper>\n          <ProceedsWrapper>\n            <EthValueWrapper totalEthListingValue={!!totalEthListingValue}>\n              {totalEthListingValue > 0 ? formatEth(totalEthListingValue) : '-'} ETH\n            </EthValueWrapper>\n            {!!usdcValue && <UsdValue>{usdcAmount}</UsdValue>}\n          </ProceedsWrapper>\n          <ListingButton onClick={showModalAndStartListing} />\n        </ProceedsAndButtonWrapper>\n      </FloatingConfirmationBar>\n      <Overlay />\n\n      {showListModal && <ListModal overlayClick={toggleShowListModal} />}\n    </Column>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}