{"ast":null,"code":"var _s = $RefreshSig$();\nimport { BagStatus, TxStateType } from 'nft/types';\nimport { useEffect, useRef } from 'react';\nimport { shallow } from 'zustand/shallow';\nimport { useBag } from './useBag';\nimport { useSendTransaction } from './useSendTransaction';\nexport function useSubscribeTransactionState(setModalIsOpen) {\n  _s();\n  const transactionState = useSendTransaction(state => state.state);\n  const setTransactionState = useSendTransaction(state => state.setState);\n  const transactionStateRef = useRef(transactionState);\n  const {\n    setBagStatus,\n    setLocked: setBagLocked\n  } = useBag(_ref => {\n    let {\n      setBagExpanded,\n      setBagStatus,\n      setLocked\n    } = _ref;\n    return {\n      setBagExpanded,\n      setBagStatus,\n      setLocked\n    };\n  }, shallow);\n  useEffect(() => {\n    useSendTransaction.subscribe(state => transactionStateRef.current = state.state);\n  }, []);\n  useEffect(() => {\n    if (transactionStateRef.current === TxStateType.Confirming) setBagStatus(BagStatus.PROCESSING_TRANSACTION);\n    if (transactionStateRef.current === TxStateType.Denied || transactionStateRef.current === TxStateType.Invalid) {\n      if (transactionStateRef.current === TxStateType.Invalid) {\n        setBagStatus(BagStatus.WARNING);\n      } else setBagStatus(BagStatus.CONFIRM_REVIEW);\n      setTransactionState(TxStateType.New);\n      setBagLocked(false);\n      setModalIsOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setBagLocked, setBagStatus, setModalIsOpen, setTransactionState, transactionStateRef.current]);\n}\n_s(useSubscribeTransactionState, \"gTu5RQO/TSOmvpmHf0s0ARi792k=\", false, function () {\n  return [useSendTransaction, useSendTransaction, useBag];\n});","map":{"version":3,"names":["BagStatus","TxStateType","useEffect","useRef","shallow","useBag","useSendTransaction","useSubscribeTransactionState","setModalIsOpen","transactionState","state","setTransactionState","setState","transactionStateRef","setBagStatus","setLocked","setBagLocked","setBagExpanded","subscribe","current","Confirming","PROCESSING_TRANSACTION","Denied","Invalid","WARNING","CONFIRM_REVIEW","New"],"sources":["/home/diep/freelance/interface/src/nft/hooks/useSubscribeTransactionState.ts"],"sourcesContent":["import { BagStatus, TxStateType } from 'nft/types'\nimport { useEffect, useRef } from 'react'\nimport { shallow } from 'zustand/shallow'\n\nimport { useBag } from './useBag'\nimport { useSendTransaction } from './useSendTransaction'\n\nexport function useSubscribeTransactionState(setModalIsOpen: (isOpen: boolean) => void) {\n  const transactionState = useSendTransaction((state) => state.state)\n  const setTransactionState = useSendTransaction((state) => state.setState)\n  const transactionStateRef = useRef(transactionState)\n  const { setBagStatus, setLocked: setBagLocked } = useBag(\n    ({ setBagExpanded, setBagStatus, setLocked }) => ({\n      setBagExpanded,\n      setBagStatus,\n      setLocked,\n    }),\n    shallow\n  )\n\n  useEffect(() => {\n    useSendTransaction.subscribe((state) => (transactionStateRef.current = state.state))\n  }, [])\n\n  useEffect(() => {\n    if (transactionStateRef.current === TxStateType.Confirming) setBagStatus(BagStatus.PROCESSING_TRANSACTION)\n    if (transactionStateRef.current === TxStateType.Denied || transactionStateRef.current === TxStateType.Invalid) {\n      if (transactionStateRef.current === TxStateType.Invalid) {\n        setBagStatus(BagStatus.WARNING)\n      } else setBagStatus(BagStatus.CONFIRM_REVIEW)\n      setTransactionState(TxStateType.New)\n\n      setBagLocked(false)\n      setModalIsOpen(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setBagLocked, setBagStatus, setModalIsOpen, setTransactionState, transactionStateRef.current])\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,WAAW;AAClD,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,OAAO,QAAQ,iBAAiB;AAEzC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,kBAAkB,QAAQ,sBAAsB;AAEzD,OAAO,SAASC,4BAA4B,CAACC,cAAyC,EAAE;EAAA;EACtF,MAAMC,gBAAgB,GAAGH,kBAAkB,CAAEI,KAAK,IAAKA,KAAK,CAACA,KAAK,CAAC;EACnE,MAAMC,mBAAmB,GAAGL,kBAAkB,CAAEI,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC;EACzE,MAAMC,mBAAmB,GAAGV,MAAM,CAACM,gBAAgB,CAAC;EACpD,MAAM;IAAEK,YAAY;IAAEC,SAAS,EAAEC;EAAa,CAAC,GAAGX,MAAM,CACtD;IAAA,IAAC;MAAEY,cAAc;MAAEH,YAAY;MAAEC;IAAU,CAAC;IAAA,OAAM;MAChDE,cAAc;MACdH,YAAY;MACZC;IACF,CAAC;EAAA,CAAC,EACFX,OAAO,CACR;EAEDF,SAAS,CAAC,MAAM;IACdI,kBAAkB,CAACY,SAAS,CAAER,KAAK,IAAMG,mBAAmB,CAACM,OAAO,GAAGT,KAAK,CAACA,KAAM,CAAC;EACtF,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACd,IAAIW,mBAAmB,CAACM,OAAO,KAAKlB,WAAW,CAACmB,UAAU,EAAEN,YAAY,CAACd,SAAS,CAACqB,sBAAsB,CAAC;IAC1G,IAAIR,mBAAmB,CAACM,OAAO,KAAKlB,WAAW,CAACqB,MAAM,IAAIT,mBAAmB,CAACM,OAAO,KAAKlB,WAAW,CAACsB,OAAO,EAAE;MAC7G,IAAIV,mBAAmB,CAACM,OAAO,KAAKlB,WAAW,CAACsB,OAAO,EAAE;QACvDT,YAAY,CAACd,SAAS,CAACwB,OAAO,CAAC;MACjC,CAAC,MAAMV,YAAY,CAACd,SAAS,CAACyB,cAAc,CAAC;MAC7Cd,mBAAmB,CAACV,WAAW,CAACyB,GAAG,CAAC;MAEpCV,YAAY,CAAC,KAAK,CAAC;MACnBR,cAAc,CAAC,KAAK,CAAC;IACvB;IACA;EACF,CAAC,EAAE,CAACQ,YAAY,EAAEF,YAAY,EAAEN,cAAc,EAAEG,mBAAmB,EAAEE,mBAAmB,CAACM,OAAO,CAAC,CAAC;AACpG;AAAC,GA9BeZ,4BAA4B;EAAA,QACjBD,kBAAkB,EACfA,kBAAkB,EAEID,MAAM;AAAA"},"metadata":{},"sourceType":"module"}