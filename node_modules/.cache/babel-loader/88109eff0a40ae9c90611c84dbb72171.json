{"ast":null,"code":"import store from 'state';\nimport { DEFAULT_LIST_OF_LISTS } from './lists';\nclass TokenLogoLookupTable {\n  constructor() {\n    this.dict = {};\n    this.initialized = false;\n  }\n  initialize() {\n    const dict = {};\n    DEFAULT_LIST_OF_LISTS.forEach(list => {\n      var _listData$current;\n      const listData = store.getState().lists.byUrl[list];\n      if (!listData) {\n        return;\n      }\n      (_listData$current = listData.current) === null || _listData$current === void 0 ? void 0 : _listData$current.tokens.forEach(token => {\n        if (token.logoURI) {\n          const lowercaseAddress = token.address.toLowerCase();\n          const currentEntry = dict[lowercaseAddress + ':' + token.chainId];\n          if (currentEntry) {\n            currentEntry.push(token.logoURI);\n          } else {\n            dict[lowercaseAddress + ':' + token.chainId] = [token.logoURI];\n          }\n        }\n      });\n    });\n    this.dict = dict;\n    this.initialized = true;\n  }\n  getIcons(address) {\n    let chainId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    if (!address) return undefined;\n    if (!this.initialized) {\n      this.initialize();\n    }\n    return this.dict[address.toLowerCase() + ':' + chainId];\n  }\n}\nexport default new TokenLogoLookupTable();","map":{"version":3,"names":["store","DEFAULT_LIST_OF_LISTS","TokenLogoLookupTable","dict","initialized","initialize","forEach","list","listData","getState","lists","byUrl","current","tokens","token","logoURI","lowercaseAddress","address","toLowerCase","currentEntry","chainId","push","getIcons","undefined"],"sources":["/home/diep/freelance/interface/src/constants/TokenLogoLookupTable.ts"],"sourcesContent":["import store from 'state'\n\nimport { DEFAULT_LIST_OF_LISTS } from './lists'\n\nclass TokenLogoLookupTable {\n  private dict: { [key: string]: string[] | undefined } = {}\n  private initialized = false\n\n  initialize() {\n    const dict: { [key: string]: string[] | undefined } = {}\n\n    DEFAULT_LIST_OF_LISTS.forEach((list) => {\n      const listData = store.getState().lists.byUrl[list]\n      if (!listData) {\n        return\n      }\n      listData.current?.tokens.forEach((token) => {\n        if (token.logoURI) {\n          const lowercaseAddress = token.address.toLowerCase()\n          const currentEntry = dict[lowercaseAddress + ':' + token.chainId]\n          if (currentEntry) {\n            currentEntry.push(token.logoURI)\n          } else {\n            dict[lowercaseAddress + ':' + token.chainId] = [token.logoURI]\n          }\n        }\n      })\n    })\n    this.dict = dict\n    this.initialized = true\n  }\n  getIcons(address?: string | null, chainId: number | null = 1) {\n    if (!address) return undefined\n\n    if (!this.initialized) {\n      this.initialize()\n    }\n\n    return this.dict[address.toLowerCase() + ':' + chainId]\n  }\n}\n\nexport default new TokenLogoLookupTable()\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,qBAAqB,QAAQ,SAAS;AAE/C,MAAMC,oBAAoB,CAAC;EAAA;IAAA,KACjBC,IAAI,GAA4C,CAAC,CAAC;IAAA,KAClDC,WAAW,GAAG,KAAK;EAAA;EAE3BC,UAAU,GAAG;IACX,MAAMF,IAA6C,GAAG,CAAC,CAAC;IAExDF,qBAAqB,CAACK,OAAO,CAAEC,IAAI,IAAK;MAAA;MACtC,MAAMC,QAAQ,GAAGR,KAAK,CAACS,QAAQ,EAAE,CAACC,KAAK,CAACC,KAAK,CAACJ,IAAI,CAAC;MACnD,IAAI,CAACC,QAAQ,EAAE;QACb;MACF;MACA,qBAAAA,QAAQ,CAACI,OAAO,sDAAhB,kBAAkBC,MAAM,CAACP,OAAO,CAAEQ,KAAK,IAAK;QAC1C,IAAIA,KAAK,CAACC,OAAO,EAAE;UACjB,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,OAAO,CAACC,WAAW,EAAE;UACpD,MAAMC,YAAY,GAAGhB,IAAI,CAACa,gBAAgB,GAAG,GAAG,GAAGF,KAAK,CAACM,OAAO,CAAC;UACjE,IAAID,YAAY,EAAE;YAChBA,YAAY,CAACE,IAAI,CAACP,KAAK,CAACC,OAAO,CAAC;UAClC,CAAC,MAAM;YACLZ,IAAI,CAACa,gBAAgB,GAAG,GAAG,GAAGF,KAAK,CAACM,OAAO,CAAC,GAAG,CAACN,KAAK,CAACC,OAAO,CAAC;UAChE;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAACZ,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EACAkB,QAAQ,CAACL,OAAuB,EAA8B;IAAA,IAA5BG,OAAsB,uEAAG,CAAC;IAC1D,IAAI,CAACH,OAAO,EAAE,OAAOM,SAAS;IAE9B,IAAI,CAAC,IAAI,CAACnB,WAAW,EAAE;MACrB,IAAI,CAACC,UAAU,EAAE;IACnB;IAEA,OAAO,IAAI,CAACF,IAAI,CAACc,OAAO,CAACC,WAAW,EAAE,GAAG,GAAG,GAAGE,OAAO,CAAC;EACzD;AACF;AAEA,eAAe,IAAIlB,oBAAoB,EAAE"},"metadata":{},"sourceType":"module"}