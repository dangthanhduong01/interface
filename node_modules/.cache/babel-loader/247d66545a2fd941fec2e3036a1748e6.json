{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$(),\n  _s16 = $RefreshSig$(),\n  _s17 = $RefreshSig$();\nimport { Percent, Token } from '@uniswap/sdk-core';\nimport { computePairAddress } from '@uniswap/v2-sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport { L2_CHAIN_IDS } from 'constants/chains';\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc';\nimport JSBI from 'jsbi';\nimport { useCallback, useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { UserAddedToken } from 'types/tokens';\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants/routing';\nimport { useDefaultActiveTokens } from '../../hooks/Tokens';\nimport { addSerializedPair, addSerializedToken, updateHideClosedPositions, updateHideUniswapWalletBanner, updateUserBuyFiatFlowCompleted, updateUserClientSideRouter, updateUserDeadline, updateUserExpertMode, updateUserLocale, updateUserSlippageTolerance } from './reducer';\nexport function serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\nexport function deserializeToken(serializedToken) {\n  let Class = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Token;\n  return new Class(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\nexport function useUserLocale() {\n  _s();\n  return useAppSelector(state => state.user.userLocale);\n}\n_s(useUserLocale, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\nexport function useUserLocaleManager() {\n  _s2();\n  const dispatch = useAppDispatch();\n  const locale = useUserLocale();\n  const setLocale = useCallback(newLocale => {\n    dispatch(updateUserLocale({\n      userLocale: newLocale\n    }));\n  }, [dispatch]);\n  return [locale, setLocale];\n}\n_s2(useUserLocaleManager, \"/2yPrtUZ6T42PZGdNtf19U6ueCI=\", false, function () {\n  return [useAppDispatch, useUserLocale];\n});\nexport function useIsExpertMode() {\n  _s3();\n  return useAppSelector(state => state.user.userExpertMode);\n}\n_s3(useIsExpertMode, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\nexport function useBuyFiatFlowCompleted() {\n  _s4();\n  const dispatch = useAppDispatch();\n  const buyFiatFlowCompleted = useAppSelector(state => state.user.buyFiatFlowCompleted);\n  const setBuyFiatFlowCompleted = useCallback(buyFiatFlowCompleted => {\n    dispatch(updateUserBuyFiatFlowCompleted(buyFiatFlowCompleted));\n  }, [dispatch]);\n  return [buyFiatFlowCompleted, setBuyFiatFlowCompleted];\n}\n_s4(useBuyFiatFlowCompleted, \"GAtsL4lOc1NMU9lIPZ+pu8v/aKg=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function useExpertModeManager() {\n  _s5();\n  const dispatch = useAppDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\n_s5(useExpertModeManager, \"NICgZLOjDAdTnm82TefdTjIHIEc=\", false, function () {\n  return [useAppDispatch, useIsExpertMode];\n});\nexport function useClientSideRouter() {\n  _s6();\n  const dispatch = useAppDispatch();\n  const clientSideRouter = useAppSelector(state => Boolean(state.user.userClientSideRouter));\n  const setClientSideRouter = useCallback(newClientSideRouter => {\n    dispatch(updateUserClientSideRouter({\n      userClientSideRouter: newClientSideRouter\n    }));\n  }, [dispatch]);\n  return [clientSideRouter, setClientSideRouter];\n}\n\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\n_s6(useClientSideRouter, \"HynwrfgFKtwvLSLWNwQjeHFl0Wo=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function useUserSlippageTolerance() {\n  _s7();\n  const userSlippageToleranceRaw = useAppSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const userSlippageTolerance = useMemo(() => userSlippageToleranceRaw === 'auto' ? 'auto' : new Percent(userSlippageToleranceRaw, 10000), [userSlippageToleranceRaw]);\n  const dispatch = useAppDispatch();\n  const setUserSlippageTolerance = useCallback(userSlippageTolerance => {\n    let value;\n    try {\n      value = userSlippageTolerance === 'auto' ? 'auto' : JSBI.toNumber(userSlippageTolerance.multiply(10000).quotient);\n    } catch (error) {\n      value = 'auto';\n    }\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance: value\n    }));\n  }, [dispatch]);\n  return useMemo(() => [userSlippageTolerance, setUserSlippageTolerance], [setUserSlippageTolerance, userSlippageTolerance]);\n}\n_s7(useUserSlippageTolerance, \"kT7Qpmdn3df5KwyNkFVYBucEQJc=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\nexport function useUserHideClosedPositions() {\n  _s8();\n  const dispatch = useAppDispatch();\n  const hideClosedPositions = useAppSelector(state => state.user.userHideClosedPositions);\n  const setHideClosedPositions = useCallback(newHideClosedPositions => {\n    dispatch(updateHideClosedPositions({\n      userHideClosedPositions: newHideClosedPositions\n    }));\n  }, [dispatch]);\n  return [hideClosedPositions, setHideClosedPositions];\n}\n\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\n_s8(useUserHideClosedPositions, \"Vcmo1HP+P+HDRDTxyVzY57SqCS0=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance) {\n  _s9();\n  const allowedSlippage = useUserSlippageTolerance()[0];\n  return useMemo(() => allowedSlippage === 'auto' ? defaultSlippageTolerance : allowedSlippage, [allowedSlippage, defaultSlippageTolerance]);\n}\n_s9(useUserSlippageToleranceWithDefault, \"X4+mxkmsy7qBrGVGGEr3UsDNit4=\", false, function () {\n  return [useUserSlippageTolerance];\n});\nexport function useUserTransactionTTL() {\n  _s10();\n  const {\n    chainId\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  const userDeadline = useAppSelector(state => state.user.userDeadline);\n  const onL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId));\n  const deadline = onL2 ? L2_DEADLINE_FROM_NOW : userDeadline;\n  const setUserDeadline = useCallback(userDeadline => {\n    dispatch(updateUserDeadline({\n      userDeadline\n    }));\n  }, [dispatch]);\n  return [deadline, setUserDeadline];\n}\n_s10(useUserTransactionTTL, \"7X+wgHtc/F7ZHZh/CWSdhH8OddI=\", false, function () {\n  return [useWeb3React, useAppDispatch, useAppSelector];\n});\nexport function useAddUserToken() {\n  _s11();\n  const dispatch = useAppDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\n_s11(useAddUserToken, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useUserAddedTokensOnChain(chainId) {\n  _s12();\n  const serializedTokensMap = useAppSelector(_ref => {\n    let {\n      user: {\n        tokens\n      }\n    } = _ref;\n    return tokens;\n  });\n  return useMemo(() => {\n    if (!chainId) return [];\n    const tokenMap = (serializedTokensMap === null || serializedTokensMap === void 0 ? void 0 : serializedTokensMap[chainId]) ? Object.values(serializedTokensMap[chainId]).map(value => deserializeToken(value, UserAddedToken)) : [];\n    return tokenMap;\n  }, [serializedTokensMap, chainId]);\n}\n_s12(useUserAddedTokensOnChain, \"pH1dW+7tf/t9QdwQEN2IhrF09h8=\", false, function () {\n  return [useAppSelector];\n});\nexport function useUserAddedTokens() {\n  _s13();\n  return useUserAddedTokensOnChain(useWeb3React().chainId);\n}\n_s13(useUserAddedTokens, \"wKQeP2OTxqQyuFbMnSW80haJmi0=\", false, function () {\n  return [useUserAddedTokensOnChain, useWeb3React];\n});\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\nexport function usePairAdder() {\n  _s14();\n  const dispatch = useAppDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n_s14(usePairAdder, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useURLWarningVisible() {\n  _s15();\n  return useAppSelector(state => state.user.URLWarningVisible);\n}\n_s15(useURLWarningVisible, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\nexport function useHideUniswapWalletBanner() {\n  _s16();\n  const dispatch = useAppDispatch();\n  const hideUniswapWalletBanner = useAppSelector(state => state.user.hideUniswapWalletBanner);\n  const toggleHideUniswapWalletBanner = useCallback(() => {\n    dispatch(updateHideUniswapWalletBanner({\n      hideUniswapWalletBanner: true\n    }));\n  }, [dispatch]);\n  return [hideUniswapWalletBanner, toggleHideUniswapWalletBanner];\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\n_s16(useHideUniswapWalletBanner, \"cBbNzg2zz/I788Fbyj8nhcu62k0=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function toV2LiquidityToken(_ref2) {\n  let [tokenA, tokenB] = _ref2;\n  if (tokenA.chainId !== tokenB.chainId) throw new Error('Not matching chain IDs');\n  if (tokenA.equals(tokenB)) throw new Error('Tokens cannot be equal');\n  if (!V2_FACTORY_ADDRESSES[tokenA.chainId]) throw new Error('No V2 factory address on this chain');\n  return new Token(tokenA.chainId, computePairAddress({\n    factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId],\n    tokenA,\n    tokenB\n  }), 18, 'UNI-V2', 'Uniswap V2');\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs() {\n  _s17();\n  const {\n    chainId\n  } = useWeb3React();\n  const tokens = useDefaultActiveTokens();\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => {\n    var _PINNED_PAIRS$chainId;\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]);\n\n  // pairs for every token against every base\n  const generatedPairs = useMemo(() => chainId ? Object.keys(tokens).flatMap(tokenAddress => {\n    var _BASES_TO_TRACK_LIQUI;\n    const token = tokens[tokenAddress];\n    // for each token on the current chain,\n    return (\n      // loop though all bases on the current chain\n      ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : [] // to construct pairs of the given token with each base\n      ).map(base => {\n        if (base.address === token.address) {\n          return null;\n        } else {\n          return [base, token];\n        }\n      }).filter(p => p !== null)\n    );\n  }) : [], [tokens, chainId]);\n\n  // pairs saved by users\n  const savedSerializedPairs = useAppSelector(_ref3 => {\n    let {\n      user: {\n        pairs\n      }\n    } = _ref3;\n    return pairs;\n  });\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, _ref4) => {\n      let [tokenA, tokenB] = _ref4;\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(key => keyed[key]);\n  }, [combinedList]);\n}\n_s17(useTrackedTokenPairs, \"2gEMRLBxNHHYF09hYSioO9ZpXgQ=\", false, function () {\n  return [useWeb3React, useDefaultActiveTokens, useAppSelector];\n});","map":{"version":3,"names":["Percent","Token","computePairAddress","useWeb3React","L2_CHAIN_IDS","L2_DEADLINE_FROM_NOW","JSBI","useCallback","useMemo","useAppDispatch","useAppSelector","UserAddedToken","V2_FACTORY_ADDRESSES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useDefaultActiveTokens","addSerializedPair","addSerializedToken","updateHideClosedPositions","updateHideUniswapWalletBanner","updateUserBuyFiatFlowCompleted","updateUserClientSideRouter","updateUserDeadline","updateUserExpertMode","updateUserLocale","updateUserSlippageTolerance","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","Class","useUserLocale","state","user","userLocale","useUserLocaleManager","dispatch","locale","setLocale","newLocale","useIsExpertMode","userExpertMode","useBuyFiatFlowCompleted","buyFiatFlowCompleted","setBuyFiatFlowCompleted","useExpertModeManager","expertMode","toggleSetExpertMode","useClientSideRouter","clientSideRouter","Boolean","userClientSideRouter","setClientSideRouter","newClientSideRouter","useUserSlippageTolerance","userSlippageToleranceRaw","userSlippageTolerance","setUserSlippageTolerance","value","toNumber","multiply","quotient","error","useUserHideClosedPositions","hideClosedPositions","userHideClosedPositions","setHideClosedPositions","newHideClosedPositions","useUserSlippageToleranceWithDefault","defaultSlippageTolerance","allowedSlippage","useUserTransactionTTL","userDeadline","onL2","includes","deadline","setUserDeadline","useAddUserToken","useUserAddedTokensOnChain","serializedTokensMap","tokens","tokenMap","Object","values","map","useUserAddedTokens","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","useHideUniswapWalletBanner","hideUniswapWalletBanner","toggleHideUniswapWalletBanner","toV2LiquidityToken","tokenA","tokenB","Error","equals","factoryAddress","useTrackedTokenPairs","pinnedPairs","generatedPairs","keys","flatMap","tokenAddress","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"sources":["/home/diep/freelance/interface/src/state/user/hooks.tsx"],"sourcesContent":["import { Percent, Token } from '@uniswap/sdk-core'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { L2_CHAIN_IDS } from 'constants/chains'\nimport { SupportedLocale } from 'constants/locales'\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc'\nimport JSBI from 'jsbi'\nimport { useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { UserAddedToken } from 'types/tokens'\n\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants/routing'\nimport { useDefaultActiveTokens } from '../../hooks/Tokens'\nimport { AppState } from '../types'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  updateHideClosedPositions,\n  updateHideUniswapWalletBanner,\n  updateUserBuyFiatFlowCompleted,\n  updateUserClientSideRouter,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserLocale,\n  updateUserSlippageTolerance,\n} from './reducer'\nimport { SerializedPair, SerializedToken } from './types'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken, Class: typeof Token = Token): Token {\n  return new Class(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useUserLocale(): SupportedLocale | null {\n  return useAppSelector((state) => state.user.userLocale)\n}\n\nexport function useUserLocaleManager(): [SupportedLocale | null, (newLocale: SupportedLocale) => void] {\n  const dispatch = useAppDispatch()\n  const locale = useUserLocale()\n\n  const setLocale = useCallback(\n    (newLocale: SupportedLocale) => {\n      dispatch(updateUserLocale({ userLocale: newLocale }))\n    },\n    [dispatch]\n  )\n\n  return [locale, setLocale]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useAppSelector((state) => state.user.userExpertMode)\n}\n\nexport function useBuyFiatFlowCompleted(): [boolean | undefined, (buyFiatFlowCompleted: boolean) => void] {\n  const dispatch = useAppDispatch()\n  const buyFiatFlowCompleted = useAppSelector((state) => state.user.buyFiatFlowCompleted)\n  const setBuyFiatFlowCompleted = useCallback(\n    (buyFiatFlowCompleted: boolean) => {\n      dispatch(updateUserBuyFiatFlowCompleted(buyFiatFlowCompleted))\n    },\n    [dispatch]\n  )\n  return [buyFiatFlowCompleted, setBuyFiatFlowCompleted]\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useClientSideRouter(): [boolean, (userClientSideRouter: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const clientSideRouter = useAppSelector((state) => Boolean(state.user.userClientSideRouter))\n\n  const setClientSideRouter = useCallback(\n    (newClientSideRouter: boolean) => {\n      dispatch(updateUserClientSideRouter({ userClientSideRouter: newClientSideRouter }))\n    },\n    [dispatch]\n  )\n\n  return [clientSideRouter, setClientSideRouter]\n}\n\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\nexport function useUserSlippageTolerance(): [Percent | 'auto', (slippageTolerance: Percent | 'auto') => void] {\n  const userSlippageToleranceRaw = useAppSelector((state) => {\n    return state.user.userSlippageTolerance\n  })\n  const userSlippageTolerance = useMemo(\n    () => (userSlippageToleranceRaw === 'auto' ? 'auto' : new Percent(userSlippageToleranceRaw, 10_000)),\n    [userSlippageToleranceRaw]\n  )\n\n  const dispatch = useAppDispatch()\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: Percent | 'auto') => {\n      let value: 'auto' | number\n      try {\n        value =\n          userSlippageTolerance === 'auto' ? 'auto' : JSBI.toNumber(userSlippageTolerance.multiply(10_000).quotient)\n      } catch (error) {\n        value = 'auto'\n      }\n      dispatch(\n        updateUserSlippageTolerance({\n          userSlippageTolerance: value,\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  return useMemo(\n    () => [userSlippageTolerance, setUserSlippageTolerance],\n    [setUserSlippageTolerance, userSlippageTolerance]\n  )\n}\n\nexport function useUserHideClosedPositions(): [boolean, (newHideClosedPositions: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const hideClosedPositions = useAppSelector((state) => state.user.userHideClosedPositions)\n\n  const setHideClosedPositions = useCallback(\n    (newHideClosedPositions: boolean) => {\n      dispatch(updateHideClosedPositions({ userHideClosedPositions: newHideClosedPositions }))\n    },\n    [dispatch]\n  )\n\n  return [hideClosedPositions, setHideClosedPositions]\n}\n\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance: Percent): Percent {\n  const allowedSlippage = useUserSlippageTolerance()[0]\n  return useMemo(\n    () => (allowedSlippage === 'auto' ? defaultSlippageTolerance : allowedSlippage),\n    [allowedSlippage, defaultSlippageTolerance]\n  )\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const { chainId } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const userDeadline = useAppSelector((state) => state.user.userDeadline)\n  const onL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId))\n  const deadline = onL2 ? L2_DEADLINE_FROM_NOW : userDeadline\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [deadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokensOnChain(chainId: number | undefined | null): Token[] {\n  const serializedTokensMap = useAppSelector(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    const tokenMap: Token[] = serializedTokensMap?.[chainId]\n      ? Object.values(serializedTokensMap[chainId]).map((value) => deserializeToken(value, UserAddedToken))\n      : []\n    return tokenMap\n  }, [serializedTokensMap, chainId])\n}\n\nexport function useUserAddedTokens(): Token[] {\n  return useUserAddedTokensOnChain(useWeb3React().chainId)\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useAppSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useHideUniswapWalletBanner(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const hideUniswapWalletBanner = useAppSelector((state) => state.user.hideUniswapWalletBanner)\n\n  const toggleHideUniswapWalletBanner = useCallback(() => {\n    dispatch(updateHideUniswapWalletBanner({ hideUniswapWalletBanner: true }))\n  }, [dispatch])\n\n  return [hideUniswapWalletBanner, toggleHideUniswapWalletBanner]\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  if (tokenA.chainId !== tokenB.chainId) throw new Error('Not matching chain IDs')\n  if (tokenA.equals(tokenB)) throw new Error('Tokens cannot be equal')\n  if (!V2_FACTORY_ADDRESSES[tokenA.chainId]) throw new Error('No V2 factory address on this chain')\n\n  return new Token(\n    tokenA.chainId,\n    computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB }),\n    18,\n    'UNI-V2',\n    'Uniswap V2'\n  )\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useWeb3React()\n  const tokens = useDefaultActiveTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? Object.keys(tokens).flatMap((tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useAppSelector(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,OAAO,EAAEC,KAAK,QAAQ,mBAAmB;AAClD,SAASC,kBAAkB,QAAc,iBAAiB;AAC1D,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,oBAAoB,QAAQ,gBAAgB;AACrD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC5C,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAC5D,SAASC,cAAc,QAAQ,cAAc;AAE7C,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,4BAA4B,EAAEC,YAAY,QAAQ,yBAAyB;AACpF,SAASC,sBAAsB,QAAQ,oBAAoB;AAE3D,SACEC,iBAAiB,EACjBC,kBAAkB,EAClBC,yBAAyB,EACzBC,6BAA6B,EAC7BC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,kBAAkB,EAClBC,oBAAoB,EACpBC,gBAAgB,EAChBC,2BAA2B,QACtB,WAAW;AAGlB,OAAO,SAASC,cAAc,CAACC,KAAY,EAAmB;EAC5D,OAAO;IACLC,OAAO,EAAED,KAAK,CAACC,OAAO;IACtBC,OAAO,EAAEF,KAAK,CAACE,OAAO;IACtBC,QAAQ,EAAEH,KAAK,CAACG,QAAQ;IACxBC,MAAM,EAAEJ,KAAK,CAACI,MAAM;IACpBC,IAAI,EAAEL,KAAK,CAACK;EACd,CAAC;AACH;AAEA,OAAO,SAASC,gBAAgB,CAACC,eAAgC,EAAsC;EAAA,IAApCC,KAAmB,uEAAGlC,KAAK;EAC5F,OAAO,IAAIkC,KAAK,CACdD,eAAe,CAACN,OAAO,EACvBM,eAAe,CAACL,OAAO,EACvBK,eAAe,CAACJ,QAAQ,EACxBI,eAAe,CAACH,MAAM,EACtBG,eAAe,CAACF,IAAI,CACrB;AACH;AAEA,OAAO,SAASI,aAAa,GAA2B;EAAA;EACtD,OAAO1B,cAAc,CAAE2B,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC;AACzD;AAAC,GAFeH,aAAa;EAAA,QACpB1B,cAAc;AAAA;AAGvB,OAAO,SAAS8B,oBAAoB,GAAmE;EAAA;EACrG,MAAMC,QAAQ,GAAGhC,cAAc,EAAE;EACjC,MAAMiC,MAAM,GAAGN,aAAa,EAAE;EAE9B,MAAMO,SAAS,GAAGpC,WAAW,CAC1BqC,SAA0B,IAAK;IAC9BH,QAAQ,CAACjB,gBAAgB,CAAC;MAAEe,UAAU,EAAEK;IAAU,CAAC,CAAC,CAAC;EACvD,CAAC,EACD,CAACH,QAAQ,CAAC,CACX;EAED,OAAO,CAACC,MAAM,EAAEC,SAAS,CAAC;AAC5B;AAAC,IAZeH,oBAAoB;EAAA,QACjB/B,cAAc,EAChB2B,aAAa;AAAA;AAY9B,OAAO,SAASS,eAAe,GAAY;EAAA;EACzC,OAAOnC,cAAc,CAAE2B,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACQ,cAAc,CAAC;AAC7D;AAAC,IAFeD,eAAe;EAAA,QACtBnC,cAAc;AAAA;AAGvB,OAAO,SAASqC,uBAAuB,GAAmE;EAAA;EACxG,MAAMN,QAAQ,GAAGhC,cAAc,EAAE;EACjC,MAAMuC,oBAAoB,GAAGtC,cAAc,CAAE2B,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACU,oBAAoB,CAAC;EACvF,MAAMC,uBAAuB,GAAG1C,WAAW,CACxCyC,oBAA6B,IAAK;IACjCP,QAAQ,CAACrB,8BAA8B,CAAC4B,oBAAoB,CAAC,CAAC;EAChE,CAAC,EACD,CAACP,QAAQ,CAAC,CACX;EACD,OAAO,CAACO,oBAAoB,EAAEC,uBAAuB,CAAC;AACxD;AAAC,IAVeF,uBAAuB;EAAA,QACpBtC,cAAc,EACFC,cAAc;AAAA;AAU7C,OAAO,SAASwC,oBAAoB,GAA0B;EAAA;EAC5D,MAAMT,QAAQ,GAAGhC,cAAc,EAAE;EACjC,MAAM0C,UAAU,GAAGN,eAAe,EAAE;EAEpC,MAAMO,mBAAmB,GAAG7C,WAAW,CAAC,MAAM;IAC5CkC,QAAQ,CAAClB,oBAAoB,CAAC;MAAEuB,cAAc,EAAE,CAACK;IAAW,CAAC,CAAC,CAAC;EACjE,CAAC,EAAE,CAACA,UAAU,EAAEV,QAAQ,CAAC,CAAC;EAE1B,OAAO,CAACU,UAAU,EAAEC,mBAAmB,CAAC;AAC1C;AAAC,IATeF,oBAAoB;EAAA,QACjBzC,cAAc,EACZoC,eAAe;AAAA;AASpC,OAAO,SAASQ,mBAAmB,GAAuD;EAAA;EACxF,MAAMZ,QAAQ,GAAGhC,cAAc,EAAE;EAEjC,MAAM6C,gBAAgB,GAAG5C,cAAc,CAAE2B,KAAK,IAAKkB,OAAO,CAAClB,KAAK,CAACC,IAAI,CAACkB,oBAAoB,CAAC,CAAC;EAE5F,MAAMC,mBAAmB,GAAGlD,WAAW,CACpCmD,mBAA4B,IAAK;IAChCjB,QAAQ,CAACpB,0BAA0B,CAAC;MAAEmC,oBAAoB,EAAEE;IAAoB,CAAC,CAAC,CAAC;EACrF,CAAC,EACD,CAACjB,QAAQ,CAAC,CACX;EAED,OAAO,CAACa,gBAAgB,EAAEG,mBAAmB,CAAC;AAChD;;AAEA;AACA;AACA;AAFA,IAfgBJ,mBAAmB;EAAA,QAChB5C,cAAc,EAENC,cAAc;AAAA;AAezC,OAAO,SAASiD,wBAAwB,GAAsE;EAAA;EAC5G,MAAMC,wBAAwB,GAAGlD,cAAc,CAAE2B,KAAK,IAAK;IACzD,OAAOA,KAAK,CAACC,IAAI,CAACuB,qBAAqB;EACzC,CAAC,CAAC;EACF,MAAMA,qBAAqB,GAAGrD,OAAO,CACnC,MAAOoD,wBAAwB,KAAK,MAAM,GAAG,MAAM,GAAG,IAAI5D,OAAO,CAAC4D,wBAAwB,EAAE,KAAM,CAAE,EACpG,CAACA,wBAAwB,CAAC,CAC3B;EAED,MAAMnB,QAAQ,GAAGhC,cAAc,EAAE;EACjC,MAAMqD,wBAAwB,GAAGvD,WAAW,CACzCsD,qBAAuC,IAAK;IAC3C,IAAIE,KAAsB;IAC1B,IAAI;MACFA,KAAK,GACHF,qBAAqB,KAAK,MAAM,GAAG,MAAM,GAAGvD,IAAI,CAAC0D,QAAQ,CAACH,qBAAqB,CAACI,QAAQ,CAAC,KAAM,CAAC,CAACC,QAAQ,CAAC;IAC9G,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,KAAK,GAAG,MAAM;IAChB;IACAtB,QAAQ,CACNhB,2BAA2B,CAAC;MAC1BoC,qBAAqB,EAAEE;IACzB,CAAC,CAAC,CACH;EACH,CAAC,EACD,CAACtB,QAAQ,CAAC,CACX;EAED,OAAOjC,OAAO,CACZ,MAAM,CAACqD,qBAAqB,EAAEC,wBAAwB,CAAC,EACvD,CAACA,wBAAwB,EAAED,qBAAqB,CAAC,CAClD;AACH;AAAC,IAhCeF,wBAAwB;EAAA,QACLjD,cAAc,EAQ9BD,cAAc;AAAA;AAyBjC,OAAO,SAAS2D,0BAA0B,GAAyD;EAAA;EACjG,MAAM3B,QAAQ,GAAGhC,cAAc,EAAE;EAEjC,MAAM4D,mBAAmB,GAAG3D,cAAc,CAAE2B,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACgC,uBAAuB,CAAC;EAEzF,MAAMC,sBAAsB,GAAGhE,WAAW,CACvCiE,sBAA+B,IAAK;IACnC/B,QAAQ,CAACvB,yBAAyB,CAAC;MAAEoD,uBAAuB,EAAEE;IAAuB,CAAC,CAAC,CAAC;EAC1F,CAAC,EACD,CAAC/B,QAAQ,CAAC,CACX;EAED,OAAO,CAAC4B,mBAAmB,EAAEE,sBAAsB,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AAHA,IAfgBH,0BAA0B;EAAA,QACvB3D,cAAc,EAEHC,cAAc;AAAA;AAgB5C,OAAO,SAAS+D,mCAAmC,CAACC,wBAAiC,EAAW;EAAA;EAC9F,MAAMC,eAAe,GAAGhB,wBAAwB,EAAE,CAAC,CAAC,CAAC;EACrD,OAAOnD,OAAO,CACZ,MAAOmE,eAAe,KAAK,MAAM,GAAGD,wBAAwB,GAAGC,eAAgB,EAC/E,CAACA,eAAe,EAAED,wBAAwB,CAAC,CAC5C;AACH;AAAC,IANeD,mCAAmC;EAAA,QACzBd,wBAAwB;AAAA;AAOlD,OAAO,SAASiB,qBAAqB,GAAyC;EAAA;EAC5E,MAAM;IAAEhD;EAAQ,CAAC,GAAGzB,YAAY,EAAE;EAClC,MAAMsC,QAAQ,GAAGhC,cAAc,EAAE;EACjC,MAAMoE,YAAY,GAAGnE,cAAc,CAAE2B,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACuC,YAAY,CAAC;EACvE,MAAMC,IAAI,GAAGvB,OAAO,CAAC3B,OAAO,IAAIxB,YAAY,CAAC2E,QAAQ,CAACnD,OAAO,CAAC,CAAC;EAC/D,MAAMoD,QAAQ,GAAGF,IAAI,GAAGzE,oBAAoB,GAAGwE,YAAY;EAE3D,MAAMI,eAAe,GAAG1E,WAAW,CAChCsE,YAAoB,IAAK;IACxBpC,QAAQ,CAACnB,kBAAkB,CAAC;MAAEuD;IAAa,CAAC,CAAC,CAAC;EAChD,CAAC,EACD,CAACpC,QAAQ,CAAC,CACX;EAED,OAAO,CAACuC,QAAQ,EAAEC,eAAe,CAAC;AACpC;AAAC,KAfeL,qBAAqB;EAAA,QACfzE,YAAY,EACfM,cAAc,EACVC,cAAc;AAAA;AAcrC,OAAO,SAASwE,eAAe,GAA2B;EAAA;EACxD,MAAMzC,QAAQ,GAAGhC,cAAc,EAAE;EACjC,OAAOF,WAAW,CACfoB,KAAY,IAAK;IAChBc,QAAQ,CAACxB,kBAAkB,CAAC;MAAEiB,eAAe,EAAER,cAAc,CAACC,KAAK;IAAE,CAAC,CAAC,CAAC;EAC1E,CAAC,EACD,CAACc,QAAQ,CAAC,CACX;AACH;AAAC,KAReyC,eAAe;EAAA,QACZzE,cAAc;AAAA;AASjC,OAAO,SAAS0E,yBAAyB,CAACvD,OAAkC,EAAW;EAAA;EACrF,MAAMwD,mBAAmB,GAAG1E,cAAc,CAAC;IAAA,IAAC;MAAE4B,IAAI,EAAE;QAAE+C;MAAO;IAAE,CAAC;IAAA,OAAKA,MAAM;EAAA,EAAC;EAE5E,OAAO7E,OAAO,CAAC,MAAM;IACnB,IAAI,CAACoB,OAAO,EAAE,OAAO,EAAE;IACvB,MAAM0D,QAAiB,GAAG,CAAAF,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAGxD,OAAO,CAAC,IACpD2D,MAAM,CAACC,MAAM,CAACJ,mBAAmB,CAACxD,OAAO,CAAC,CAAC,CAAC6D,GAAG,CAAE1B,KAAK,IAAK9B,gBAAgB,CAAC8B,KAAK,EAAEpD,cAAc,CAAC,CAAC,GACnG,EAAE;IACN,OAAO2E,QAAQ;EACjB,CAAC,EAAE,CAACF,mBAAmB,EAAExD,OAAO,CAAC,CAAC;AACpC;AAAC,KAVeuD,yBAAyB;EAAA,QACXzE,cAAc;AAAA;AAW5C,OAAO,SAASgF,kBAAkB,GAAY;EAAA;EAC5C,OAAOP,yBAAyB,CAAChF,YAAY,EAAE,CAACyB,OAAO,CAAC;AAC1D;AAAC,KAFe8D,kBAAkB;EAAA,QACzBP,yBAAyB,EAAChF,YAAY;AAAA;AAG/C,SAASwF,aAAa,CAACC,IAAU,EAAkB;EACjD,OAAO;IACLC,MAAM,EAAEnE,cAAc,CAACkE,IAAI,CAACC,MAAM,CAAC;IACnCC,MAAM,EAAEpE,cAAc,CAACkE,IAAI,CAACE,MAAM;EACpC,CAAC;AACH;AAEA,OAAO,SAASC,YAAY,GAAyB;EAAA;EACnD,MAAMtD,QAAQ,GAAGhC,cAAc,EAAE;EAEjC,OAAOF,WAAW,CACfqF,IAAU,IAAK;IACdnD,QAAQ,CAACzB,iBAAiB,CAAC;MAAEgF,cAAc,EAAEL,aAAa,CAACC,IAAI;IAAE,CAAC,CAAC,CAAC;EACtE,CAAC,EACD,CAACnD,QAAQ,CAAC,CACX;AACH;AAAC,KATesD,YAAY;EAAA,QACTtF,cAAc;AAAA;AAUjC,OAAO,SAASwF,oBAAoB,GAAY;EAAA;EAC9C,OAAOvF,cAAc,CAAE2B,KAAe,IAAKA,KAAK,CAACC,IAAI,CAAC4D,iBAAiB,CAAC;AAC1E;AAAC,KAFeD,oBAAoB;EAAA,QAC3BvF,cAAc;AAAA;AAGvB,OAAO,SAASyF,0BAA0B,GAA0B;EAAA;EAClE,MAAM1D,QAAQ,GAAGhC,cAAc,EAAE;EACjC,MAAM2F,uBAAuB,GAAG1F,cAAc,CAAE2B,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC8D,uBAAuB,CAAC;EAE7F,MAAMC,6BAA6B,GAAG9F,WAAW,CAAC,MAAM;IACtDkC,QAAQ,CAACtB,6BAA6B,CAAC;MAAEiF,uBAAuB,EAAE;IAAK,CAAC,CAAC,CAAC;EAC5E,CAAC,EAAE,CAAC3D,QAAQ,CAAC,CAAC;EAEd,OAAO,CAAC2D,uBAAuB,EAAEC,6BAA6B,CAAC;AACjE;;AAEA;AACA;AACA;AACA;AACA;AAJA,KAXgBF,0BAA0B;EAAA,QACvB1F,cAAc,EACCC,cAAc;AAAA;AAchD,OAAO,SAAS4F,kBAAkB,QAA0C;EAAA,IAAzC,CAACC,MAAM,EAAEC,MAAM,CAAiB;EACjE,IAAID,MAAM,CAAC3E,OAAO,KAAK4E,MAAM,CAAC5E,OAAO,EAAE,MAAM,IAAI6E,KAAK,CAAC,wBAAwB,CAAC;EAChF,IAAIF,MAAM,CAACG,MAAM,CAACF,MAAM,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACpE,IAAI,CAAC7F,oBAAoB,CAAC2F,MAAM,CAAC3E,OAAO,CAAC,EAAE,MAAM,IAAI6E,KAAK,CAAC,qCAAqC,CAAC;EAEjG,OAAO,IAAIxG,KAAK,CACdsG,MAAM,CAAC3E,OAAO,EACd1B,kBAAkB,CAAC;IAAEyG,cAAc,EAAE/F,oBAAoB,CAAC2F,MAAM,CAAC3E,OAAO,CAAC;IAAE2E,MAAM;IAAEC;EAAO,CAAC,CAAC,EAC5F,EAAE,EACF,QAAQ,EACR,YAAY,CACb;AACH;;AAEA;AACA;AACA;AACA,OAAO,SAASI,oBAAoB,GAAqB;EAAA;EACvD,MAAM;IAAEhF;EAAQ,CAAC,GAAGzB,YAAY,EAAE;EAClC,MAAMkF,MAAM,GAAGtE,sBAAsB,EAAE;;EAEvC;EACA,MAAM8F,WAAW,GAAGrG,OAAO,CAAC;IAAA;IAAA,OAAOoB,OAAO,4BAAGd,YAAY,CAACc,OAAO,CAAC,yEAAI,EAAE,GAAG,EAAE;EAAA,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;;EAE1F;EACA,MAAMkF,cAAgC,GAAGtG,OAAO,CAC9C,MACEoB,OAAO,GACH2D,MAAM,CAACwB,IAAI,CAAC1B,MAAM,CAAC,CAAC2B,OAAO,CAAEC,YAAY,IAAK;IAAA;IAC5C,MAAMtF,KAAK,GAAG0D,MAAM,CAAC4B,YAAY,CAAC;IAClC;IACA;MACE;MACA,0BAACpG,4BAA4B,CAACe,OAAO,CAAC,yEAAI,EAAE,CAC1C;MAAA,EACC6D,GAAG,CAAEyB,IAAI,IAAK;QACb,IAAIA,IAAI,CAACrF,OAAO,KAAKF,KAAK,CAACE,OAAO,EAAE;UAClC,OAAO,IAAI;QACb,CAAC,MAAM;UACL,OAAO,CAACqF,IAAI,EAAEvF,KAAK,CAAC;QACtB;MACF,CAAC,CAAC,CACDwF,MAAM,CAAEC,CAAC,IAA0BA,CAAC,KAAK,IAAI;IAAC;EAErD,CAAC,CAAC,GACF,EAAE,EACR,CAAC/B,MAAM,EAAEzD,OAAO,CAAC,CAClB;;EAED;EACA,MAAMyF,oBAAoB,GAAG3G,cAAc,CAAC;IAAA,IAAC;MAAE4B,IAAI,EAAE;QAAEgF;MAAM;IAAE,CAAC;IAAA,OAAKA,KAAK;EAAA,EAAC;EAE3E,MAAMC,SAA2B,GAAG/G,OAAO,CAAC,MAAM;IAChD,IAAI,CAACoB,OAAO,IAAI,CAACyF,oBAAoB,EAAE,OAAO,EAAE;IAChD,MAAMG,QAAQ,GAAGH,oBAAoB,CAACzF,OAAO,CAAC;IAC9C,IAAI,CAAC4F,QAAQ,EAAE,OAAO,EAAE;IAExB,OAAOjC,MAAM,CAACwB,IAAI,CAACS,QAAQ,CAAC,CAAC/B,GAAG,CAAEgC,MAAM,IAAK;MAC3C,OAAO,CAACxF,gBAAgB,CAACuF,QAAQ,CAACC,MAAM,CAAC,CAAC5B,MAAM,CAAC,EAAE5D,gBAAgB,CAACuF,QAAQ,CAACC,MAAM,CAAC,CAAC3B,MAAM,CAAC,CAAC;IAC/F,CAAC,CAAC;EACJ,CAAC,EAAE,CAACuB,oBAAoB,EAAEzF,OAAO,CAAC,CAAC;EAEnC,MAAM8F,YAAY,GAAGlH,OAAO,CAC1B,MAAM+G,SAAS,CAACI,MAAM,CAACb,cAAc,CAAC,CAACa,MAAM,CAACd,WAAW,CAAC,EAC1D,CAACC,cAAc,EAAED,WAAW,EAAEU,SAAS,CAAC,CACzC;EAED,OAAO/G,OAAO,CAAC,MAAM;IACnB;IACA,MAAMoH,KAAK,GAAGF,YAAY,CAACG,MAAM,CAAoC,CAACC,IAAI,YAAuB;MAAA,IAArB,CAACvB,MAAM,EAAEC,MAAM,CAAC;MAC1F,MAAMuB,MAAM,GAAGxB,MAAM,CAACyB,WAAW,CAACxB,MAAM,CAAC;MACzC,MAAMyB,GAAG,GAAGF,MAAM,GAAI,GAAExB,MAAM,CAAC1E,OAAQ,IAAG2E,MAAM,CAAC3E,OAAQ,EAAC,GAAI,GAAE2E,MAAM,CAAC3E,OAAQ,IAAG0E,MAAM,CAAC1E,OAAQ,EAAC;MAClG,IAAIiG,IAAI,CAACG,GAAG,CAAC,EAAE,OAAOH,IAAI;MAC1BA,IAAI,CAACG,GAAG,CAAC,GAAGF,MAAM,GAAG,CAACxB,MAAM,EAAEC,MAAM,CAAC,GAAG,CAACA,MAAM,EAAED,MAAM,CAAC;MACxD,OAAOuB,IAAI;IACb,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAOvC,MAAM,CAACwB,IAAI,CAACa,KAAK,CAAC,CAACnC,GAAG,CAAEwC,GAAG,IAAKL,KAAK,CAACK,GAAG,CAAC,CAAC;EACpD,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;AACpB;AAAC,KA9Ded,oBAAoB;EAAA,QACdzG,YAAY,EACjBY,sBAAsB,EA+BRL,cAAc;AAAA"},"metadata":{},"sourceType":"module"}