{"ast":null,"code":"var _s = $RefreshSig$();\nimport gql from 'graphql-tag';\nimport { useMemo } from 'react';\nimport { useTrendingTokensQuery } from './__generated__/types-and-hooks';\nimport { chainIdToBackendName, unwrapToken } from './util';\ngql`\n  query TrendingTokens($chain: Chain!) {\n    topTokens(pageSize: 4, page: 1, chain: $chain, orderBy: VOLUME) {\n      id\n      decimals\n      name\n      chain\n      standard\n      address\n      symbol\n      market(currency: USD) {\n        id\n        price {\n          id\n          value\n          currency\n        }\n        pricePercentChange(duration: DAY) {\n          id\n          value\n        }\n        volume24H: volume(duration: DAY) {\n          id\n          value\n          currency\n        }\n      }\n      project {\n        id\n        logoUrl\n        safetyLevel\n      }\n    }\n  }\n`;\nexport default function useTrendingTokens(chainId) {\n  _s();\n  const chain = chainIdToBackendName(chainId);\n  const {\n    data,\n    loading\n  } = useTrendingTokensQuery({\n    variables: {\n      chain\n    }\n  });\n  return useMemo(() => {\n    var _data$topTokens;\n    return {\n      data: data === null || data === void 0 ? void 0 : (_data$topTokens = data.topTokens) === null || _data$topTokens === void 0 ? void 0 : _data$topTokens.map(token => unwrapToken(chainId !== null && chainId !== void 0 ? chainId : 1, token)),\n      loading\n    };\n  }, [chainId, data === null || data === void 0 ? void 0 : data.topTokens, loading]);\n}\n_s(useTrendingTokens, \"m/edMlIPi0A2tyuy6iFFsuICnwc=\", false, function () {\n  return [useTrendingTokensQuery];\n});","map":{"version":3,"names":["gql","useMemo","useTrendingTokensQuery","chainIdToBackendName","unwrapToken","useTrendingTokens","chainId","chain","data","loading","variables","topTokens","map","token"],"sources":["/home/diep/freelance/interface/src/graphql/data/TrendingTokens.ts"],"sourcesContent":["import gql from 'graphql-tag'\nimport { useMemo } from 'react'\n\nimport { useTrendingTokensQuery } from './__generated__/types-and-hooks'\nimport { chainIdToBackendName, unwrapToken } from './util'\n\ngql`\n  query TrendingTokens($chain: Chain!) {\n    topTokens(pageSize: 4, page: 1, chain: $chain, orderBy: VOLUME) {\n      id\n      decimals\n      name\n      chain\n      standard\n      address\n      symbol\n      market(currency: USD) {\n        id\n        price {\n          id\n          value\n          currency\n        }\n        pricePercentChange(duration: DAY) {\n          id\n          value\n        }\n        volume24H: volume(duration: DAY) {\n          id\n          value\n          currency\n        }\n      }\n      project {\n        id\n        logoUrl\n        safetyLevel\n      }\n    }\n  }\n`\n\nexport default function useTrendingTokens(chainId?: number) {\n  const chain = chainIdToBackendName(chainId)\n  const { data, loading } = useTrendingTokensQuery({ variables: { chain } })\n\n  return useMemo(\n    () => ({ data: data?.topTokens?.map((token) => unwrapToken(chainId ?? 1, token)), loading }),\n    [chainId, data?.topTokens, loading]\n  )\n}\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,aAAa;AAC7B,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE,SAASC,oBAAoB,EAAEC,WAAW,QAAQ,QAAQ;AAE1DJ,GAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASK,iBAAiB,CAACC,OAAgB,EAAE;EAAA;EAC1D,MAAMC,KAAK,GAAGJ,oBAAoB,CAACG,OAAO,CAAC;EAC3C,MAAM;IAAEE,IAAI;IAAEC;EAAQ,CAAC,GAAGP,sBAAsB,CAAC;IAAEQ,SAAS,EAAE;MAAEH;IAAM;EAAE,CAAC,CAAC;EAE1E,OAAON,OAAO,CACZ;IAAA;IAAA,OAAO;MAAEO,IAAI,EAAEA,IAAI,aAAJA,IAAI,0CAAJA,IAAI,CAAEG,SAAS,oDAAf,gBAAiBC,GAAG,CAAEC,KAAK,IAAKT,WAAW,CAACE,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,EAAEO,KAAK,CAAC,CAAC;MAAEJ;IAAQ,CAAC;EAAA,CAAC,EAC5F,CAACH,OAAO,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,SAAS,EAAEF,OAAO,CAAC,CACpC;AACH;AAAC,GARuBJ,iBAAiB;EAAA,QAEbH,sBAAsB;AAAA"},"metadata":{},"sourceType":"module"}