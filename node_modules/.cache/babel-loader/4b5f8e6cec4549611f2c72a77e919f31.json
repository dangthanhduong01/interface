{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar LogEvent_1 = __importDefault(require(\"./LogEvent\"));\nvar StatsigNetwork_1 = require(\"./StatsigNetwork\");\nvar Constants_1 = require(\"./utils/Constants\");\nvar StatsigAsyncStorage_1 = __importDefault(require(\"./utils/StatsigAsyncStorage\"));\nvar StatsigLocalStorage_1 = __importDefault(require(\"./utils/StatsigLocalStorage\"));\nvar INTERNAL_EVENT_PREFIX = 'statsig::';\nvar CONFIG_EXPOSURE_EVENT = INTERNAL_EVENT_PREFIX + 'config_exposure';\nvar LAYER_EXPOSURE_EVENT = INTERNAL_EVENT_PREFIX + 'layer_exposure';\nvar GATE_EXPOSURE_EVENT = INTERNAL_EVENT_PREFIX + 'gate_exposure';\nvar LOG_FAILURE_EVENT = INTERNAL_EVENT_PREFIX + 'log_event_failed';\nvar APP_ERROR_EVENT = INTERNAL_EVENT_PREFIX + 'app_error';\nvar APP_METRICS_PAGE_LOAD_EVENT = INTERNAL_EVENT_PREFIX + 'app_metrics::page_load_time';\nvar APP_METRICS_DOM_INTERACTIVE_EVENT = INTERNAL_EVENT_PREFIX + 'app_metrics::dom_interactive_time';\nvar DIAGNOSTICS_EVENT = INTERNAL_EVENT_PREFIX + 'diagnostics';\nvar MS_RETRY_LOGS_CUTOFF = 5 * 24 * 60 * 60 * 1000;\nvar MAX_BATCHES_TO_RETRY = 100;\nvar MAX_FAILED_EVENTS = 1000;\nvar MAX_LOCAL_STORAGE_SIZE = 1024 * MAX_FAILED_EVENTS;\nvar MAX_ERRORS_TO_LOG = 10;\nvar StatsigLogger = /** @class */function () {\n  function StatsigLogger(sdkInternal) {\n    this.failedLogEventCount = 0;\n    this.sdkInternal = sdkInternal;\n    this.queue = [];\n    this.flushInterval = null;\n    this.loggedErrors = new Set();\n    this.failedLogEvents = [];\n    this.exposureDedupeKeys = {};\n    this.failedLogEventCount = 0;\n    this.init();\n  }\n  StatsigLogger.prototype.init = function () {\n    var _this = this;\n    if (typeof window !== 'undefined' && typeof window.addEventListener === 'function') {\n      window.addEventListener('blur', function () {\n        return _this.flush(true);\n      });\n      window.addEventListener('beforeunload', function () {\n        return _this.flush(true);\n      });\n      window.addEventListener('load', function () {\n        setTimeout(function () {\n          return _this.flush();\n        }, 100);\n        setTimeout(function () {\n          return _this.flush();\n        }, 1000);\n      });\n    }\n    if (typeof document !== 'undefined' && typeof document.addEventListener === 'function') {\n      document.addEventListener('visibilitychange', function () {\n        _this.flush(document.visibilityState !== 'visible');\n      });\n    }\n    if (typeof window === 'undefined' || window == null) {\n      // dont set the flush interval outside of client browser environments\n      return;\n    }\n    if (this.sdkInternal.getOptions().getLocalModeEnabled()) {\n      // unnecessary interval in local mode since logs dont flush anyway\n      return;\n    }\n    var me = this;\n    this.flushInterval = setInterval(function () {\n      me.flush();\n    }, this.sdkInternal.getOptions().getLoggingIntervalMillis());\n    // Quick flush\n    setTimeout(function () {\n      return _this.flush();\n    }, 100);\n    setTimeout(function () {\n      return _this.flush();\n    }, 1000);\n  };\n  StatsigLogger.prototype.log = function (event) {\n    try {\n      if (!this.sdkInternal.getOptions().getDisableCurrentPageLogging() && typeof window !== 'undefined' && window != null && typeof window.location === 'object' && typeof window.location.href === 'string') {\n        // https://stackoverflow.com/questions/6257463/how-to-get-the-url-without-any-parameters-in-javascript\n        var parts = window.location.href.split(/[?#]/);\n        if ((parts === null || parts === void 0 ? void 0 : parts.length) > 0) {\n          event.addStatsigMetadata('currentPage', parts[0]);\n        }\n      }\n    } catch (_e) {}\n    this.queue.push(event.toJsonObject());\n    if (this.queue.length >= this.sdkInternal.getOptions().getLoggingBufferMaxSize()) {\n      this.flush();\n    }\n  };\n  StatsigLogger.prototype.resetDedupeKeys = function () {\n    this.exposureDedupeKeys = {};\n  };\n  StatsigLogger.prototype.shouldLogExposure = function (key) {\n    var lastTime = this.exposureDedupeKeys[key];\n    var now = Date.now();\n    if (lastTime == null) {\n      this.exposureDedupeKeys[key] = now;\n      return true;\n    }\n    if (lastTime >= now - 600 * 1000) {\n      return false;\n    }\n    this.exposureDedupeKeys[key] = now;\n    return true;\n  };\n  StatsigLogger.prototype.logGateExposure = function (user, gateName, gateValue, ruleID, secondaryExposures, details, isManualExposure) {\n    var dedupeKey = gateName + String(gateValue) + ruleID + details.reason;\n    if (!this.shouldLogExposure(dedupeKey)) {\n      return;\n    }\n    var metadata = {\n      gate: gateName,\n      gateValue: String(gateValue),\n      ruleID: ruleID,\n      reason: details.reason,\n      time: details.time\n    };\n    if (isManualExposure) {\n      metadata['isManualExposure'] = 'true';\n    }\n    var gateExposure = new LogEvent_1.default(GATE_EXPOSURE_EVENT);\n    gateExposure.setUser(user);\n    gateExposure.setMetadata(metadata);\n    gateExposure.setSecondaryExposures(secondaryExposures);\n    this.log(gateExposure);\n  };\n  StatsigLogger.prototype.logConfigExposure = function (user, configName, ruleID, secondaryExposures, details, isManualExposure) {\n    var dedupeKey = configName + ruleID + details.reason;\n    if (!this.shouldLogExposure(dedupeKey)) {\n      return;\n    }\n    var metadata = {\n      config: configName,\n      ruleID: ruleID,\n      reason: details.reason,\n      time: details.time\n    };\n    if (isManualExposure) {\n      metadata['isManualExposure'] = 'true';\n    }\n    var configExposure = new LogEvent_1.default(CONFIG_EXPOSURE_EVENT);\n    configExposure.setUser(user);\n    configExposure.setMetadata(metadata);\n    configExposure.setSecondaryExposures(secondaryExposures);\n    this.log(configExposure);\n  };\n  StatsigLogger.prototype.logLayerExposure = function (user, configName, ruleID, secondaryExposures, allocatedExperiment, parameterName, isExplicitParameter, details, isManualExposure) {\n    var dedupeKey = [configName, ruleID, allocatedExperiment, parameterName, String(isExplicitParameter), details.reason].join('|');\n    if (!this.shouldLogExposure(dedupeKey)) {\n      return;\n    }\n    var metadata = {\n      config: configName,\n      ruleID: ruleID,\n      allocatedExperiment: allocatedExperiment,\n      parameterName: parameterName,\n      isExplicitParameter: String(isExplicitParameter),\n      reason: details.reason,\n      time: details.time\n    };\n    if (isManualExposure) {\n      metadata['isManualExposure'] = 'true';\n    }\n    var configExposure = new LogEvent_1.default(LAYER_EXPOSURE_EVENT);\n    configExposure.setUser(user);\n    configExposure.setMetadata(metadata);\n    configExposure.setSecondaryExposures(secondaryExposures);\n    this.log(configExposure);\n  };\n  StatsigLogger.prototype.logAppError = function (user, message, metadata) {\n    var trimmedMessage = message.substring(0, 128);\n    if (this.loggedErrors.has(trimmedMessage) || this.loggedErrors.size > MAX_ERRORS_TO_LOG) {\n      return;\n    }\n    var errorEvent = new LogEvent_1.default(APP_ERROR_EVENT);\n    errorEvent.setUser(user);\n    errorEvent.setValue(trimmedMessage);\n    errorEvent.setMetadata(metadata);\n    this.log(errorEvent);\n    this.loggedErrors.add(trimmedMessage);\n  };\n  StatsigLogger.prototype.logDiagnostics = function (user, diagnostics) {\n    var latencyEvent = new LogEvent_1.default(DIAGNOSTICS_EVENT);\n    latencyEvent.setUser(user);\n    latencyEvent.setMetadata(diagnostics.getMarkers());\n    this.log(latencyEvent);\n  };\n  StatsigLogger.prototype.logAppMetrics = function (user) {\n    var _a;\n    if (typeof ((_a = window === null || window === void 0 ? void 0 : window.performance) === null || _a === void 0 ? void 0 : _a.getEntriesByType) !== 'function') {\n      return;\n    }\n    var entries = window.performance.getEntriesByType('navigation');\n    if (!entries || entries.length < 1) {\n      return;\n    }\n    var navEntry = entries[0];\n    var metadata = {\n      statsig_dimensions: {\n        url: navEntry.name\n      }\n    };\n    var latencyEvent = new LogEvent_1.default(APP_METRICS_PAGE_LOAD_EVENT);\n    latencyEvent.setUser(user);\n    latencyEvent.setValue(navEntry.duration);\n    latencyEvent.setMetadata(metadata);\n    this.log(latencyEvent);\n    var domInteractiveEvent = new LogEvent_1.default(APP_METRICS_DOM_INTERACTIVE_EVENT);\n    domInteractiveEvent.setUser(user);\n    domInteractiveEvent.setValue(navEntry.domInteractive - navEntry.startTime);\n    domInteractiveEvent.setMetadata(metadata);\n    this.log(domInteractiveEvent);\n  };\n  StatsigLogger.prototype.shutdown = function () {\n    if (this.flushInterval) {\n      clearInterval(this.flushInterval);\n      this.flushInterval = null;\n    }\n    this.flush(true);\n  };\n  StatsigLogger.prototype.flush = function (isClosing) {\n    var _this = this;\n    if (isClosing === void 0) {\n      isClosing = false;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    var oldQueue = this.queue;\n    this.queue = [];\n    if (isClosing && !this.sdkInternal.getNetwork().supportsKeepalive() && typeof navigator !== 'undefined' && navigator != null &&\n    // @ts-ignore\n    navigator.sendBeacon) {\n      var beacon = this.sdkInternal.getNetwork().sendLogBeacon({\n        events: oldQueue,\n        statsigMetadata: this.sdkInternal.getStatsigMetadata()\n      });\n      if (!beacon) {\n        this.queue = oldQueue.concat(this.queue);\n        if (this.queue.length > 0) {\n          this.addFailedRequest({\n            events: this.queue,\n            statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n            time: Date.now()\n          });\n          this.queue = [];\n        }\n        this.saveFailedRequests();\n      }\n      return;\n    }\n    var processor = this;\n    this.sdkInternal.getNetwork().postToEndpoint(StatsigNetwork_1.StatsigEndpoint.Rgstr, {\n      events: oldQueue,\n      statsigMetadata: this.sdkInternal.getStatsigMetadata()\n    }, 3 /* retries */, 1000 /* backoff */, isClosing /* useKeepalive */).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n    }).catch(function (error) {\n      if (typeof error.text === 'function') {\n        error.text().then(function (errorText) {\n          var logFailureEvent = new LogEvent_1.default(LOG_FAILURE_EVENT);\n          logFailureEvent.setMetadata({\n            error: error.status + \": \" + errorText\n          });\n          logFailureEvent.setUser(processor.sdkInternal.getCurrentUser());\n          processor.appendFailureLog(logFailureEvent, oldQueue);\n        });\n      } else {\n        var logFailureEvent = new LogEvent_1.default(LOG_FAILURE_EVENT);\n        logFailureEvent.setMetadata({\n          error: error.message\n        });\n        logFailureEvent.setUser(processor.sdkInternal.getCurrentUser());\n        processor.appendFailureLog(logFailureEvent, oldQueue);\n      }\n    }).finally(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!isClosing) return [3 /*break*/, 2];\n              if (this.queue.length > 0) {\n                this.addFailedRequest({\n                  events: this.queue,\n                  statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n                  time: Date.now()\n                });\n                // on app background/window blur, save unsent events as a request and clean up the queue (in case app foregrounds)\n                this.queue = [];\n              }\n              return [4 /*yield*/, processor.saveFailedRequests()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n\n  StatsigLogger.prototype.saveFailedRequests = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var requestsCopy;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(this.failedLogEvents.length > 0)) return [3 /*break*/, 3];\n            requestsCopy = JSON.stringify(this.failedLogEvents);\n            if (requestsCopy.length > MAX_LOCAL_STORAGE_SIZE) {\n              this.clearLocalStorageRequests();\n              return [2 /*return*/];\n            }\n\n            if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 2];\n            return [4 /*yield*/, StatsigAsyncStorage_1.default.setItemAsync(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY, requestsCopy)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n          case 2:\n            StatsigLocalStorage_1.default.setItem(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY, requestsCopy);\n            _a.label = 3;\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  StatsigLogger.prototype.sendSavedRequests = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var failedRequests, fireAndForget, requestBodies, _loop_1, this_1, _i, requestBodies_1, requestBody;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            fireAndForget = false;\n            if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 2];\n            return [4 /*yield*/, StatsigAsyncStorage_1.default.getItemAsync(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY)];\n          case 1:\n            failedRequests = _a.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            failedRequests = StatsigLocalStorage_1.default.getItem(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY);\n            _a.label = 3;\n          case 3:\n            if (failedRequests == null) {\n              this.clearLocalStorageRequests();\n              return [2 /*return*/];\n            }\n\n            if (failedRequests.length > MAX_LOCAL_STORAGE_SIZE) {\n              fireAndForget = true;\n            }\n            requestBodies = [];\n            try {\n              requestBodies = JSON.parse(failedRequests);\n              _loop_1 = function (requestBody) {\n                if (requestBody != null && requestBody.events && Array.isArray(requestBody.events)) {\n                  this_1.sdkInternal.getNetwork().postToEndpoint(StatsigNetwork_1.StatsigEndpoint.Rgstr, requestBody).then(function (response) {\n                    if (!response.ok) {\n                      throw Error(response.status + '');\n                    }\n                  }).catch(function (_e) {\n                    if (fireAndForget) {\n                      return;\n                    }\n                    _this.addFailedRequest(requestBody);\n                  });\n                }\n              };\n              this_1 = this;\n              for (_i = 0, requestBodies_1 = requestBodies; _i < requestBodies_1.length; _i++) {\n                requestBody = requestBodies_1[_i];\n                _loop_1(requestBody);\n              }\n            } catch (_e) {} finally {\n              this.clearLocalStorageRequests();\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  StatsigLogger.prototype.addFailedRequest = function (requestBody) {\n    if (requestBody.time < Date.now() - MS_RETRY_LOGS_CUTOFF) {\n      return;\n    }\n    if (this.failedLogEvents.length > MAX_BATCHES_TO_RETRY) {\n      return;\n    }\n    var additionalEvents = requestBody.events.length;\n    if (this.failedLogEventCount + additionalEvents > MAX_FAILED_EVENTS) {\n      return;\n    }\n    this.failedLogEvents.push(requestBody);\n    this.failedLogEventCount += additionalEvents;\n  };\n  StatsigLogger.prototype.clearLocalStorageRequests = function () {\n    if (StatsigAsyncStorage_1.default.asyncStorage) {\n      StatsigAsyncStorage_1.default.removeItemAsync(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY);\n    } else {\n      StatsigLocalStorage_1.default.removeItem(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY);\n    }\n  };\n  StatsigLogger.prototype.appendFailureLog = function (event, queue) {\n    if (this.loggedErrors.has(event.getName())) {\n      return;\n    }\n    this.loggedErrors.add(event.getName());\n    queue.push(event);\n    this.failedLogEvents.push({\n      events: queue,\n      statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n      time: Date.now()\n    });\n    this.saveFailedRequests();\n  };\n  return StatsigLogger;\n}();\nexports.default = StatsigLogger;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","LogEvent_1","require","StatsigNetwork_1","Constants_1","StatsigAsyncStorage_1","StatsigLocalStorage_1","INTERNAL_EVENT_PREFIX","CONFIG_EXPOSURE_EVENT","LAYER_EXPOSURE_EVENT","GATE_EXPOSURE_EVENT","LOG_FAILURE_EVENT","APP_ERROR_EVENT","APP_METRICS_PAGE_LOAD_EVENT","APP_METRICS_DOM_INTERACTIVE_EVENT","DIAGNOSTICS_EVENT","MS_RETRY_LOGS_CUTOFF","MAX_BATCHES_TO_RETRY","MAX_FAILED_EVENTS","MAX_LOCAL_STORAGE_SIZE","MAX_ERRORS_TO_LOG","StatsigLogger","sdkInternal","failedLogEventCount","queue","flushInterval","loggedErrors","Set","failedLogEvents","exposureDedupeKeys","init","prototype","_this","window","addEventListener","flush","setTimeout","document","visibilityState","getOptions","getLocalModeEnabled","me","setInterval","getLoggingIntervalMillis","log","event","getDisableCurrentPageLogging","location","href","parts","split","addStatsigMetadata","_e","toJsonObject","getLoggingBufferMaxSize","resetDedupeKeys","shouldLogExposure","key","lastTime","now","Date","logGateExposure","user","gateName","gateValue","ruleID","secondaryExposures","details","isManualExposure","dedupeKey","String","reason","metadata","gate","time","gateExposure","default","setUser","setMetadata","setSecondaryExposures","logConfigExposure","configName","config","configExposure","logLayerExposure","allocatedExperiment","parameterName","isExplicitParameter","join","logAppError","message","trimmedMessage","substring","has","size","errorEvent","setValue","add","logDiagnostics","diagnostics","latencyEvent","getMarkers","logAppMetrics","_a","performance","getEntriesByType","entries","navEntry","statsig_dimensions","url","name","duration","domInteractiveEvent","domInteractive","startTime","shutdown","clearInterval","isClosing","oldQueue","getNetwork","supportsKeepalive","navigator","sendBeacon","beacon","sendLogBeacon","events","statsigMetadata","getStatsigMetadata","concat","addFailedRequest","saveFailedRequests","processor","postToEndpoint","StatsigEndpoint","Rgstr","response","ok","catch","error","text","errorText","logFailureEvent","status","getCurrentUser","appendFailureLog","finally","requestsCopy","JSON","stringify","clearLocalStorageRequests","asyncStorage","setItemAsync","STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY","setItem","sendSavedRequests","failedRequests","fireAndForget","requestBodies","_loop_1","this_1","_i","requestBodies_1","requestBody","getItemAsync","getItem","parse","Array","isArray","Error","additionalEvents","removeItemAsync","removeItem","getName"],"sources":["/home/diep/freelance/interface/node_modules/statsig-js/dist/StatsigLogger.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LogEvent_1 = __importDefault(require(\"./LogEvent\"));\nvar StatsigNetwork_1 = require(\"./StatsigNetwork\");\nvar Constants_1 = require(\"./utils/Constants\");\nvar StatsigAsyncStorage_1 = __importDefault(require(\"./utils/StatsigAsyncStorage\"));\nvar StatsigLocalStorage_1 = __importDefault(require(\"./utils/StatsigLocalStorage\"));\nvar INTERNAL_EVENT_PREFIX = 'statsig::';\nvar CONFIG_EXPOSURE_EVENT = INTERNAL_EVENT_PREFIX + 'config_exposure';\nvar LAYER_EXPOSURE_EVENT = INTERNAL_EVENT_PREFIX + 'layer_exposure';\nvar GATE_EXPOSURE_EVENT = INTERNAL_EVENT_PREFIX + 'gate_exposure';\nvar LOG_FAILURE_EVENT = INTERNAL_EVENT_PREFIX + 'log_event_failed';\nvar APP_ERROR_EVENT = INTERNAL_EVENT_PREFIX + 'app_error';\nvar APP_METRICS_PAGE_LOAD_EVENT = INTERNAL_EVENT_PREFIX + 'app_metrics::page_load_time';\nvar APP_METRICS_DOM_INTERACTIVE_EVENT = INTERNAL_EVENT_PREFIX + 'app_metrics::dom_interactive_time';\nvar DIAGNOSTICS_EVENT = INTERNAL_EVENT_PREFIX + 'diagnostics';\nvar MS_RETRY_LOGS_CUTOFF = 5 * 24 * 60 * 60 * 1000;\nvar MAX_BATCHES_TO_RETRY = 100;\nvar MAX_FAILED_EVENTS = 1000;\nvar MAX_LOCAL_STORAGE_SIZE = 1024 * MAX_FAILED_EVENTS;\nvar MAX_ERRORS_TO_LOG = 10;\nvar StatsigLogger = /** @class */ (function () {\n    function StatsigLogger(sdkInternal) {\n        this.failedLogEventCount = 0;\n        this.sdkInternal = sdkInternal;\n        this.queue = [];\n        this.flushInterval = null;\n        this.loggedErrors = new Set();\n        this.failedLogEvents = [];\n        this.exposureDedupeKeys = {};\n        this.failedLogEventCount = 0;\n        this.init();\n    }\n    StatsigLogger.prototype.init = function () {\n        var _this = this;\n        if (typeof window !== 'undefined' &&\n            typeof window.addEventListener === 'function') {\n            window.addEventListener('blur', function () { return _this.flush(true); });\n            window.addEventListener('beforeunload', function () { return _this.flush(true); });\n            window.addEventListener('load', function () {\n                setTimeout(function () { return _this.flush(); }, 100);\n                setTimeout(function () { return _this.flush(); }, 1000);\n            });\n        }\n        if (typeof document !== 'undefined' &&\n            typeof document.addEventListener === 'function') {\n            document.addEventListener('visibilitychange', function () {\n                _this.flush(document.visibilityState !== 'visible');\n            });\n        }\n        if (typeof window === 'undefined' || window == null) {\n            // dont set the flush interval outside of client browser environments\n            return;\n        }\n        if (this.sdkInternal.getOptions().getLocalModeEnabled()) {\n            // unnecessary interval in local mode since logs dont flush anyway\n            return;\n        }\n        var me = this;\n        this.flushInterval = setInterval(function () {\n            me.flush();\n        }, this.sdkInternal.getOptions().getLoggingIntervalMillis());\n        // Quick flush\n        setTimeout(function () { return _this.flush(); }, 100);\n        setTimeout(function () { return _this.flush(); }, 1000);\n    };\n    StatsigLogger.prototype.log = function (event) {\n        try {\n            if (!this.sdkInternal.getOptions().getDisableCurrentPageLogging() &&\n                typeof window !== 'undefined' &&\n                window != null &&\n                typeof window.location === 'object' &&\n                typeof window.location.href === 'string') {\n                // https://stackoverflow.com/questions/6257463/how-to-get-the-url-without-any-parameters-in-javascript\n                var parts = window.location.href.split(/[?#]/);\n                if ((parts === null || parts === void 0 ? void 0 : parts.length) > 0) {\n                    event.addStatsigMetadata('currentPage', parts[0]);\n                }\n            }\n        }\n        catch (_e) { }\n        this.queue.push(event.toJsonObject());\n        if (this.queue.length >=\n            this.sdkInternal.getOptions().getLoggingBufferMaxSize()) {\n            this.flush();\n        }\n    };\n    StatsigLogger.prototype.resetDedupeKeys = function () {\n        this.exposureDedupeKeys = {};\n    };\n    StatsigLogger.prototype.shouldLogExposure = function (key) {\n        var lastTime = this.exposureDedupeKeys[key];\n        var now = Date.now();\n        if (lastTime == null) {\n            this.exposureDedupeKeys[key] = now;\n            return true;\n        }\n        if (lastTime >= now - 600 * 1000) {\n            return false;\n        }\n        this.exposureDedupeKeys[key] = now;\n        return true;\n    };\n    StatsigLogger.prototype.logGateExposure = function (user, gateName, gateValue, ruleID, secondaryExposures, details, isManualExposure) {\n        var dedupeKey = gateName + String(gateValue) + ruleID + details.reason;\n        if (!this.shouldLogExposure(dedupeKey)) {\n            return;\n        }\n        var metadata = {\n            gate: gateName,\n            gateValue: String(gateValue),\n            ruleID: ruleID,\n            reason: details.reason,\n            time: details.time,\n        };\n        if (isManualExposure) {\n            metadata['isManualExposure'] = 'true';\n        }\n        var gateExposure = new LogEvent_1.default(GATE_EXPOSURE_EVENT);\n        gateExposure.setUser(user);\n        gateExposure.setMetadata(metadata);\n        gateExposure.setSecondaryExposures(secondaryExposures);\n        this.log(gateExposure);\n    };\n    StatsigLogger.prototype.logConfigExposure = function (user, configName, ruleID, secondaryExposures, details, isManualExposure) {\n        var dedupeKey = configName + ruleID + details.reason;\n        if (!this.shouldLogExposure(dedupeKey)) {\n            return;\n        }\n        var metadata = {\n            config: configName,\n            ruleID: ruleID,\n            reason: details.reason,\n            time: details.time,\n        };\n        if (isManualExposure) {\n            metadata['isManualExposure'] = 'true';\n        }\n        var configExposure = new LogEvent_1.default(CONFIG_EXPOSURE_EVENT);\n        configExposure.setUser(user);\n        configExposure.setMetadata(metadata);\n        configExposure.setSecondaryExposures(secondaryExposures);\n        this.log(configExposure);\n    };\n    StatsigLogger.prototype.logLayerExposure = function (user, configName, ruleID, secondaryExposures, allocatedExperiment, parameterName, isExplicitParameter, details, isManualExposure) {\n        var dedupeKey = [\n            configName,\n            ruleID,\n            allocatedExperiment,\n            parameterName,\n            String(isExplicitParameter),\n            details.reason,\n        ].join('|');\n        if (!this.shouldLogExposure(dedupeKey)) {\n            return;\n        }\n        var metadata = {\n            config: configName,\n            ruleID: ruleID,\n            allocatedExperiment: allocatedExperiment,\n            parameterName: parameterName,\n            isExplicitParameter: String(isExplicitParameter),\n            reason: details.reason,\n            time: details.time,\n        };\n        if (isManualExposure) {\n            metadata['isManualExposure'] = 'true';\n        }\n        var configExposure = new LogEvent_1.default(LAYER_EXPOSURE_EVENT);\n        configExposure.setUser(user);\n        configExposure.setMetadata(metadata);\n        configExposure.setSecondaryExposures(secondaryExposures);\n        this.log(configExposure);\n    };\n    StatsigLogger.prototype.logAppError = function (user, message, metadata) {\n        var trimmedMessage = message.substring(0, 128);\n        if (this.loggedErrors.has(trimmedMessage) ||\n            this.loggedErrors.size > MAX_ERRORS_TO_LOG) {\n            return;\n        }\n        var errorEvent = new LogEvent_1.default(APP_ERROR_EVENT);\n        errorEvent.setUser(user);\n        errorEvent.setValue(trimmedMessage);\n        errorEvent.setMetadata(metadata);\n        this.log(errorEvent);\n        this.loggedErrors.add(trimmedMessage);\n    };\n    StatsigLogger.prototype.logDiagnostics = function (user, diagnostics) {\n        var latencyEvent = new LogEvent_1.default(DIAGNOSTICS_EVENT);\n        latencyEvent.setUser(user);\n        latencyEvent.setMetadata(diagnostics.getMarkers());\n        this.log(latencyEvent);\n    };\n    StatsigLogger.prototype.logAppMetrics = function (user) {\n        var _a;\n        if (typeof ((_a = window === null || window === void 0 ? void 0 : window.performance) === null || _a === void 0 ? void 0 : _a.getEntriesByType) !== 'function') {\n            return;\n        }\n        var entries = window.performance.getEntriesByType('navigation');\n        if (!entries || entries.length < 1) {\n            return;\n        }\n        var navEntry = entries[0];\n        var metadata = {\n            statsig_dimensions: {\n                url: navEntry.name,\n            },\n        };\n        var latencyEvent = new LogEvent_1.default(APP_METRICS_PAGE_LOAD_EVENT);\n        latencyEvent.setUser(user);\n        latencyEvent.setValue(navEntry.duration);\n        latencyEvent.setMetadata(metadata);\n        this.log(latencyEvent);\n        var domInteractiveEvent = new LogEvent_1.default(APP_METRICS_DOM_INTERACTIVE_EVENT);\n        domInteractiveEvent.setUser(user);\n        domInteractiveEvent.setValue(navEntry.domInteractive - navEntry.startTime);\n        domInteractiveEvent.setMetadata(metadata);\n        this.log(domInteractiveEvent);\n    };\n    StatsigLogger.prototype.shutdown = function () {\n        if (this.flushInterval) {\n            clearInterval(this.flushInterval);\n            this.flushInterval = null;\n        }\n        this.flush(true);\n    };\n    StatsigLogger.prototype.flush = function (isClosing) {\n        var _this = this;\n        if (isClosing === void 0) { isClosing = false; }\n        if (this.queue.length === 0) {\n            return;\n        }\n        var oldQueue = this.queue;\n        this.queue = [];\n        if (isClosing &&\n            !this.sdkInternal.getNetwork().supportsKeepalive() &&\n            typeof navigator !== 'undefined' &&\n            navigator != null &&\n            // @ts-ignore\n            navigator.sendBeacon) {\n            var beacon = this.sdkInternal.getNetwork().sendLogBeacon({\n                events: oldQueue,\n                statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n            });\n            if (!beacon) {\n                this.queue = oldQueue.concat(this.queue);\n                if (this.queue.length > 0) {\n                    this.addFailedRequest({\n                        events: this.queue,\n                        statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n                        time: Date.now(),\n                    });\n                    this.queue = [];\n                }\n                this.saveFailedRequests();\n            }\n            return;\n        }\n        var processor = this;\n        this.sdkInternal\n            .getNetwork()\n            .postToEndpoint(StatsigNetwork_1.StatsigEndpoint.Rgstr, {\n            events: oldQueue,\n            statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n        }, 3 /* retries */, 1000 /* backoff */, isClosing /* useKeepalive */)\n            .then(function (response) {\n            if (!response.ok) {\n                throw response;\n            }\n        })\n            .catch(function (error) {\n            if (typeof error.text === 'function') {\n                error.text().then(function (errorText) {\n                    var logFailureEvent = new LogEvent_1.default(LOG_FAILURE_EVENT);\n                    logFailureEvent.setMetadata({\n                        error: error.status + \": \" + errorText,\n                    });\n                    logFailureEvent.setUser(processor.sdkInternal.getCurrentUser());\n                    processor.appendFailureLog(logFailureEvent, oldQueue);\n                });\n            }\n            else {\n                var logFailureEvent = new LogEvent_1.default(LOG_FAILURE_EVENT);\n                logFailureEvent.setMetadata({\n                    error: error.message,\n                });\n                logFailureEvent.setUser(processor.sdkInternal.getCurrentUser());\n                processor.appendFailureLog(logFailureEvent, oldQueue);\n            }\n        })\n            .finally(function () { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isClosing) return [3 /*break*/, 2];\n                        if (this.queue.length > 0) {\n                            this.addFailedRequest({\n                                events: this.queue,\n                                statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n                                time: Date.now(),\n                            });\n                            // on app background/window blur, save unsent events as a request and clean up the queue (in case app foregrounds)\n                            this.queue = [];\n                        }\n                        return [4 /*yield*/, processor.saveFailedRequests()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    StatsigLogger.prototype.saveFailedRequests = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var requestsCopy;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.failedLogEvents.length > 0)) return [3 /*break*/, 3];\n                        requestsCopy = JSON.stringify(this.failedLogEvents);\n                        if (requestsCopy.length > MAX_LOCAL_STORAGE_SIZE) {\n                            this.clearLocalStorageRequests();\n                            return [2 /*return*/];\n                        }\n                        if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 2];\n                        return [4 /*yield*/, StatsigAsyncStorage_1.default.setItemAsync(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY, requestsCopy)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        StatsigLocalStorage_1.default.setItem(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY, requestsCopy);\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StatsigLogger.prototype.sendSavedRequests = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var failedRequests, fireAndForget, requestBodies, _loop_1, this_1, _i, requestBodies_1, requestBody;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fireAndForget = false;\n                        if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 2];\n                        return [4 /*yield*/, StatsigAsyncStorage_1.default.getItemAsync(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY)];\n                    case 1:\n                        failedRequests = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        failedRequests = StatsigLocalStorage_1.default.getItem(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY);\n                        _a.label = 3;\n                    case 3:\n                        if (failedRequests == null) {\n                            this.clearLocalStorageRequests();\n                            return [2 /*return*/];\n                        }\n                        if (failedRequests.length > MAX_LOCAL_STORAGE_SIZE) {\n                            fireAndForget = true;\n                        }\n                        requestBodies = [];\n                        try {\n                            requestBodies = JSON.parse(failedRequests);\n                            _loop_1 = function (requestBody) {\n                                if (requestBody != null &&\n                                    requestBody.events &&\n                                    Array.isArray(requestBody.events)) {\n                                    this_1.sdkInternal\n                                        .getNetwork()\n                                        .postToEndpoint(StatsigNetwork_1.StatsigEndpoint.Rgstr, requestBody)\n                                        .then(function (response) {\n                                        if (!response.ok) {\n                                            throw Error(response.status + '');\n                                        }\n                                    })\n                                        .catch(function (_e) {\n                                        if (fireAndForget) {\n                                            return;\n                                        }\n                                        _this.addFailedRequest(requestBody);\n                                    });\n                                }\n                            };\n                            this_1 = this;\n                            for (_i = 0, requestBodies_1 = requestBodies; _i < requestBodies_1.length; _i++) {\n                                requestBody = requestBodies_1[_i];\n                                _loop_1(requestBody);\n                            }\n                        }\n                        catch (_e) {\n                        }\n                        finally {\n                            this.clearLocalStorageRequests();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StatsigLogger.prototype.addFailedRequest = function (requestBody) {\n        if (requestBody.time < Date.now() - MS_RETRY_LOGS_CUTOFF) {\n            return;\n        }\n        if (this.failedLogEvents.length > MAX_BATCHES_TO_RETRY) {\n            return;\n        }\n        var additionalEvents = requestBody.events.length;\n        if (this.failedLogEventCount + additionalEvents > MAX_FAILED_EVENTS) {\n            return;\n        }\n        this.failedLogEvents.push(requestBody);\n        this.failedLogEventCount += additionalEvents;\n    };\n    StatsigLogger.prototype.clearLocalStorageRequests = function () {\n        if (StatsigAsyncStorage_1.default.asyncStorage) {\n            StatsigAsyncStorage_1.default.removeItemAsync(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY);\n        }\n        else {\n            StatsigLocalStorage_1.default.removeItem(Constants_1.STATSIG_LOCAL_STORAGE_LOGGING_REQUEST_KEY);\n        }\n    };\n    StatsigLogger.prototype.appendFailureLog = function (event, queue) {\n        if (this.loggedErrors.has(event.getName())) {\n            return;\n        }\n        this.loggedErrors.add(event.getName());\n        queue.push(event);\n        this.failedLogEvents.push({\n            events: queue,\n            statsigMetadata: this.sdkInternal.getStatsigMetadata(),\n            time: Date.now(),\n        });\n        this.saveFailedRequests();\n    };\n    return StatsigLogger;\n}());\nexports.default = StatsigLogger;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}