{"ast":null,"code":"var _s = $RefreshSig$();\nimport { TokenTradeType } from 'graphql/data/__generated__/types-and-hooks';\nimport { buildAllTradeRouteInputs } from 'nft/utils/tokenRoutes';\nimport { useEffect } from 'react';\nimport { useTokenInput } from './useTokenInput';\nexport default function usePayWithAnyTokenSwap(trade, allowance, allowedSlippage) {\n  _s();\n  const setTokenTradeInput = useTokenInput(state => state.setTokenTradeInput);\n  const hasRoutes = !!trade && trade.routes;\n  const hasInputAmount = !!trade && !!trade.inputAmount && trade.inputAmount.currency.isToken;\n  const hasAllowance = !!allowedSlippage && !!allowance;\n  useEffect(() => {\n    if (!hasRoutes || !hasInputAmount || !hasAllowance) {\n      setTokenTradeInput(undefined);\n      return;\n    }\n    const slippage = parseInt(allowedSlippage.multiply(100).toSignificant(2));\n    const {\n      mixedTokenTradeRouteInputs,\n      v2TokenTradeRouteInputs,\n      v3TokenTradeRouteInputs\n    } = buildAllTradeRouteInputs(trade);\n    const routes = {\n      mixedRoutes: mixedTokenTradeRouteInputs,\n      tradeType: TokenTradeType.ExactOutput,\n      v2Routes: v2TokenTradeRouteInputs,\n      v3Routes: v3TokenTradeRouteInputs\n    };\n    const permitInput = 'permitSignature' in allowance && allowance.permitSignature ? {\n      details: {\n        amount: allowance.permitSignature.details.amount.toString(),\n        expiration: allowance.permitSignature.details.expiration.toString(),\n        nonce: allowance.permitSignature.details.nonce.toString(),\n        token: allowance.permitSignature.details.token\n      },\n      sigDeadline: allowance.permitSignature.sigDeadline.toString(),\n      signature: allowance.permitSignature.signature,\n      spender: allowance.permitSignature.spender\n    } : undefined;\n    setTokenTradeInput({\n      permit: permitInput,\n      routes,\n      slippageToleranceBasisPoints: slippage,\n      tokenAmount: {\n        amount: trade.inputAmount.quotient.toString(),\n        token: {\n          address: trade.inputAmount.currency.address,\n          chainId: trade.inputAmount.currency.chainId,\n          decimals: trade.inputAmount.currency.decimals,\n          isNative: trade.inputAmount.currency.isNative\n        }\n      }\n    });\n  }, [allowance, allowedSlippage, hasAllowance, hasInputAmount, hasRoutes, setTokenTradeInput, trade]);\n}\n_s(usePayWithAnyTokenSwap, \"4MUsaN4EQLTfCJ17HMhMsSQsbxA=\", false, function () {\n  return [useTokenInput];\n});","map":{"version":3,"names":["TokenTradeType","buildAllTradeRouteInputs","useEffect","useTokenInput","usePayWithAnyTokenSwap","trade","allowance","allowedSlippage","setTokenTradeInput","state","hasRoutes","routes","hasInputAmount","inputAmount","currency","isToken","hasAllowance","undefined","slippage","parseInt","multiply","toSignificant","mixedTokenTradeRouteInputs","v2TokenTradeRouteInputs","v3TokenTradeRouteInputs","mixedRoutes","tradeType","ExactOutput","v2Routes","v3Routes","permitInput","permitSignature","details","amount","toString","expiration","nonce","token","sigDeadline","signature","spender","permit","slippageToleranceBasisPoints","tokenAmount","quotient","address","chainId","decimals","isNative"],"sources":["/home/diep/freelance/interface/src/nft/hooks/usePayWithAnyTokenSwap.ts"],"sourcesContent":["import { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { PermitInput, TokenTradeRoutesInput, TokenTradeType } from 'graphql/data/__generated__/types-and-hooks'\nimport { Allowance } from 'hooks/usePermit2Allowance'\nimport { buildAllTradeRouteInputs } from 'nft/utils/tokenRoutes'\nimport { useEffect } from 'react'\nimport { InterfaceTrade } from 'state/routing/types'\n\nimport { useTokenInput } from './useTokenInput'\n\nexport default function usePayWithAnyTokenSwap(\n  trade?: InterfaceTrade<Currency, Currency, TradeType> | undefined,\n  allowance?: Allowance,\n  allowedSlippage?: Percent\n) {\n  const setTokenTradeInput = useTokenInput((state) => state.setTokenTradeInput)\n  const hasRoutes = !!trade && trade.routes\n  const hasInputAmount = !!trade && !!trade.inputAmount && trade.inputAmount.currency.isToken\n  const hasAllowance = !!allowedSlippage && !!allowance\n\n  useEffect(() => {\n    if (!hasRoutes || !hasInputAmount || !hasAllowance) {\n      setTokenTradeInput(undefined)\n      return\n    }\n\n    const slippage = parseInt(allowedSlippage.multiply(100).toSignificant(2))\n\n    const { mixedTokenTradeRouteInputs, v2TokenTradeRouteInputs, v3TokenTradeRouteInputs } =\n      buildAllTradeRouteInputs(trade)\n\n    const routes: TokenTradeRoutesInput = {\n      mixedRoutes: mixedTokenTradeRouteInputs,\n      tradeType: TokenTradeType.ExactOutput,\n      v2Routes: v2TokenTradeRouteInputs,\n      v3Routes: v3TokenTradeRouteInputs,\n    }\n\n    const permitInput: PermitInput | undefined =\n      'permitSignature' in allowance && allowance.permitSignature\n        ? {\n            details: {\n              amount: allowance.permitSignature.details.amount.toString(),\n              expiration: allowance.permitSignature.details.expiration.toString(),\n              nonce: allowance.permitSignature.details.nonce.toString(),\n              token: allowance.permitSignature.details.token,\n            },\n            sigDeadline: allowance.permitSignature.sigDeadline.toString(),\n            signature: allowance.permitSignature.signature,\n            spender: allowance.permitSignature.spender,\n          }\n        : undefined\n\n    setTokenTradeInput({\n      permit: permitInput,\n      routes,\n      slippageToleranceBasisPoints: slippage,\n      tokenAmount: {\n        amount: trade.inputAmount.quotient.toString(),\n        token: {\n          address: trade.inputAmount.currency.address,\n          chainId: trade.inputAmount.currency.chainId,\n          decimals: trade.inputAmount.currency.decimals,\n          isNative: trade.inputAmount.currency.isNative,\n        },\n      },\n    })\n  }, [allowance, allowedSlippage, hasAllowance, hasInputAmount, hasRoutes, setTokenTradeInput, trade])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}