{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/nft/components/collection/CollectionAsset.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { sendAnalyticsEvent, useTrace } from '@uniswap/analytics';\nimport { InterfacePageName, NFTEventName } from '@uniswap/analytics-events';\nimport { NftCard } from 'nft/components/card';\nimport { Ranking as RankingContainer, Suspicious as SuspiciousContainer } from 'nft/components/card/icons';\nimport { useBag } from 'nft/hooks';\nimport { formatWeiToDecimal } from 'nft/utils';\nimport { useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CollectionAsset = _ref => {\n  _s();\n  var _asset$rarity;\n  let {\n    asset,\n    isMobile,\n    mediaShouldBePlaying,\n    setCurrentTokenPlayingMedia,\n    uniformAspectRatio,\n    setUniformAspectRatio,\n    renderedHeight,\n    setRenderedHeight\n  } = _ref;\n  const bagManuallyClosed = useBag(state => state.bagManuallyClosed);\n  const addAssetsToBag = useBag(state => state.addAssetsToBag);\n  const removeAssetsFromBag = useBag(state => state.removeAssetsFromBag);\n  const itemsInBag = useBag(state => state.itemsInBag);\n  const bagExpanded = useBag(state => state.bagExpanded);\n  const setBagExpanded = useBag(state => state.setBagExpanded);\n  const trace = useTrace({\n    page: InterfacePageName.NFT_COLLECTION_PAGE\n  });\n  const {\n    isSelected\n  } = useMemo(() => {\n    const matchingItems = itemsInBag.filter(item => asset.tokenId === item.asset.tokenId && asset.address === item.asset.address);\n    const isSelected = matchingItems.length > 0;\n    return {\n      isSelected\n    };\n  }, [asset, itemsInBag]);\n  const notForSale = asset.notForSale || BigNumber.from(asset.priceInfo ? asset.priceInfo.ETHPrice : 0).lt(0);\n  const provider = (asset === null || asset === void 0 ? void 0 : (_asset$rarity = asset.rarity) === null || _asset$rarity === void 0 ? void 0 : _asset$rarity.providers) ? asset.rarity.providers[0] : undefined;\n  const handleAddAssetToBag = useCallback(() => {\n    var _asset$priceInfo$ETHP, _asset$priceInfo;\n    if (BigNumber.from((_asset$priceInfo$ETHP = (_asset$priceInfo = asset.priceInfo) === null || _asset$priceInfo === void 0 ? void 0 : _asset$priceInfo.ETHPrice) !== null && _asset$priceInfo$ETHP !== void 0 ? _asset$priceInfo$ETHP : 0).gt(0)) {\n      addAssetsToBag([asset]);\n      if (!bagExpanded && !isMobile && !bagManuallyClosed) {\n        setBagExpanded({\n          bagExpanded: true\n        });\n      }\n      sendAnalyticsEvent(NFTEventName.NFT_BUY_ADDED, {\n        collection_address: asset.address,\n        token_id: asset.tokenId,\n        token_type: asset.tokenType,\n        ...trace\n      });\n    }\n  }, [addAssetsToBag, asset, bagExpanded, bagManuallyClosed, isMobile, setBagExpanded, trace]);\n  const handleRemoveAssetFromBag = useCallback(() => {\n    removeAssetsFromBag([asset]);\n  }, [asset, removeAssetsFromBag]);\n  const display = useMemo(() => {\n    return {\n      primaryInfo: asset.name ? asset.name : `#${asset.tokenId}`,\n      primaryInfoIcon: asset.susFlag ? /*#__PURE__*/_jsxDEV(SuspiciousContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }, this) : null,\n      primaryInfoRight: asset.rarity && provider ? /*#__PURE__*/_jsxDEV(RankingContainer, {\n        provider: provider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 52\n      }, this) : null,\n      secondaryInfo: notForSale ? '' : `${formatWeiToDecimal(asset.priceInfo.ETHPrice, true)} ETH`,\n      selectedInfo: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Remove from bag\"\n      }, void 0, false, void 0, this),\n      notSelectedInfo: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Add to bag\"\n      }, void 0, false, void 0, this),\n      disabledInfo: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Not listed\"\n      }, void 0, false, void 0, this)\n    };\n  }, [asset.name, asset.priceInfo.ETHPrice, asset.rarity, asset.susFlag, asset.tokenId, notForSale, provider]);\n  return /*#__PURE__*/_jsxDEV(NftCard, {\n    asset: asset,\n    display: display,\n    isSelected: isSelected,\n    isDisabled: Boolean(asset.notForSale),\n    selectAsset: handleAddAssetToBag,\n    unselectAsset: handleRemoveAssetFromBag,\n    mediaShouldBePlaying: mediaShouldBePlaying,\n    uniformAspectRatio: uniformAspectRatio,\n    setUniformAspectRatio: setUniformAspectRatio,\n    renderedHeight: renderedHeight,\n    setRenderedHeight: setRenderedHeight,\n    setCurrentTokenPlayingMedia: setCurrentTokenPlayingMedia,\n    testId: \"nft-collection-asset\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(CollectionAsset, \"zdXcAkIKZXrN3euRmE3pXYMg/bM=\", false, function () {\n  return [useBag, useBag, useBag, useBag, useBag, useBag, useTrace];\n});\n_c = CollectionAsset;\nvar _c;\n$RefreshReg$(_c, \"CollectionAsset\");","map":{"version":3,"names":["BigNumber","sendAnalyticsEvent","useTrace","InterfacePageName","NFTEventName","NftCard","Ranking","RankingContainer","Suspicious","SuspiciousContainer","useBag","formatWeiToDecimal","useCallback","useMemo","CollectionAsset","asset","isMobile","mediaShouldBePlaying","setCurrentTokenPlayingMedia","uniformAspectRatio","setUniformAspectRatio","renderedHeight","setRenderedHeight","bagManuallyClosed","state","addAssetsToBag","removeAssetsFromBag","itemsInBag","bagExpanded","setBagExpanded","trace","page","NFT_COLLECTION_PAGE","isSelected","matchingItems","filter","item","tokenId","address","length","notForSale","from","priceInfo","ETHPrice","lt","provider","rarity","providers","undefined","handleAddAssetToBag","gt","NFT_BUY_ADDED","collection_address","token_id","token_type","tokenType","handleRemoveAssetFromBag","display","primaryInfo","name","primaryInfoIcon","susFlag","primaryInfoRight","secondaryInfo","selectedInfo","notSelectedInfo","disabledInfo","Boolean"],"sources":["/home/diep/freelance/interface/src/nft/components/collection/CollectionAsset.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent, useTrace } from '@uniswap/analytics'\nimport { InterfacePageName, NFTEventName } from '@uniswap/analytics-events'\nimport { NftCard, NftCardDisplayProps } from 'nft/components/card'\nimport { Ranking as RankingContainer, Suspicious as SuspiciousContainer } from 'nft/components/card/icons'\nimport { useBag } from 'nft/hooks'\nimport { GenieAsset, UniformAspectRatio } from 'nft/types'\nimport { formatWeiToDecimal } from 'nft/utils'\nimport { useCallback, useMemo } from 'react'\n\ninterface CollectionAssetProps {\n  asset: GenieAsset\n  isMobile: boolean\n  mediaShouldBePlaying: boolean\n  setCurrentTokenPlayingMedia: (tokenId: string | undefined) => void\n  rarityVerified?: boolean\n  uniformAspectRatio: UniformAspectRatio\n  setUniformAspectRatio: (uniformAspectRatio: UniformAspectRatio) => void\n  renderedHeight?: number\n  setRenderedHeight: (renderedHeight: number | undefined) => void\n}\n\nexport const CollectionAsset = ({\n  asset,\n  isMobile,\n  mediaShouldBePlaying,\n  setCurrentTokenPlayingMedia,\n  uniformAspectRatio,\n  setUniformAspectRatio,\n  renderedHeight,\n  setRenderedHeight,\n}: CollectionAssetProps) => {\n  const bagManuallyClosed = useBag((state) => state.bagManuallyClosed)\n  const addAssetsToBag = useBag((state) => state.addAssetsToBag)\n  const removeAssetsFromBag = useBag((state) => state.removeAssetsFromBag)\n  const itemsInBag = useBag((state) => state.itemsInBag)\n  const bagExpanded = useBag((state) => state.bagExpanded)\n  const setBagExpanded = useBag((state) => state.setBagExpanded)\n  const trace = useTrace({ page: InterfacePageName.NFT_COLLECTION_PAGE })\n\n  const { isSelected } = useMemo(() => {\n    const matchingItems = itemsInBag.filter(\n      (item) => asset.tokenId === item.asset.tokenId && asset.address === item.asset.address\n    )\n\n    const isSelected = matchingItems.length > 0\n    return {\n      isSelected,\n    }\n  }, [asset, itemsInBag])\n\n  const notForSale = asset.notForSale || BigNumber.from(asset.priceInfo ? asset.priceInfo.ETHPrice : 0).lt(0)\n  const provider = asset?.rarity?.providers ? asset.rarity.providers[0] : undefined\n  const handleAddAssetToBag = useCallback(() => {\n    if (BigNumber.from(asset.priceInfo?.ETHPrice ?? 0).gt(0)) {\n      addAssetsToBag([asset])\n      if (!bagExpanded && !isMobile && !bagManuallyClosed) {\n        setBagExpanded({ bagExpanded: true })\n      }\n      sendAnalyticsEvent(NFTEventName.NFT_BUY_ADDED, {\n        collection_address: asset.address,\n        token_id: asset.tokenId,\n        token_type: asset.tokenType,\n        ...trace,\n      })\n    }\n  }, [addAssetsToBag, asset, bagExpanded, bagManuallyClosed, isMobile, setBagExpanded, trace])\n\n  const handleRemoveAssetFromBag = useCallback(() => {\n    removeAssetsFromBag([asset])\n  }, [asset, removeAssetsFromBag])\n\n  const display: NftCardDisplayProps = useMemo(() => {\n    return {\n      primaryInfo: asset.name ? asset.name : `#${asset.tokenId}`,\n      primaryInfoIcon: asset.susFlag ? <SuspiciousContainer /> : null,\n      primaryInfoRight: asset.rarity && provider ? <RankingContainer provider={provider} /> : null,\n      secondaryInfo: notForSale ? '' : `${formatWeiToDecimal(asset.priceInfo.ETHPrice, true)} ETH`,\n      selectedInfo: <Trans>Remove from bag</Trans>,\n      notSelectedInfo: <Trans>Add to bag</Trans>,\n      disabledInfo: <Trans>Not listed</Trans>,\n    }\n  }, [asset.name, asset.priceInfo.ETHPrice, asset.rarity, asset.susFlag, asset.tokenId, notForSale, provider])\n\n  return (\n    <NftCard\n      asset={asset}\n      display={display}\n      isSelected={isSelected}\n      isDisabled={Boolean(asset.notForSale)}\n      selectAsset={handleAddAssetToBag}\n      unselectAsset={handleRemoveAssetFromBag}\n      mediaShouldBePlaying={mediaShouldBePlaying}\n      uniformAspectRatio={uniformAspectRatio}\n      setUniformAspectRatio={setUniformAspectRatio}\n      renderedHeight={renderedHeight}\n      setRenderedHeight={setRenderedHeight}\n      setCurrentTokenPlayingMedia={setCurrentTokenPlayingMedia}\n      testId=\"nft-collection-asset\"\n    />\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}