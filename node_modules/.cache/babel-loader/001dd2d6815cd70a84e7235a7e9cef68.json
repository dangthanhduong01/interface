{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/components/NavBar/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { sendAnalyticsEvent, Trace, TraceEvent, useTrace } from '@uniswap/analytics';\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, InterfaceSectionName } from '@uniswap/analytics-events';\nimport { useWeb3React } from '@web3-react/core';\nimport clsx from 'clsx';\nimport { useNftGraphqlEnabled } from 'featureFlags/flags/nftlGraphql';\nimport { useCollectionSearch } from 'graphql/data/nft/CollectionSearch';\nimport { useSearchTokens } from 'graphql/data/SearchTokens';\nimport useDebounce from 'hooks/useDebounce';\nimport { useIsNftPage } from 'hooks/useIsNftPage';\nimport { useOnClickOutside } from 'hooks/useOnClickOutside';\nimport { organizeSearchResults } from 'lib/utils/searchBar';\nimport { Box } from 'nft/components/Box';\nimport { Row } from 'nft/components/Flex';\nimport { magicalGradientOnHover } from 'nft/css/common.css';\nimport { useIsMobile, useIsTablet } from 'nft/hooks';\nimport { useIsNavSearchInputVisible } from 'nft/hooks/useIsNavSearchInputVisible';\nimport { fetchSearchCollections } from 'nft/queries';\nimport { useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useLocation } from 'react-router-dom';\nimport { ChevronLeftIcon, MagnifyingGlassIcon, NavMagnifyingGlassIcon } from '../../nft/components/icons';\nimport { NavIcon } from './NavIcon';\nimport * as styles from './SearchBar.css';\nimport { SearchBarDropdown } from './SearchBarDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeyShortCut = _styled.div.withConfig({\n  displayName: \"SearchBar__KeyShortCut\",\n  componentId: \"sc-1l44x3c-0\"\n})([\"background-color:\", \";color:\", \";padding:0px 8px;width:20px;height:20px;border-radius:4px;font-size:12px;font-weight:800;line-height:16px;display:flex;align-items:center;opacity:0.6;backdrop-filter:blur(60px);\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.hoverState;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.textSecondary;\n});\nexport const SearchBar = () => {\n  _s();\n  const [isOpen, toggleOpen] = useReducer(state => !state, false);\n  const [searchValue, setSearchValue] = useState('');\n  const debouncedSearchValue = useDebounce(searchValue, 300);\n  const searchRef = useRef(null);\n  const inputRef = useRef(null);\n  const {\n    pathname\n  } = useLocation();\n  const isMobile = useIsMobile();\n  const isTablet = useIsTablet();\n  const isNftGraphqlEnabled = useNftGraphqlEnabled();\n  const isNavSearchInputVisible = useIsNavSearchInputVisible();\n  useOnClickOutside(searchRef, () => {\n    isOpen && toggleOpen();\n  });\n  const {\n    data: queryCollections,\n    isLoading: queryCollectionsAreLoading\n  } = useQuery(['searchCollections', debouncedSearchValue], () => fetchSearchCollections(debouncedSearchValue), {\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    refetchOnReconnect: false,\n    enabled: !!debouncedSearchValue.length\n  });\n  const {\n    data: gqlCollections,\n    loading: gqlCollectionsAreLoading\n  } = useCollectionSearch(debouncedSearchValue);\n  const {\n    gatedCollections,\n    gatedCollectionsAreLoading\n  } = useMemo(() => {\n    return isNftGraphqlEnabled ? {\n      gatedCollections: gqlCollections,\n      gatedCollectionsAreLoading: gqlCollectionsAreLoading\n    } : {\n      gatedCollections: queryCollections,\n      gatedCollectionsAreLoading: queryCollectionsAreLoading\n    };\n  }, [gqlCollections, gqlCollectionsAreLoading, isNftGraphqlEnabled, queryCollections, queryCollectionsAreLoading]);\n  const {\n    chainId\n  } = useWeb3React();\n  const {\n    data: tokens,\n    loading: tokensAreLoading\n  } = useSearchTokens(debouncedSearchValue, chainId !== null && chainId !== void 0 ? chainId : 1);\n  const isNFTPage = useIsNftPage();\n  const [reducedTokens, reducedCollections] = organizeSearchResults(isNFTPage, tokens !== null && tokens !== void 0 ? tokens : [], gatedCollections !== null && gatedCollections !== void 0 ? gatedCollections : []);\n\n  // close dropdown on escape\n  useEffect(() => {\n    const escapeKeyDownHandler = event => {\n      if (event.key === 'Escape' && isOpen) {\n        event.preventDefault();\n        toggleOpen();\n      }\n    };\n    document.addEventListener('keydown', escapeKeyDownHandler);\n    return () => {\n      document.removeEventListener('keydown', escapeKeyDownHandler);\n    };\n  }, [isOpen, toggleOpen, gatedCollections]);\n\n  // clear searchbar when changing pages\n  useEffect(() => {\n    setSearchValue('');\n  }, [pathname]);\n\n  // auto set cursor when searchbar is opened\n  useEffect(() => {\n    if (isOpen) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [isOpen]);\n  const isMobileOrTablet = isMobile || isTablet || !isNavSearchInputVisible;\n  const trace = useTrace({\n    section: InterfaceSectionName.NAVBAR_SEARCH\n  });\n  const navbarSearchEventProperties = {\n    navbar_search_input_text: debouncedSearchValue,\n    hasInput: debouncedSearchValue && debouncedSearchValue.length > 0,\n    ...trace\n  };\n  const placeholderText = useMemo(() => {\n    return isMobileOrTablet ? /*i18n*/i18n._(\"Search\") : /*i18n*/i18n._(\"Search tokens and NFT collections\");\n  }, [isMobileOrTablet]);\n  const handleKeyPress = useCallback(event => {\n    if (event.key === '/') {\n      event.preventDefault();\n      !isOpen && toggleOpen();\n    }\n  }, [isOpen]);\n  useEffect(() => {\n    const innerRef = inputRef.current;\n    if (innerRef !== null) {\n      //only mount the listener when input available as ref\n      document.addEventListener('keydown', handleKeyPress);\n    }\n    return () => {\n      if (innerRef !== null) {\n        document.removeEventListener('keydown', handleKeyPress);\n      }\n    };\n  }, [handleKeyPress, inputRef]);\n  return /*#__PURE__*/_jsxDEV(Trace, {\n    section: InterfaceSectionName.NAVBAR_SEARCH,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      \"data-cy\": \"search-bar\",\n      position: {\n        sm: 'fixed',\n        md: 'absolute',\n        xl: 'relative'\n      },\n      width: {\n        sm: isOpen ? 'viewWidth' : 'auto',\n        md: 'auto'\n      },\n      ref: searchRef,\n      className: styles.searchBarContainerNft,\n      display: {\n        sm: isOpen ? 'inline-block' : 'none',\n        xl: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: clsx(styles.nftSearchBar, !isOpen && !isMobile && magicalGradientOnHover, isMobileOrTablet && (isOpen ? styles.visible : styles.hidden)),\n        borderRadius: isOpen || isMobileOrTablet ? undefined : '12',\n        borderTopRightRadius: isOpen && !isMobile ? '12' : undefined,\n        borderTopLeftRadius: isOpen && !isMobile ? '12' : undefined,\n        borderBottomWidth: isOpen || isMobileOrTablet ? '0px' : '1px',\n        backgroundColor: isOpen ? 'backgroundSurface' : 'searchBackground',\n        onClick: () => !isOpen && toggleOpen(),\n        gap: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: styles.searchContentLeftAlign,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: {\n              sm: 'none',\n              md: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(MagnifyingGlassIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: {\n              sm: 'flex',\n              md: 'none'\n            },\n            color: \"textTertiary\",\n            onClick: toggleOpen,\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TraceEvent, {\n          events: [BrowserEvent.onFocus],\n          name: InterfaceEventName.NAVBAR_SEARCH_SELECTED,\n          element: InterfaceElementName.NAVBAR_SEARCH_INPUT,\n          properties: {\n            ...trace\n          },\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: placeholderText,\n            render: _ref3 => {\n              let {\n                translation\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(Box, {\n                as: \"input\",\n                \"data-cy\": \"search-bar-input\",\n                placeholder: translation,\n                onChange: event => {\n                  !isOpen && toggleOpen();\n                  setSearchValue(event.target.value);\n                },\n                onBlur: () => sendAnalyticsEvent(InterfaceEventName.NAVBAR_SEARCH_EXITED, navbarSearchEventProperties),\n                className: `${styles.searchBarInput} ${styles.searchContentLeftAlign}`,\n                value: searchValue,\n                ref: inputRef,\n                width: \"full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), !isOpen && /*#__PURE__*/_jsxDEV(KeyShortCut, {\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: clsx(isOpen ? styles.visible : styles.hidden),\n        children: isOpen && /*#__PURE__*/_jsxDEV(SearchBarDropdown, {\n          toggleOpen: toggleOpen,\n          tokens: reducedTokens,\n          collections: reducedCollections,\n          queryText: debouncedSearchValue,\n          hasInput: debouncedSearchValue.length > 0,\n          isLoading: tokensAreLoading || gatedCollectionsAreLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), isMobileOrTablet && /*#__PURE__*/_jsxDEV(NavIcon, {\n      onClick: toggleOpen,\n      label: placeholderText,\n      children: /*#__PURE__*/_jsxDEV(NavMagnifyingGlassIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"gCJpV1Ej3t7mLGxhMfGeXSvxZTg=\", false, function () {\n  return [useDebounce, useLocation, useIsMobile, useIsTablet, useNftGraphqlEnabled, useIsNavSearchInputVisible, useOnClickOutside, useQuery, useCollectionSearch, useWeb3React, useSearchTokens, useIsNftPage, useTrace];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["sendAnalyticsEvent","Trace","TraceEvent","useTrace","BrowserEvent","InterfaceElementName","InterfaceEventName","InterfaceSectionName","useWeb3React","clsx","useNftGraphqlEnabled","useCollectionSearch","useSearchTokens","useDebounce","useIsNftPage","useOnClickOutside","organizeSearchResults","Box","Row","magicalGradientOnHover","useIsMobile","useIsTablet","useIsNavSearchInputVisible","fetchSearchCollections","useCallback","useEffect","useMemo","useReducer","useRef","useState","useQuery","useLocation","ChevronLeftIcon","MagnifyingGlassIcon","NavMagnifyingGlassIcon","NavIcon","styles","SearchBarDropdown","KeyShortCut","styled","div","theme","hoverState","textSecondary","SearchBar","isOpen","toggleOpen","state","searchValue","setSearchValue","debouncedSearchValue","searchRef","inputRef","pathname","isMobile","isTablet","isNftGraphqlEnabled","isNavSearchInputVisible","data","queryCollections","isLoading","queryCollectionsAreLoading","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","enabled","length","gqlCollections","loading","gqlCollectionsAreLoading","gatedCollections","gatedCollectionsAreLoading","chainId","tokens","tokensAreLoading","isNFTPage","reducedTokens","reducedCollections","escapeKeyDownHandler","event","key","preventDefault","document","addEventListener","removeEventListener","current","focus","isMobileOrTablet","trace","section","NAVBAR_SEARCH","navbarSearchEventProperties","navbar_search_input_text","hasInput","placeholderText","handleKeyPress","innerRef","sm","md","xl","searchBarContainerNft","nftSearchBar","visible","hidden","undefined","searchContentLeftAlign","onFocus","NAVBAR_SEARCH_SELECTED","NAVBAR_SEARCH_INPUT","translation","target","value","NAVBAR_SEARCH_EXITED","searchBarInput"],"sources":["/home/diep/freelance/interface/src/components/NavBar/SearchBar.tsx"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport { t, Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent, Trace, TraceEvent, useTrace } from '@uniswap/analytics'\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, InterfaceSectionName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport clsx from 'clsx'\nimport { useNftGraphqlEnabled } from 'featureFlags/flags/nftlGraphql'\nimport { useCollectionSearch } from 'graphql/data/nft/CollectionSearch'\nimport { useSearchTokens } from 'graphql/data/SearchTokens'\nimport useDebounce from 'hooks/useDebounce'\nimport { useIsNftPage } from 'hooks/useIsNftPage'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { organizeSearchResults } from 'lib/utils/searchBar'\nimport { Box } from 'nft/components/Box'\nimport { Row } from 'nft/components/Flex'\nimport { magicalGradientOnHover } from 'nft/css/common.css'\nimport { useIsMobile, useIsTablet } from 'nft/hooks'\nimport { useIsNavSearchInputVisible } from 'nft/hooks/useIsNavSearchInputVisible'\nimport { fetchSearchCollections } from 'nft/queries'\nimport { ChangeEvent, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { ChevronLeftIcon, MagnifyingGlassIcon, NavMagnifyingGlassIcon } from '../../nft/components/icons'\nimport { NavIcon } from './NavIcon'\nimport * as styles from './SearchBar.css'\nimport { SearchBarDropdown } from './SearchBarDropdown'\n\nconst KeyShortCut = styled.div`\n  background-color: ${({ theme }) => theme.hoverState};\n  color: ${({ theme }) => theme.textSecondary};\n  padding: 0px 8px;\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 800;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  opacity: 0.6;\n  backdrop-filter: blur(60px);\n`\n\nexport const SearchBar = () => {\n  const [isOpen, toggleOpen] = useReducer((state: boolean) => !state, false)\n  const [searchValue, setSearchValue] = useState('')\n  const debouncedSearchValue = useDebounce(searchValue, 300)\n  const searchRef = useRef<HTMLDivElement>(null)\n  const inputRef = useRef<HTMLInputElement>(null)\n  const { pathname } = useLocation()\n  const isMobile = useIsMobile()\n  const isTablet = useIsTablet()\n  const isNftGraphqlEnabled = useNftGraphqlEnabled()\n  const isNavSearchInputVisible = useIsNavSearchInputVisible()\n\n  useOnClickOutside(searchRef, () => {\n    isOpen && toggleOpen()\n  })\n\n  const { data: queryCollections, isLoading: queryCollectionsAreLoading } = useQuery(\n    ['searchCollections', debouncedSearchValue],\n    () => fetchSearchCollections(debouncedSearchValue),\n    {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      enabled: !!debouncedSearchValue.length,\n    }\n  )\n\n  const { data: gqlCollections, loading: gqlCollectionsAreLoading } = useCollectionSearch(debouncedSearchValue)\n\n  const { gatedCollections, gatedCollectionsAreLoading } = useMemo(() => {\n    return isNftGraphqlEnabled\n      ? {\n          gatedCollections: gqlCollections,\n          gatedCollectionsAreLoading: gqlCollectionsAreLoading,\n        }\n      : {\n          gatedCollections: queryCollections,\n          gatedCollectionsAreLoading: queryCollectionsAreLoading,\n        }\n  }, [gqlCollections, gqlCollectionsAreLoading, isNftGraphqlEnabled, queryCollections, queryCollectionsAreLoading])\n\n  const { chainId } = useWeb3React()\n  const { data: tokens, loading: tokensAreLoading } = useSearchTokens(debouncedSearchValue, chainId ?? 1)\n\n  const isNFTPage = useIsNftPage()\n\n  const [reducedTokens, reducedCollections] = organizeSearchResults(isNFTPage, tokens ?? [], gatedCollections ?? [])\n\n  // close dropdown on escape\n  useEffect(() => {\n    const escapeKeyDownHandler = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && isOpen) {\n        event.preventDefault()\n        toggleOpen()\n      }\n    }\n\n    document.addEventListener('keydown', escapeKeyDownHandler)\n\n    return () => {\n      document.removeEventListener('keydown', escapeKeyDownHandler)\n    }\n  }, [isOpen, toggleOpen, gatedCollections])\n\n  // clear searchbar when changing pages\n  useEffect(() => {\n    setSearchValue('')\n  }, [pathname])\n\n  // auto set cursor when searchbar is opened\n  useEffect(() => {\n    if (isOpen) {\n      inputRef.current?.focus()\n    }\n  }, [isOpen])\n\n  const isMobileOrTablet = isMobile || isTablet || !isNavSearchInputVisible\n\n  const trace = useTrace({ section: InterfaceSectionName.NAVBAR_SEARCH })\n\n  const navbarSearchEventProperties = {\n    navbar_search_input_text: debouncedSearchValue,\n    hasInput: debouncedSearchValue && debouncedSearchValue.length > 0,\n    ...trace,\n  }\n  const placeholderText = useMemo(() => {\n    return isMobileOrTablet ? t`Search` : t`Search tokens and NFT collections`\n  }, [isMobileOrTablet])\n\n  const handleKeyPress = useCallback(\n    (event: any) => {\n      if (event.key === '/') {\n        event.preventDefault()\n        !isOpen && toggleOpen()\n      }\n    },\n    [isOpen]\n  )\n\n  useEffect(() => {\n    const innerRef = inputRef.current\n\n    if (innerRef !== null) {\n      //only mount the listener when input available as ref\n      document.addEventListener('keydown', handleKeyPress)\n    }\n\n    return () => {\n      if (innerRef !== null) {\n        document.removeEventListener('keydown', handleKeyPress)\n      }\n    }\n  }, [handleKeyPress, inputRef])\n\n  return (\n    <Trace section={InterfaceSectionName.NAVBAR_SEARCH}>\n      <Box\n        data-cy=\"search-bar\"\n        position={{ sm: 'fixed', md: 'absolute', xl: 'relative' }}\n        width={{ sm: isOpen ? 'viewWidth' : 'auto', md: 'auto' }}\n        ref={searchRef}\n        className={styles.searchBarContainerNft}\n        display={{ sm: isOpen ? 'inline-block' : 'none', xl: 'inline-block' }}\n      >\n        <Row\n          className={clsx(\n            styles.nftSearchBar,\n            !isOpen && !isMobile && magicalGradientOnHover,\n            isMobileOrTablet && (isOpen ? styles.visible : styles.hidden)\n          )}\n          borderRadius={isOpen || isMobileOrTablet ? undefined : '12'}\n          borderTopRightRadius={isOpen && !isMobile ? '12' : undefined}\n          borderTopLeftRadius={isOpen && !isMobile ? '12' : undefined}\n          borderBottomWidth={isOpen || isMobileOrTablet ? '0px' : '1px'}\n          backgroundColor={isOpen ? 'backgroundSurface' : 'searchBackground'}\n          onClick={() => !isOpen && toggleOpen()}\n          gap=\"12\"\n        >\n          <Box className={styles.searchContentLeftAlign}>\n            <Box display={{ sm: 'none', md: 'flex' }}>\n              <MagnifyingGlassIcon />\n            </Box>\n            <Box display={{ sm: 'flex', md: 'none' }} color=\"textTertiary\" onClick={toggleOpen}>\n              <ChevronLeftIcon />\n            </Box>\n          </Box>\n          <TraceEvent\n            events={[BrowserEvent.onFocus]}\n            name={InterfaceEventName.NAVBAR_SEARCH_SELECTED}\n            element={InterfaceElementName.NAVBAR_SEARCH_INPUT}\n            properties={{ ...trace }}\n          >\n            <Trans\n              id={placeholderText}\n              render={({ translation }) => (\n                <Box\n                  as=\"input\"\n                  data-cy=\"search-bar-input\"\n                  placeholder={translation as string}\n                  onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                    !isOpen && toggleOpen()\n                    setSearchValue(event.target.value)\n                  }}\n                  onBlur={() =>\n                    sendAnalyticsEvent(InterfaceEventName.NAVBAR_SEARCH_EXITED, navbarSearchEventProperties)\n                  }\n                  className={`${styles.searchBarInput} ${styles.searchContentLeftAlign}`}\n                  value={searchValue}\n                  ref={inputRef}\n                  width=\"full\"\n                />\n              )}\n            />\n          </TraceEvent>\n          {!isOpen && <KeyShortCut>/</KeyShortCut>}\n        </Row>\n        <Box className={clsx(isOpen ? styles.visible : styles.hidden)}>\n          {isOpen && (\n            <SearchBarDropdown\n              toggleOpen={toggleOpen}\n              tokens={reducedTokens}\n              collections={reducedCollections}\n              queryText={debouncedSearchValue}\n              hasInput={debouncedSearchValue.length > 0}\n              isLoading={tokensAreLoading || gatedCollectionsAreLoading}\n            />\n          )}\n        </Box>\n      </Box>\n      {isMobileOrTablet && (\n        <NavIcon onClick={toggleOpen} label={placeholderText}>\n          <NavMagnifyingGlassIcon />\n        </NavIcon>\n      )}\n    </Trace>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}