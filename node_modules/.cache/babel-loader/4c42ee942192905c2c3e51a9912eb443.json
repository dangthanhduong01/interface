{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/components/Popups/TransactionPopup.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport { parseLocalActivity } from 'components/AccountDrawer/MiniPortfolio/Activity/parseLocal';\nimport { PortfolioLogo } from 'components/AccountDrawer/MiniPortfolio/PortfolioLogo';\nimport PortfolioRow from 'components/AccountDrawer/MiniPortfolio/PortfolioRow';\nimport Column from 'components/Column';\nimport useENSName from 'hooks/useENSName';\nimport { useCombinedActiveList } from 'state/lists/hooks';\nimport { useTransaction } from 'state/transactions/hooks';\nimport { EllipsisStyle, ThemedText } from 'theme';\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink';\nimport { PopupAlertTriangle } from './FailedNetworkSwitchPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Descriptor = _styled(ThemedText.BodySmall).withConfig({\n  displayName: \"TransactionPopup__Descriptor\",\n  componentId: \"sc-13d9pmm-0\"\n})([\"\", \"\"], EllipsisStyle);\nfunction TransactionPopupContent(_ref) {\n  _s();\n  var _tx$receipt;\n  let {\n    tx,\n    chainId\n  } = _ref;\n  const success = ((_tx$receipt = tx.receipt) === null || _tx$receipt === void 0 ? void 0 : _tx$receipt.status) === 1;\n  const tokens = useCombinedActiveList();\n  const activity = parseLocalActivity(tx, chainId, tokens);\n  const {\n    ENSName\n  } = useENSName(activity === null || activity === void 0 ? void 0 : activity.otherAccount);\n  if (!activity) return null;\n  const explorerUrl = getExplorerLink(chainId, tx.hash, ExplorerDataType.TRANSACTION);\n  return /*#__PURE__*/_jsxDEV(PortfolioRow, {\n    left: success ? /*#__PURE__*/_jsxDEV(Column, {\n      children: /*#__PURE__*/_jsxDEV(PortfolioLogo, {\n        chainId: chainId,\n        currencies: activity.currencies,\n        images: activity.logos,\n        accountAddress: activity.otherAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PopupAlertTriangle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this),\n    title: /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n      fontWeight: 500,\n      children: activity.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this),\n    descriptor: /*#__PURE__*/_jsxDEV(Descriptor, {\n      color: \"textSecondary\",\n      children: [activity.descriptor, ENSName !== null && ENSName !== void 0 ? ENSName : activity.otherAccount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this),\n    onClick: () => window.open(explorerUrl, '_blank')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionPopupContent, \"mw0AXNQ7bMHBqX9ujRoBTiSk2VY=\", false, function () {\n  return [useCombinedActiveList, useENSName];\n});\n_c = TransactionPopupContent;\nexport default function TransactionPopup(_ref2) {\n  _s2();\n  let {\n    hash\n  } = _ref2;\n  const {\n    chainId\n  } = useWeb3React();\n  const tx = useTransaction(hash);\n  if (!chainId || !tx) return null;\n  return /*#__PURE__*/_jsxDEV(TransactionPopupContent, {\n    tx: tx,\n    chainId: chainId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n}\n_s2(TransactionPopup, \"lGPSgSPGruamQBTYgX7xYv7XaGI=\", false, function () {\n  return [useWeb3React, useTransaction];\n});\n_c2 = TransactionPopup;\nvar _c, _c2;\n$RefreshReg$(_c, \"TransactionPopupContent\");\n$RefreshReg$(_c2, \"TransactionPopup\");","map":{"version":3,"names":["useWeb3React","parseLocalActivity","PortfolioLogo","PortfolioRow","Column","useENSName","useCombinedActiveList","useTransaction","EllipsisStyle","ThemedText","ExplorerDataType","getExplorerLink","PopupAlertTriangle","Descriptor","styled","BodySmall","TransactionPopupContent","tx","chainId","success","receipt","status","tokens","activity","ENSName","otherAccount","explorerUrl","hash","TRANSACTION","currencies","logos","title","descriptor","window","open","TransactionPopup"],"sources":["/home/diep/freelance/interface/src/components/Popups/TransactionPopup.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { parseLocalActivity } from 'components/AccountDrawer/MiniPortfolio/Activity/parseLocal'\nimport { PortfolioLogo } from 'components/AccountDrawer/MiniPortfolio/PortfolioLogo'\nimport PortfolioRow from 'components/AccountDrawer/MiniPortfolio/PortfolioRow'\nimport Column from 'components/Column'\nimport useENSName from 'hooks/useENSName'\nimport { useCombinedActiveList } from 'state/lists/hooks'\nimport { useTransaction } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/types'\nimport styled from 'styled-components/macro'\nimport { EllipsisStyle, ThemedText } from 'theme'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport { PopupAlertTriangle } from './FailedNetworkSwitchPopup'\n\nconst Descriptor = styled(ThemedText.BodySmall)`\n  ${EllipsisStyle}\n`\n\nfunction TransactionPopupContent({ tx, chainId }: { tx: TransactionDetails; chainId: number }) {\n  const success = tx.receipt?.status === 1\n  const tokens = useCombinedActiveList()\n  const activity = parseLocalActivity(tx, chainId, tokens)\n  const { ENSName } = useENSName(activity?.otherAccount)\n\n  if (!activity) return null\n\n  const explorerUrl = getExplorerLink(chainId, tx.hash, ExplorerDataType.TRANSACTION)\n\n  return (\n    <PortfolioRow\n      left={\n        success ? (\n          <Column>\n            <PortfolioLogo\n              chainId={chainId}\n              currencies={activity.currencies}\n              images={activity.logos}\n              accountAddress={activity.otherAccount}\n            />\n          </Column>\n        ) : (\n          <PopupAlertTriangle />\n        )\n      }\n      title={<ThemedText.SubHeader fontWeight={500}>{activity.title}</ThemedText.SubHeader>}\n      descriptor={\n        <Descriptor color=\"textSecondary\">\n          {activity.descriptor}\n          {ENSName ?? activity.otherAccount}\n        </Descriptor>\n      }\n      onClick={() => window.open(explorerUrl, '_blank')}\n    />\n  )\n}\n\nexport default function TransactionPopup({ hash }: { hash: string }) {\n  const { chainId } = useWeb3React()\n\n  const tx = useTransaction(hash)\n\n  if (!chainId || !tx) return null\n\n  return <TransactionPopupContent tx={tx} chainId={chainId} />\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}