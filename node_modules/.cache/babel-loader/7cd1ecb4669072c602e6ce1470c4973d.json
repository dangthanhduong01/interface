{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.confirmSafeMessage = exports.proposeSafeMessage = exports.getSafeMessage = exports.getSafeMessages = exports.getDecodedData = exports.getMasterCopies = exports.getSafeApps = exports.getChainConfig = exports.getChainsConfig = exports.proposeTransaction = exports.postSafeGasEstimation = exports.getTransactionDetails = exports.getTransactionQueue = exports.getTransactionHistory = exports.getCollectiblesPage = exports.getCollectibles = exports.getOwnedSafes = exports.getFiatCurrencies = exports.getBalances = exports.getMultisigTransactions = exports.getModuleTransactions = exports.getIncomingTransfers = exports.getSafeInfo = exports.setBaseUrl = void 0;\nconst endpoint_1 = require(\"./endpoint\");\nconst config_1 = require(\"./config\");\n__exportStar(require(\"./types/safe-info\"), exports);\n__exportStar(require(\"./types/safe-apps\"), exports);\n__exportStar(require(\"./types/transactions\"), exports);\n__exportStar(require(\"./types/chains\"), exports);\n__exportStar(require(\"./types/common\"), exports);\n__exportStar(require(\"./types/master-copies\"), exports);\n__exportStar(require(\"./types/decoded-data\"), exports);\n__exportStar(require(\"./types/safe-messages\"), exports);\n// Can be set externally to a different CGW host\nlet baseUrl = config_1.DEFAULT_BASE_URL;\n/**\n * Set the base CGW URL\n */\nconst setBaseUrl = url => {\n  baseUrl = url;\n};\nexports.setBaseUrl = setBaseUrl;\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Get basic information about a Safe. E.g. owners, modules, version etc\n */\nfunction getSafeInfo(chainId, address) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}', {\n    path: {\n      chainId,\n      address\n    }\n  });\n}\nexports.getSafeInfo = getSafeInfo;\n/**\n * Get filterable list of incoming transactions\n */\nfunction getIncomingTransfers(chainId, address, query, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/incoming-transfers/', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\nexports.getIncomingTransfers = getIncomingTransfers;\n/**\n * Get filterable list of module transactions\n */\nfunction getModuleTransactions(chainId, address, query, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/module-transactions/', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\nexports.getModuleTransactions = getModuleTransactions;\n/**\n * Get filterable list of multisig transactions\n */\nfunction getMultisigTransactions(chainId, address, query, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/multisig-transactions/', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\nexports.getMultisigTransactions = getMultisigTransactions;\n/**\n * Get the total balance and all assets stored in a Safe\n */\nfunction getBalances(chainId, address) {\n  let currency = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'usd';\n  let query = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/balances/{currency}', {\n    path: {\n      chainId,\n      address,\n      currency\n    },\n    query\n  });\n}\nexports.getBalances = getBalances;\n/**\n * Get a list of supported fiat currencies (e.g. USD, EUR etc)\n */\nfunction getFiatCurrencies() {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/balances/supported-fiat-codes');\n}\nexports.getFiatCurrencies = getFiatCurrencies;\n/**\n * Get the addresses of all Safes belonging to an owner\n */\nfunction getOwnedSafes(chainId, address) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/owners/{address}/safes', {\n    path: {\n      chainId,\n      address\n    }\n  });\n}\nexports.getOwnedSafes = getOwnedSafes;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectibles(chainId, address) {\n  let query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/collectibles', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  });\n}\nexports.getCollectibles = getCollectibles;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectiblesPage(chainId, address) {\n  let query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let pageUrl = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{address}/collectibles', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\nexports.getCollectiblesPage = getCollectiblesPage;\n/**\n * Get a list of past Safe transactions\n */\nfunction getTransactionHistory(chainId, address, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/history', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    query: {}\n  }, pageUrl);\n}\nexports.getTransactionHistory = getTransactionHistory;\n/**\n * Get the list of pending transactions\n */\nfunction getTransactionQueue(chainId, address, pageUrl, trusted) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/queued', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    query: {\n      trusted\n    }\n  }, pageUrl);\n}\nexports.getTransactionQueue = getTransactionQueue;\n/**\n * Get the details of an individual transaction by its id\n */\nfunction getTransactionDetails(chainId, transactionId) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{transactionId}', {\n    path: {\n      chainId,\n      transactionId\n    }\n  });\n}\nexports.getTransactionDetails = getTransactionDetails;\n/**\n * Request a gas estimate & recommmended tx nonce for a created transaction\n */\nfunction postSafeGasEstimation(chainId, address, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    body\n  });\n}\nexports.postSafeGasEstimation = postSafeGasEstimation;\n/**\n * Propose a new transaction for other owners to sign/execute\n */\nfunction proposeTransaction(chainId, address, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/propose', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    body\n  });\n}\nexports.proposeTransaction = proposeTransaction;\n/**\n * Returns all defined chain configs\n */\nfunction getChainsConfig(query) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains', {\n    query\n  });\n}\nexports.getChainsConfig = getChainsConfig;\n/**\n * Returns a chain config\n */\nfunction getChainConfig(chainId) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}', {\n    path: {\n      chainId: chainId\n    }\n  });\n}\nexports.getChainConfig = getChainConfig;\n/**\n * Returns Safe Apps List\n */\nfunction getSafeApps(chainId) {\n  let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safe-apps', {\n    path: {\n      chainId: chainId\n    },\n    query\n  });\n}\nexports.getSafeApps = getSafeApps;\n/**\n * Returns list of Master Copies\n */\nfunction getMasterCopies(chainId) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/about/master-copies', {\n    path: {\n      chainId: chainId\n    }\n  });\n}\nexports.getMasterCopies = getMasterCopies;\n/**\n * Returns decoded data\n */\nfunction getDecodedData(chainId, encodedData) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/data-decoder', {\n    path: {\n      chainId: chainId\n    },\n    body: {\n      data: encodedData\n    }\n  });\n}\nexports.getDecodedData = getDecodedData;\n/**\n * Returns list of `SafeMessage`s\n */\nfunction getSafeMessages(chainId, address, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    query: {}\n  }, pageUrl);\n}\nexports.getSafeMessages = getSafeMessages;\n/**\n * Returns a `SafeMessage`\n */\nfunction getSafeMessage(chainId, messageHash) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}', {\n    path: {\n      chainId,\n      message_hash: messageHash\n    }\n  });\n}\nexports.getSafeMessage = getSafeMessage;\n/**\n * Propose a new `SafeMessage` for other owners to sign\n */\nfunction proposeSafeMessage(chainId, address, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    body\n  });\n}\nexports.proposeSafeMessage = proposeSafeMessage;\n/**\n * Add a confirmation to a `SafeMessage`\n */\nfunction confirmSafeMessage(chainId, messageHash, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}/signatures', {\n    path: {\n      chainId,\n      message_hash: messageHash\n    },\n    body\n  });\n}\nexports.confirmSafeMessage = confirmSafeMessage;\n/* eslint-enable @typescript-eslint/explicit-module-boundary-types */","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.confirmSafeMessage = exports.proposeSafeMessage = exports.getSafeMessage = exports.getSafeMessages = exports.getDecodedData = exports.getMasterCopies = exports.getSafeApps = exports.getChainConfig = exports.getChainsConfig = exports.proposeTransaction = exports.postSafeGasEstimation = exports.getTransactionDetails = exports.getTransactionQueue = exports.getTransactionHistory = exports.getCollectiblesPage = exports.getCollectibles = exports.getOwnedSafes = exports.getFiatCurrencies = exports.getBalances = exports.getMultisigTransactions = exports.getModuleTransactions = exports.getIncomingTransfers = exports.getSafeInfo = exports.setBaseUrl = void 0;\nconst endpoint_1 = require(\"./endpoint\");\nconst config_1 = require(\"./config\");\n__exportStar(require(\"./types/safe-info\"), exports);\n__exportStar(require(\"./types/safe-apps\"), exports);\n__exportStar(require(\"./types/transactions\"), exports);\n__exportStar(require(\"./types/chains\"), exports);\n__exportStar(require(\"./types/common\"), exports);\n__exportStar(require(\"./types/master-copies\"), exports);\n__exportStar(require(\"./types/decoded-data\"), exports);\n__exportStar(require(\"./types/safe-messages\"), exports);\n// Can be set externally to a different CGW host\nlet baseUrl = config_1.DEFAULT_BASE_URL;\n/**\n * Set the base CGW URL\n */\nconst setBaseUrl = (url) => {\n    baseUrl = url;\n};\nexports.setBaseUrl = setBaseUrl;\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Get basic information about a Safe. E.g. owners, modules, version etc\n */\nfunction getSafeInfo(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}', { path: { chainId, address } });\n}\nexports.getSafeInfo = getSafeInfo;\n/**\n * Get filterable list of incoming transactions\n */\nfunction getIncomingTransfers(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/incoming-transfers/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getIncomingTransfers = getIncomingTransfers;\n/**\n * Get filterable list of module transactions\n */\nfunction getModuleTransactions(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/module-transactions/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getModuleTransactions = getModuleTransactions;\n/**\n * Get filterable list of multisig transactions\n */\nfunction getMultisigTransactions(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/multisig-transactions/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getMultisigTransactions = getMultisigTransactions;\n/**\n * Get the total balance and all assets stored in a Safe\n */\nfunction getBalances(chainId, address, currency = 'usd', query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/balances/{currency}', {\n        path: { chainId, address, currency },\n        query,\n    });\n}\nexports.getBalances = getBalances;\n/**\n * Get a list of supported fiat currencies (e.g. USD, EUR etc)\n */\nfunction getFiatCurrencies() {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/balances/supported-fiat-codes');\n}\nexports.getFiatCurrencies = getFiatCurrencies;\n/**\n * Get the addresses of all Safes belonging to an owner\n */\nfunction getOwnedSafes(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/owners/{address}/safes', { path: { chainId, address } });\n}\nexports.getOwnedSafes = getOwnedSafes;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectibles(chainId, address, query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/collectibles', {\n        path: { chainId, address },\n        query,\n    });\n}\nexports.getCollectibles = getCollectibles;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectiblesPage(chainId, address, query = {}, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{address}/collectibles', { path: { chainId, address }, query }, pageUrl);\n}\nexports.getCollectiblesPage = getCollectiblesPage;\n/**\n * Get a list of past Safe transactions\n */\nfunction getTransactionHistory(chainId, address, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/history', { path: { chainId, safe_address: address }, query: {} }, pageUrl);\n}\nexports.getTransactionHistory = getTransactionHistory;\n/**\n * Get the list of pending transactions\n */\nfunction getTransactionQueue(chainId, address, pageUrl, trusted) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/queued', { path: { chainId, safe_address: address }, query: { trusted } }, pageUrl);\n}\nexports.getTransactionQueue = getTransactionQueue;\n/**\n * Get the details of an individual transaction by its id\n */\nfunction getTransactionDetails(chainId, transactionId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{transactionId}', {\n        path: { chainId, transactionId },\n    });\n}\nexports.getTransactionDetails = getTransactionDetails;\n/**\n * Request a gas estimate & recommmended tx nonce for a created transaction\n */\nfunction postSafeGasEstimation(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.postSafeGasEstimation = postSafeGasEstimation;\n/**\n * Propose a new transaction for other owners to sign/execute\n */\nfunction proposeTransaction(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/propose', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.proposeTransaction = proposeTransaction;\n/**\n * Returns all defined chain configs\n */\nfunction getChainsConfig(query) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains', {\n        query,\n    });\n}\nexports.getChainsConfig = getChainsConfig;\n/**\n * Returns a chain config\n */\nfunction getChainConfig(chainId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}', {\n        path: { chainId: chainId },\n    });\n}\nexports.getChainConfig = getChainConfig;\n/**\n * Returns Safe Apps List\n */\nfunction getSafeApps(chainId, query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safe-apps', {\n        path: { chainId: chainId },\n        query,\n    });\n}\nexports.getSafeApps = getSafeApps;\n/**\n * Returns list of Master Copies\n */\nfunction getMasterCopies(chainId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/about/master-copies', {\n        path: { chainId: chainId },\n    });\n}\nexports.getMasterCopies = getMasterCopies;\n/**\n * Returns decoded data\n */\nfunction getDecodedData(chainId, encodedData) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/data-decoder', {\n        path: { chainId: chainId },\n        body: { data: encodedData },\n    });\n}\nexports.getDecodedData = getDecodedData;\n/**\n * Returns list of `SafeMessage`s\n */\nfunction getSafeMessages(chainId, address, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', { path: { chainId, safe_address: address }, query: {} }, pageUrl);\n}\nexports.getSafeMessages = getSafeMessages;\n/**\n * Returns a `SafeMessage`\n */\nfunction getSafeMessage(chainId, messageHash) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}', {\n        path: { chainId, message_hash: messageHash },\n    });\n}\nexports.getSafeMessage = getSafeMessage;\n/**\n * Propose a new `SafeMessage` for other owners to sign\n */\nfunction proposeSafeMessage(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.proposeSafeMessage = proposeSafeMessage;\n/**\n * Add a confirmation to a `SafeMessage`\n */\nfunction confirmSafeMessage(chainId, messageHash, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}/signatures', {\n        path: { chainId, message_hash: messageHash },\n        body,\n    });\n}\nexports.confirmSafeMessage = confirmSafeMessage;\n/* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}