{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/components/RangeSelector/PresetsButtons.tsx\";\nimport { Trans } from \"@lingui/react\";\nimport { ButtonOutlined } from 'components/Button';\nimport { AutoRow } from 'components/Row';\nimport { ThemedText } from 'theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _styled(ButtonOutlined).attrs(() => ({\n  padding: '8px',\n  $borderRadius: '8px'\n})).withConfig({\n  displayName: \"PresetsButtons__Button\",\n  componentId: \"sc-ko0mcr-0\"\n})([\"color:\", \";flex:1;\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.textPrimary;\n});\nexport default function PresetsButtons(_ref2) {\n  let {\n    onSetFullRange\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(AutoRow, {\n    gap: \"4px\",\n    width: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onSetFullRange,\n      children: /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedBody, {\n        fontSize: 12,\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Full Range\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = PresetsButtons;\nvar _c;\n$RefreshReg$(_c, \"PresetsButtons\");","map":{"version":3,"names":["ButtonOutlined","AutoRow","ThemedText","Button","styled","attrs","padding","$borderRadius","theme","textPrimary","PresetsButtons","onSetFullRange"],"sources":["/home/diep/freelance/interface/src/components/RangeSelector/PresetsButtons.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { ButtonOutlined } from 'components/Button'\nimport { AutoRow } from 'components/Row'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nconst Button = styled(ButtonOutlined).attrs(() => ({\n  padding: '8px',\n  $borderRadius: '8px',\n}))`\n  color: ${({ theme }) => theme.textPrimary};\n  flex: 1;\n`\n\ninterface PresetsButtonsProps {\n  onSetFullRange: () => void\n}\n\nexport default function PresetsButtons({ onSetFullRange }: PresetsButtonsProps) {\n  return (\n    <AutoRow gap=\"4px\" width=\"auto\">\n      <Button onClick={onSetFullRange}>\n        <ThemedText.DeprecatedBody fontSize={12}>\n          <Trans>Full Range</Trans>\n        </ThemedText.DeprecatedBody>\n      </Button>\n    </AutoRow>\n  )\n}\n"],"mappings":";;;AACA,SAASA,cAAc,QAAQ,mBAAmB;AAClD,SAASC,OAAO,QAAQ,gBAAgB;AAExC,SAASC,UAAU,QAAQ,OAAO;AAAA;AAElC,MAAMC,MAAM,GAAGC,OAAM,CAACJ,cAAc,CAAC,CAACK,KAAK,CAAC,OAAO;EACjDC,OAAO,EAAE,KAAK;EACdC,aAAa,EAAE;AACjB,CAAC,CAAC,CAAC;EAAA;EAAA;AAAA,2BACQ;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,WAAW;AAAA,EAE1C;AAMD,eAAe,SAASC,cAAc,QAA0C;EAAA,IAAzC;IAAEC;EAAoC,CAAC;EAC5E,oBACE,QAAC,OAAO;IAAC,GAAG,EAAC,KAAK;IAAC,KAAK,EAAC,MAAM;IAAA,uBAC7B,QAAC,MAAM;MAAC,OAAO,EAAEA,cAAe;MAAA,uBAC9B,QAAC,UAAU,CAAC,cAAc;QAAC,QAAQ,EAAE,EAAG;QAAA,uBACtC;UAAA;QAAA;MAAyB;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA;EACrB;IAAA;IAAA;IAAA;EAAA,QACD;AAEd;AAAC,KAVuBD,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}