{"ast":null,"code":"import { DefaultTheme as _DefaultTheme } from \"styled-components\";\nimport _styled from \"styled-components\";\nimport { readableColor } from 'polished';\nexport let BadgeVariant;\n(function (BadgeVariant) {\n  BadgeVariant[\"DEFAULT\"] = \"DEFAULT\";\n  BadgeVariant[\"NEGATIVE\"] = \"NEGATIVE\";\n  BadgeVariant[\"POSITIVE\"] = \"POSITIVE\";\n  BadgeVariant[\"PRIMARY\"] = \"PRIMARY\";\n  BadgeVariant[\"WARNING\"] = \"WARNING\";\n  BadgeVariant[\"PROMOTIONAL\"] = \"PROMOTIONAL\";\n  BadgeVariant[\"BRANDED\"] = \"BRANDED\";\n  BadgeVariant[\"SOFT\"] = \"SOFT\";\n  BadgeVariant[\"WARNING_OUTLINE\"] = \"WARNING_OUTLINE\";\n})(BadgeVariant || (BadgeVariant = {}));\nfunction pickBackgroundColor(variant, theme) {\n  switch (variant) {\n    case BadgeVariant.BRANDED:\n      return theme.brandedGradient;\n    case BadgeVariant.PROMOTIONAL:\n      return theme.promotionalGradient;\n    case BadgeVariant.NEGATIVE:\n      return theme.accentCritical;\n    case BadgeVariant.POSITIVE:\n      return theme.accentSuccess;\n    case BadgeVariant.SOFT:\n      return theme.accentActionSoft;\n    case BadgeVariant.PRIMARY:\n      return theme.accentAction;\n    case BadgeVariant.WARNING:\n      return theme.accentWarning;\n    case BadgeVariant.WARNING_OUTLINE:\n      return 'transparent';\n    default:\n      return theme.backgroundInteractive;\n  }\n}\nfunction pickBorder(variant, theme) {\n  switch (variant) {\n    case BadgeVariant.WARNING_OUTLINE:\n      return `1px solid ${theme.accentWarning}`;\n    default:\n      return 'unset';\n  }\n}\nfunction pickFontColor(variant, theme) {\n  switch (variant) {\n    case BadgeVariant.BRANDED:\n      return theme.darkMode ? theme.accentTextDarkPrimary : theme.white;\n    case BadgeVariant.NEGATIVE:\n      return readableColor(theme.accentFailure);\n    case BadgeVariant.POSITIVE:\n      return readableColor(theme.accentSuccess);\n    case BadgeVariant.SOFT:\n      return theme.accentAction;\n    case BadgeVariant.WARNING:\n      return readableColor(theme.accentWarning);\n    case BadgeVariant.WARNING_OUTLINE:\n      return theme.accentWarning;\n    default:\n      return readableColor(theme.backgroundInteractive);\n  }\n}\nconst Badge = _styled.div.withConfig({\n  displayName: \"Badge\",\n  componentId: \"sc-1mhw5si-0\"\n})([\"align-items:center;background:\", \";border:\", \";border-radius:0.5rem;color:\", \";display:inline-flex;padding:4px 6px;justify-content:center;font-weight:500;\"], _ref => {\n  let {\n    theme,\n    variant\n  } = _ref;\n  return pickBackgroundColor(variant, theme);\n}, _ref2 => {\n  let {\n    theme,\n    variant\n  } = _ref2;\n  return pickBorder(variant, theme);\n}, _ref3 => {\n  let {\n    theme,\n    variant\n  } = _ref3;\n  return pickFontColor(variant, theme);\n});\nexport default Badge;\nexport const SmallBadge = _styled(Badge).withConfig({\n  displayName: \"Badge__SmallBadge\",\n  componentId: \"sc-1mhw5si-1\"\n})([\"border-radius:5px;padding:2px 4px;\"]);","map":{"version":3,"names":["readableColor","BadgeVariant","pickBackgroundColor","variant","theme","BRANDED","brandedGradient","PROMOTIONAL","promotionalGradient","NEGATIVE","accentCritical","POSITIVE","accentSuccess","SOFT","accentActionSoft","PRIMARY","accentAction","WARNING","accentWarning","WARNING_OUTLINE","backgroundInteractive","pickBorder","pickFontColor","darkMode","accentTextDarkPrimary","white","accentFailure","Badge","styled","div","SmallBadge"],"sources":["/home/diep/freelance/interface/src/components/Badge/index.tsx"],"sourcesContent":["import { readableColor } from 'polished'\nimport { PropsWithChildren } from 'react'\nimport styled, { DefaultTheme } from 'styled-components/macro'\n\nexport enum BadgeVariant {\n  DEFAULT = 'DEFAULT',\n  NEGATIVE = 'NEGATIVE',\n  POSITIVE = 'POSITIVE',\n  PRIMARY = 'PRIMARY',\n  WARNING = 'WARNING',\n  PROMOTIONAL = 'PROMOTIONAL',\n  BRANDED = 'BRANDED',\n  SOFT = 'SOFT',\n\n  WARNING_OUTLINE = 'WARNING_OUTLINE',\n}\n\ninterface BadgeProps {\n  variant?: BadgeVariant\n}\n\nfunction pickBackgroundColor(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n  switch (variant) {\n    case BadgeVariant.BRANDED:\n      return theme.brandedGradient\n    case BadgeVariant.PROMOTIONAL:\n      return theme.promotionalGradient\n    case BadgeVariant.NEGATIVE:\n      return theme.accentCritical\n    case BadgeVariant.POSITIVE:\n      return theme.accentSuccess\n    case BadgeVariant.SOFT:\n      return theme.accentActionSoft\n    case BadgeVariant.PRIMARY:\n      return theme.accentAction\n    case BadgeVariant.WARNING:\n      return theme.accentWarning\n    case BadgeVariant.WARNING_OUTLINE:\n      return 'transparent'\n    default:\n      return theme.backgroundInteractive\n  }\n}\n\nfunction pickBorder(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n  switch (variant) {\n    case BadgeVariant.WARNING_OUTLINE:\n      return `1px solid ${theme.accentWarning}`\n    default:\n      return 'unset'\n  }\n}\n\nfunction pickFontColor(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n  switch (variant) {\n    case BadgeVariant.BRANDED:\n      return theme.darkMode ? theme.accentTextDarkPrimary : theme.white\n    case BadgeVariant.NEGATIVE:\n      return readableColor(theme.accentFailure)\n    case BadgeVariant.POSITIVE:\n      return readableColor(theme.accentSuccess)\n    case BadgeVariant.SOFT:\n      return theme.accentAction\n    case BadgeVariant.WARNING:\n      return readableColor(theme.accentWarning)\n    case BadgeVariant.WARNING_OUTLINE:\n      return theme.accentWarning\n    default:\n      return readableColor(theme.backgroundInteractive)\n  }\n}\n\nconst Badge = styled.div<PropsWithChildren<BadgeProps>>`\n  align-items: center;\n  background: ${({ theme, variant }) => pickBackgroundColor(variant, theme)};\n  border: ${({ theme, variant }) => pickBorder(variant, theme)};\n  border-radius: 0.5rem;\n  color: ${({ theme, variant }) => pickFontColor(variant, theme)};\n  display: inline-flex;\n  padding: 4px 6px;\n  justify-content: center;\n  font-weight: 500;\n`\n\nexport default Badge\n\nexport const SmallBadge = styled(Badge)`\n  border-radius: 5px;\n  padding: 2px 4px;\n`\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,UAAU;AAIxC,WAAYC,YAAY;AAWvB,WAXWA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;AAAA,GAAZA,YAAY,KAAZA,YAAY;AAiBxB,SAASC,mBAAmB,CAACC,OAAiC,EAAEC,KAAmB,EAAU;EAC3F,QAAQD,OAAO;IACb,KAAKF,YAAY,CAACI,OAAO;MACvB,OAAOD,KAAK,CAACE,eAAe;IAC9B,KAAKL,YAAY,CAACM,WAAW;MAC3B,OAAOH,KAAK,CAACI,mBAAmB;IAClC,KAAKP,YAAY,CAACQ,QAAQ;MACxB,OAAOL,KAAK,CAACM,cAAc;IAC7B,KAAKT,YAAY,CAACU,QAAQ;MACxB,OAAOP,KAAK,CAACQ,aAAa;IAC5B,KAAKX,YAAY,CAACY,IAAI;MACpB,OAAOT,KAAK,CAACU,gBAAgB;IAC/B,KAAKb,YAAY,CAACc,OAAO;MACvB,OAAOX,KAAK,CAACY,YAAY;IAC3B,KAAKf,YAAY,CAACgB,OAAO;MACvB,OAAOb,KAAK,CAACc,aAAa;IAC5B,KAAKjB,YAAY,CAACkB,eAAe;MAC/B,OAAO,aAAa;IACtB;MACE,OAAOf,KAAK,CAACgB,qBAAqB;EAAA;AAExC;AAEA,SAASC,UAAU,CAAClB,OAAiC,EAAEC,KAAmB,EAAU;EAClF,QAAQD,OAAO;IACb,KAAKF,YAAY,CAACkB,eAAe;MAC/B,OAAQ,aAAYf,KAAK,CAACc,aAAc,EAAC;IAC3C;MACE,OAAO,OAAO;EAAA;AAEpB;AAEA,SAASI,aAAa,CAACnB,OAAiC,EAAEC,KAAmB,EAAU;EACrF,QAAQD,OAAO;IACb,KAAKF,YAAY,CAACI,OAAO;MACvB,OAAOD,KAAK,CAACmB,QAAQ,GAAGnB,KAAK,CAACoB,qBAAqB,GAAGpB,KAAK,CAACqB,KAAK;IACnE,KAAKxB,YAAY,CAACQ,QAAQ;MACxB,OAAOT,aAAa,CAACI,KAAK,CAACsB,aAAa,CAAC;IAC3C,KAAKzB,YAAY,CAACU,QAAQ;MACxB,OAAOX,aAAa,CAACI,KAAK,CAACQ,aAAa,CAAC;IAC3C,KAAKX,YAAY,CAACY,IAAI;MACpB,OAAOT,KAAK,CAACY,YAAY;IAC3B,KAAKf,YAAY,CAACgB,OAAO;MACvB,OAAOjB,aAAa,CAACI,KAAK,CAACc,aAAa,CAAC;IAC3C,KAAKjB,YAAY,CAACkB,eAAe;MAC/B,OAAOf,KAAK,CAACc,aAAa;IAC5B;MACE,OAAOlB,aAAa,CAACI,KAAK,CAACgB,qBAAqB,CAAC;EAAA;AAEvD;AAEA,MAAMO,KAAK,GAAGC,OAAM,CAACC,GAAG;EAAA;EAAA;AAAA,mKAER;EAAA,IAAC;IAAEzB,KAAK;IAAED;EAAQ,CAAC;EAAA,OAAKD,mBAAmB,CAACC,OAAO,EAAEC,KAAK,CAAC;AAAA,GAC/D;EAAA,IAAC;IAAEA,KAAK;IAAED;EAAQ,CAAC;EAAA,OAAKkB,UAAU,CAAClB,OAAO,EAAEC,KAAK,CAAC;AAAA,GAEnD;EAAA,IAAC;IAAEA,KAAK;IAAED;EAAQ,CAAC;EAAA,OAAKmB,aAAa,CAACnB,OAAO,EAAEC,KAAK,CAAC;AAAA,EAK/D;AAED,eAAeuB,KAAK;AAEpB,OAAO,MAAMG,UAAU,GAAGF,OAAM,CAACD,KAAK,CAAC;EAAA;EAAA;AAAA,0CAGtC"},"metadata":{},"sourceType":"module"}