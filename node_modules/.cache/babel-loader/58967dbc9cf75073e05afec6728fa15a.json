{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Constants_1 = require(\"./Constants\");\nvar StatsigLocalStorage = /** @class */function () {\n  function StatsigLocalStorage() {}\n  StatsigLocalStorage.getItem = function (key) {\n    var _a;\n    try {\n      if (this.isStorageAccessible()) {\n        return window.localStorage.getItem(key);\n      }\n    } catch (e) {}\n    return (_a = this.fallbackSessionCache[key]) !== null && _a !== void 0 ? _a : null;\n  };\n  StatsigLocalStorage.setItem = function (key, value) {\n    try {\n      if (this.isStorageAccessible()) {\n        window.localStorage.setItem(key, value);\n        return;\n      }\n    } catch (e) {}\n    this.fallbackSessionCache[key] = value;\n  };\n  StatsigLocalStorage.removeItem = function (key) {\n    try {\n      if (this.isStorageAccessible()) {\n        window.localStorage.removeItem(key);\n        return;\n      }\n    } catch (e) {}\n    delete this.fallbackSessionCache[key];\n  };\n  StatsigLocalStorage.cleanup = function () {\n    try {\n      if (this.isStorageAccessible(true) // clean up all storage keys if this session sets disabled\n      ) {\n        for (var key in window.localStorage) {\n          if (typeof window.localStorage[key] !== 'string') {\n            continue;\n          }\n          if (key == null) {\n            continue;\n          }\n          // if local storage is disabled on a subsequent session on this device,\n          // lets delete everything we already have stored in local storage\n          if (!this.disabled && key in Constants_1.LOCAL_STORAGE_KEYS) {\n            continue;\n          }\n          if (!this.disabled && key.substring(0, Constants_1.STORAGE_PREFIX.length) !== Constants_1.STORAGE_PREFIX) {\n            continue;\n          }\n          window.localStorage.removeItem(key);\n        }\n      }\n    } catch (e) {}\n  };\n  StatsigLocalStorage.isStorageAccessible = function (ignoreDisabledOption) {\n    if (ignoreDisabledOption === void 0) {\n      ignoreDisabledOption = false;\n    }\n    var canAccess = typeof Storage !== 'undefined' && typeof window !== 'undefined' && window != null && window.localStorage != null;\n    if (ignoreDisabledOption) {\n      return canAccess;\n    }\n    return !this.disabled && canAccess;\n  };\n  StatsigLocalStorage.disabled = false;\n  StatsigLocalStorage.fallbackSessionCache = {};\n  return StatsigLocalStorage;\n}();\nexports.default = StatsigLocalStorage;","map":{"version":3,"names":["Object","defineProperty","exports","value","Constants_1","require","StatsigLocalStorage","getItem","key","_a","isStorageAccessible","window","localStorage","e","fallbackSessionCache","setItem","removeItem","cleanup","disabled","LOCAL_STORAGE_KEYS","substring","STORAGE_PREFIX","length","ignoreDisabledOption","canAccess","Storage","default"],"sources":["/home/diep/freelance/interface/node_modules/statsig-js/dist/utils/StatsigLocalStorage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants_1 = require(\"./Constants\");\nvar StatsigLocalStorage = /** @class */ (function () {\n    function StatsigLocalStorage() {\n    }\n    StatsigLocalStorage.getItem = function (key) {\n        var _a;\n        try {\n            if (this.isStorageAccessible()) {\n                return window.localStorage.getItem(key);\n            }\n        }\n        catch (e) { }\n        return (_a = this.fallbackSessionCache[key]) !== null && _a !== void 0 ? _a : null;\n    };\n    StatsigLocalStorage.setItem = function (key, value) {\n        try {\n            if (this.isStorageAccessible()) {\n                window.localStorage.setItem(key, value);\n                return;\n            }\n        }\n        catch (e) { }\n        this.fallbackSessionCache[key] = value;\n    };\n    StatsigLocalStorage.removeItem = function (key) {\n        try {\n            if (this.isStorageAccessible()) {\n                window.localStorage.removeItem(key);\n                return;\n            }\n        }\n        catch (e) { }\n        delete this.fallbackSessionCache[key];\n    };\n    StatsigLocalStorage.cleanup = function () {\n        try {\n            if (this.isStorageAccessible(true) // clean up all storage keys if this session sets disabled\n            ) {\n                for (var key in window.localStorage) {\n                    if (typeof window.localStorage[key] !== 'string') {\n                        continue;\n                    }\n                    if (key == null) {\n                        continue;\n                    }\n                    // if local storage is disabled on a subsequent session on this device,\n                    // lets delete everything we already have stored in local storage\n                    if (!this.disabled && key in Constants_1.LOCAL_STORAGE_KEYS) {\n                        continue;\n                    }\n                    if (!this.disabled &&\n                        key.substring(0, Constants_1.STORAGE_PREFIX.length) !== Constants_1.STORAGE_PREFIX) {\n                        continue;\n                    }\n                    window.localStorage.removeItem(key);\n                }\n            }\n        }\n        catch (e) { }\n    };\n    StatsigLocalStorage.isStorageAccessible = function (ignoreDisabledOption) {\n        if (ignoreDisabledOption === void 0) { ignoreDisabledOption = false; }\n        var canAccess = typeof Storage !== 'undefined' &&\n            typeof window !== 'undefined' &&\n            window != null &&\n            window.localStorage != null;\n        if (ignoreDisabledOption) {\n            return canAccess;\n        }\n        return !this.disabled && canAccess;\n    };\n    StatsigLocalStorage.disabled = false;\n    StatsigLocalStorage.fallbackSessionCache = {};\n    return StatsigLocalStorage;\n}());\nexports.default = StatsigLocalStorage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}