{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvaluationReason = void 0;\nvar DynamicConfig_1 = __importDefault(require(\"./DynamicConfig\"));\nvar Layer_1 = __importDefault(require(\"./Layer\"));\nvar BootstrapValidator_1 = __importDefault(require(\"./utils/BootstrapValidator\"));\nvar Constants_1 = require(\"./utils/Constants\");\nvar Hashing_1 = require(\"./utils/Hashing\");\nvar StatsigAsyncStorage_1 = __importDefault(require(\"./utils/StatsigAsyncStorage\"));\nvar StatsigLocalStorage_1 = __importDefault(require(\"./utils/StatsigLocalStorage\"));\nvar EvaluationReason;\n(function (EvaluationReason) {\n  EvaluationReason[\"Network\"] = \"Network\";\n  EvaluationReason[\"Bootstrap\"] = \"Bootstrap\";\n  EvaluationReason[\"InvalidBootstrap\"] = \"InvalidBootstrap\";\n  EvaluationReason[\"Cache\"] = \"Cache\";\n  EvaluationReason[\"Prefetch\"] = \"Prefetch\";\n  EvaluationReason[\"Sticky\"] = \"Sticky\";\n  EvaluationReason[\"LocalOverride\"] = \"LocalOverride\";\n  EvaluationReason[\"Unrecognized\"] = \"Unrecognized\";\n  EvaluationReason[\"Uninitialized\"] = \"Uninitialized\";\n  EvaluationReason[\"Error\"] = \"Error\";\n})(EvaluationReason = exports.EvaluationReason || (exports.EvaluationReason = {}));\nvar MAX_USER_VALUE_CACHED = 10;\nvar StatsigStore = /** @class */function () {\n  function StatsigStore(sdkInternal) {\n    this.overrides = {\n      gates: {},\n      configs: {},\n      layers: {}\n    };\n    this.sdkInternal = sdkInternal;\n    this.userCacheKey = this.sdkInternal.getCurrentUserCacheKey();\n    this.values = {};\n    this.userValues = {\n      feature_gates: {},\n      dynamic_configs: {},\n      sticky_experiments: {},\n      layer_configs: {},\n      has_updates: false,\n      time: 0,\n      evaluation_time: 0\n    };\n    this.stickyDeviceExperiments = {};\n    this.loaded = false;\n    this.reason = EvaluationReason.Uninitialized;\n    this.loadFromLocalStorage();\n  }\n  StatsigStore.prototype.updateUser = function (isUserPrefetched) {\n    this.userCacheKey = this.sdkInternal.getCurrentUserCacheKey();\n    return this.setUserValueFromCache(isUserPrefetched);\n  };\n  StatsigStore.prototype.loadFromAsyncStorage = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.parseCachedValues;\n            return [4 /*yield*/, StatsigAsyncStorage_1.default.getItemAsync(Constants_1.INTERNAL_STORE_KEY)];\n          case 1:\n            _b = [_c.sent()];\n            return [4 /*yield*/, StatsigAsyncStorage_1.default.getItemAsync(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY)];\n          case 2:\n            _a.apply(this, _b.concat([_c.sent()]));\n            // triggered for react native, when async storage is setup.  Need to update the cache key\n            // as the stableID is not available when this is set in the constructor (RN/async storage clients only)\n            this.userCacheKey = this.sdkInternal.getCurrentUserCacheKey();\n            this.loaded = true;\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  StatsigStore.prototype.bootstrap = function (stableID, initializeValues) {\n    var _a, _b, _c;\n    var key = this.sdkInternal.getCurrentUserCacheKey();\n    var user = this.sdkInternal.getCurrentUser();\n    var reason = BootstrapValidator_1.default.isValid(user, initializeValues) ? EvaluationReason.Bootstrap : EvaluationReason.InvalidBootstrap;\n    // clients are going to assume that the SDK is bootstraped after this method runs\n    // if we fail to parse, we will fall back to defaults, but we dont want to throw\n    // when clients try to check gates/configs/etc after this point\n    this.loaded = true;\n    try {\n      this.userValues.feature_gates = (_a = initializeValues.feature_gates) !== null && _a !== void 0 ? _a : {};\n      this.userValues.dynamic_configs = (_b = initializeValues.dynamic_configs) !== null && _b !== void 0 ? _b : {};\n      this.userValues.layer_configs = (_c = initializeValues.layer_configs) !== null && _c !== void 0 ? _c : {};\n      this.userValues.evaluation_time = Date.now();\n      this.userValues.time = Date.now();\n      this.values[key] = this.userValues;\n      this.reason = reason;\n      this.loadOverrides();\n    } catch (_e) {\n      return;\n    }\n  };\n  StatsigStore.prototype.loadFromLocalStorage = function () {\n    if (StatsigAsyncStorage_1.default.asyncStorage) {\n      return;\n    }\n    this.parseCachedValues(StatsigLocalStorage_1.default.getItem(Constants_1.INTERNAL_STORE_KEY), StatsigLocalStorage_1.default.getItem(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY));\n    this.loaded = true;\n  };\n  StatsigStore.prototype.isLoaded = function () {\n    return this.loaded;\n  };\n  StatsigStore.prototype.getLastUpdateTime = function (user) {\n    var userHash = (0, Hashing_1.getHashValue)(JSON.stringify(user));\n    if (this.userValues.user_hash == userHash) {\n      return this.userValues.time;\n    }\n    return null;\n  };\n  StatsigStore.prototype.parseCachedValues = function (allValues, deviceExperiments) {\n    try {\n      this.values = allValues ? JSON.parse(allValues) : this.values;\n      this.setUserValueFromCache();\n    } catch (e) {\n      // Cached value corrupted, remove cache\n      this.removeFromStorage(Constants_1.INTERNAL_STORE_KEY);\n    }\n    try {\n      var deviceExpParsed = deviceExperiments ? JSON.parse(deviceExperiments) : null;\n      if (deviceExpParsed) {\n        this.stickyDeviceExperiments = deviceExpParsed;\n      }\n    } catch (e) {\n      this.removeFromStorage(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY);\n    }\n    this.loadOverrides();\n  };\n  StatsigStore.prototype.setUserValueFromCache = function (isUserPrefetched) {\n    if (isUserPrefetched === void 0) {\n      isUserPrefetched = false;\n    }\n    var cachedValues = this.values[this.userCacheKey];\n    if (cachedValues == null) {\n      this.resetUserValues();\n      this.reason = EvaluationReason.Uninitialized;\n      return false;\n    }\n    this.userValues = cachedValues;\n    this.reason = isUserPrefetched ? EvaluationReason.Prefetch : EvaluationReason.Cache;\n    return true;\n  };\n  StatsigStore.prototype.removeFromStorage = function (key) {\n    StatsigAsyncStorage_1.default.removeItemAsync(key);\n    StatsigLocalStorage_1.default.removeItem(key);\n  };\n  StatsigStore.prototype.loadOverrides = function () {\n    var overrides = StatsigLocalStorage_1.default.getItem(Constants_1.OVERRIDES_STORE_KEY);\n    if (overrides != null) {\n      try {\n        this.overrides = JSON.parse(overrides);\n      } catch (e) {\n        StatsigLocalStorage_1.default.removeItem(Constants_1.OVERRIDES_STORE_KEY);\n      }\n    }\n  };\n  StatsigStore.prototype.save = function (user, jsonConfigs) {\n    return __awaiter(this, void 0, void 0, function () {\n      var requestedUserCacheKey, data, cacheKeys, _i, cacheKeys_1, key, prefetched, requestedUserValues, userHash, filteredValues;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            requestedUserCacheKey = (0, Hashing_1.getUserCacheKey)(this.sdkInternal.getStatsigMetadata().stableID, user);\n            data = jsonConfigs;\n            if (data.prefetched_user_values) {\n              cacheKeys = Object.keys(data.prefetched_user_values);\n              for (_i = 0, cacheKeys_1 = cacheKeys; _i < cacheKeys_1.length; _i++) {\n                key = cacheKeys_1[_i];\n                prefetched = data.prefetched_user_values[key];\n                this.values[key] = this.convertAPIDataToCacheValues(prefetched, key);\n              }\n            }\n            if (requestedUserCacheKey) {\n              requestedUserValues = this.convertAPIDataToCacheValues(data, requestedUserCacheKey);\n              if (data.has_updates && data.time) {\n                userHash = (0, Hashing_1.getHashValue)(JSON.stringify(user));\n                requestedUserValues.user_hash = userHash;\n              }\n              this.values[requestedUserCacheKey] = requestedUserValues;\n              if (requestedUserCacheKey == this.userCacheKey) {\n                this.userValues = requestedUserValues;\n                this.reason = EvaluationReason.Network;\n              }\n            }\n            filteredValues = Object.entries(this.values).sort(function (_a, _b) {\n              var a = _a[1];\n              var b = _b[1];\n              if (a == null) {\n                return 1;\n              }\n              if (b == null) {\n                return -1;\n              }\n              return (b === null || b === void 0 ? void 0 : b.time) - (a === null || a === void 0 ? void 0 : a.time);\n            }).slice(0, MAX_USER_VALUE_CACHED);\n            this.values = Object.fromEntries(filteredValues);\n            if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 2];\n            return [4 /*yield*/, StatsigAsyncStorage_1.default.setItemAsync(Constants_1.INTERNAL_STORE_KEY, JSON.stringify(this.values))];\n          case 1:\n            _a.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            StatsigLocalStorage_1.default.setItem(Constants_1.INTERNAL_STORE_KEY, JSON.stringify(this.values));\n            _a.label = 3;\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  StatsigStore.prototype.checkGate = function (gateName, ignoreOverrides) {\n    var _a;\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    var gateNameHash = (0, Hashing_1.getHashValue)(gateName);\n    var gateValue = {\n      name: gateName,\n      value: false,\n      rule_id: '',\n      secondary_exposures: []\n    };\n    var details;\n    if (!ignoreOverrides && this.overrides.gates[gateName] != null) {\n      gateValue = {\n        name: gateName,\n        value: this.overrides.gates[gateName],\n        rule_id: 'override',\n        secondary_exposures: []\n      };\n      details = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n    } else {\n      var value = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a.feature_gates[gateNameHash];\n      if (value) {\n        gateValue = value;\n      }\n      details = this.getEvaluationDetails(value != null);\n    }\n    return {\n      evaluationDetails: details,\n      gate: gateValue\n    };\n  };\n  StatsigStore.prototype.getConfig = function (configName, ignoreOverrides) {\n    var _a, _b;\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    var configNameHash = (0, Hashing_1.getHashValue)(configName);\n    var configValue;\n    var details;\n    if (!ignoreOverrides && this.overrides.configs[configName] != null) {\n      details = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n      configValue = new DynamicConfig_1.default(configName, this.overrides.configs[configName], 'override', details);\n    } else if (((_a = this.userValues) === null || _a === void 0 ? void 0 : _a.dynamic_configs[configNameHash]) != null) {\n      var rawConfigValue = (_b = this.userValues) === null || _b === void 0 ? void 0 : _b.dynamic_configs[configNameHash];\n      details = this.getEvaluationDetails(true);\n      configValue = this.createDynamicConfig(configName, rawConfigValue, details);\n    } else {\n      details = this.getEvaluationDetails(false);\n      configValue = new DynamicConfig_1.default(configName, {}, '', details);\n    }\n    return configValue;\n  };\n  StatsigStore.prototype.getExperiment = function (expName, keepDeviceValue, ignoreOverrides) {\n    if (keepDeviceValue === void 0) {\n      keepDeviceValue = false;\n    }\n    if (ignoreOverrides === void 0) {\n      ignoreOverrides = false;\n    }\n    var exp;\n    var details;\n    if (!ignoreOverrides && this.overrides.configs[expName] != null) {\n      details = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n      exp = new DynamicConfig_1.default(expName, this.overrides.configs[expName], 'override', details);\n    } else {\n      var latestValue = this.getLatestValue(expName, 'dynamic_configs');\n      details = this.getEvaluationDetails(latestValue != null);\n      var finalValue = this.getPossiblyStickyValue(expName, latestValue, keepDeviceValue, false /* isLayer */, details);\n      exp = this.createDynamicConfig(expName, finalValue, details);\n    }\n    return exp;\n  };\n  StatsigStore.prototype.getLayer = function (logParameterFunction, layerName, keepDeviceValue) {\n    var _a, _b, _c, _d;\n    if (this.overrides.layers[layerName] != null) {\n      var details_1 = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n      return Layer_1.default._create(layerName, (_a = this.overrides.layers[layerName]) !== null && _a !== void 0 ? _a : {}, 'override', details_1, logParameterFunction);\n    }\n    var latestValue = this.getLatestValue(layerName, 'layer_configs');\n    var details = this.getEvaluationDetails(latestValue != null);\n    var finalValue = this.getPossiblyStickyValue(layerName, latestValue, keepDeviceValue, true /* isLayer */, details);\n    return Layer_1.default._create(layerName, (_b = finalValue === null || finalValue === void 0 ? void 0 : finalValue.value) !== null && _b !== void 0 ? _b : {}, (_c = finalValue === null || finalValue === void 0 ? void 0 : finalValue.rule_id) !== null && _c !== void 0 ? _c : '', details, logParameterFunction, finalValue === null || finalValue === void 0 ? void 0 : finalValue.secondary_exposures, finalValue === null || finalValue === void 0 ? void 0 : finalValue.undelegated_secondary_exposures, (_d = finalValue === null || finalValue === void 0 ? void 0 : finalValue.allocated_experiment_name) !== null && _d !== void 0 ? _d : '', finalValue === null || finalValue === void 0 ? void 0 : finalValue.explicit_parameters);\n  };\n  StatsigStore.prototype.overrideConfig = function (configName, value) {\n    try {\n      JSON.stringify(value);\n    } catch (e) {\n      console.warn('Failed to stringify given config override.  Dropping', e);\n      return;\n    }\n    this.overrides.configs[configName] = value;\n    this.saveOverrides();\n  };\n  StatsigStore.prototype.overrideLayer = function (layerName, value) {\n    try {\n      JSON.stringify(value);\n    } catch (e) {\n      console.warn('Failed to stringify given layer override.  Dropping', e);\n      return;\n    }\n    this.overrides.layers[layerName] = value;\n    this.saveOverrides();\n  };\n  StatsigStore.prototype.overrideGate = function (gateName, value) {\n    this.overrides.gates[gateName] = value;\n    this.saveOverrides();\n  };\n  StatsigStore.prototype.removeGateOverride = function (gateName) {\n    if (gateName == null) {\n      this.overrides.gates = {};\n    } else {\n      delete this.overrides.gates[gateName];\n    }\n    this.saveOverrides();\n  };\n  StatsigStore.prototype.removeConfigOverride = function (configName) {\n    if (configName == null) {\n      this.overrides.configs = {};\n    } else {\n      delete this.overrides.configs[configName];\n    }\n    this.saveOverrides();\n  };\n  StatsigStore.prototype.removeLayerOverride = function (layerName) {\n    if (layerName == null) {\n      this.overrides.layers = {};\n    } else {\n      delete this.overrides.layers[layerName];\n    }\n    this.saveOverrides();\n  };\n  StatsigStore.prototype.getAllOverrides = function () {\n    return this.overrides;\n  };\n  StatsigStore.prototype.saveOverrides = function () {\n    try {\n      StatsigLocalStorage_1.default.setItem(Constants_1.OVERRIDES_STORE_KEY, JSON.stringify(this.overrides));\n    } catch (e) {\n      console.warn('Failed to persist gate/config overrides');\n    }\n  };\n  StatsigStore.prototype.getLatestValue = function (name, topLevelKey) {\n    var _a, _b, _c, _d, _f;\n    var hash = (0, Hashing_1.getHashValue)(name);\n    return (_c = (_b = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a[topLevelKey]) === null || _b === void 0 ? void 0 : _b[hash]) !== null && _c !== void 0 ? _c : (_f = (_d = this.userValues) === null || _d === void 0 ? void 0 : _d[topLevelKey]) === null || _f === void 0 ? void 0 : _f[name];\n  };\n  // Sticky Logic: https://gist.github.com/daniel-statsig/3d8dfc9bdee531cffc96901c1a06a402\n  StatsigStore.prototype.getPossiblyStickyValue = function (name, latestValue, keepDeviceValue, isLayer, details) {\n    var _a;\n    // We don't want sticky behavior. Clear any sticky values and return latest.\n    if (!keepDeviceValue) {\n      this.removeStickyValue(name);\n      return latestValue;\n    }\n    // If there is no sticky value, save latest as sticky and return latest.\n    var stickyValue = this.getStickyValue(name);\n    if (!stickyValue) {\n      this.attemptToSaveStickyValue(name, latestValue);\n      return latestValue;\n    }\n    // Get the latest config value. Layers require a lookup by allocated_experiment_name.\n    var latestExperimentValue = null;\n    if (isLayer) {\n      latestExperimentValue = this.getLatestValue((_a = stickyValue === null || stickyValue === void 0 ? void 0 : stickyValue.allocated_experiment_name) !== null && _a !== void 0 ? _a : '', 'dynamic_configs');\n    } else {\n      latestExperimentValue = latestValue;\n    }\n    if ((latestExperimentValue === null || latestExperimentValue === void 0 ? void 0 : latestExperimentValue.is_experiment_active) == true) {\n      details.reason = EvaluationReason.Sticky;\n      return stickyValue;\n    }\n    if ((latestValue === null || latestValue === void 0 ? void 0 : latestValue.is_experiment_active) == true) {\n      this.attemptToSaveStickyValue(name, latestValue);\n    } else {\n      this.removeStickyValue(name);\n    }\n    return latestValue;\n  };\n  StatsigStore.prototype.createDynamicConfig = function (name, apiConfig, details) {\n    var _a, _b, _c;\n    return new DynamicConfig_1.default(name, (_a = apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.value) !== null && _a !== void 0 ? _a : {}, (_b = apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.rule_id) !== null && _b !== void 0 ? _b : '', details, apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.secondary_exposures, (_c = apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.allocated_experiment_name) !== null && _c !== void 0 ? _c : '');\n  };\n  StatsigStore.prototype.getStickyValue = function (name) {\n    var _a, _b;\n    var key = (0, Hashing_1.getHashValue)(name);\n    return (_b = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a.sticky_experiments[key]) !== null && _b !== void 0 ? _b : this.stickyDeviceExperiments[key];\n  };\n  StatsigStore.prototype.attemptToSaveStickyValue = function (name, config) {\n    var _a;\n    if (!config || !config.is_user_in_experiment || !config.is_experiment_active) {\n      return;\n    }\n    var key = (0, Hashing_1.getHashValue)(name);\n    if (config.is_device_based === true) {\n      // save sticky values in memory\n      this.stickyDeviceExperiments[key] = config;\n    } else if ((_a = this.userValues) === null || _a === void 0 ? void 0 : _a.sticky_experiments) {\n      this.userValues.sticky_experiments[key] = config;\n    }\n    // also save to persistent storage\n    this.saveStickyValuesToStorage();\n  };\n  StatsigStore.prototype.removeStickyValue = function (name) {\n    var _a, _b, _c, _d;\n    if (Object.keys((_b = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a.sticky_experiments) !== null && _b !== void 0 ? _b : {}).length === 0 && Object.keys((_c = this.stickyDeviceExperiments) !== null && _c !== void 0 ? _c : {}).length === 0) {\n      return;\n    }\n    var key = (0, Hashing_1.getHashValue)(name);\n    (_d = this.userValues) === null || _d === void 0 ? true : delete _d.sticky_experiments[key];\n    delete this.stickyDeviceExperiments[key];\n    this.saveStickyValuesToStorage();\n  };\n  StatsigStore.prototype.saveStickyValuesToStorage = function () {\n    this.values[this.userCacheKey] = this.userValues;\n    this.setItemToStorage(Constants_1.INTERNAL_STORE_KEY, JSON.stringify(this.values));\n    this.setItemToStorage(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY, JSON.stringify(this.stickyDeviceExperiments));\n  };\n  StatsigStore.prototype.getGlobalEvaluationDetails = function () {\n    var _a, _b;\n    return {\n      reason: (_a = this.reason) !== null && _a !== void 0 ? _a : EvaluationReason.Uninitialized,\n      time: (_b = this.userValues.evaluation_time) !== null && _b !== void 0 ? _b : 0\n    };\n  };\n  StatsigStore.prototype.getEvaluationDetails = function (valueExists, reasonOverride) {\n    var _a;\n    if (valueExists) {\n      return {\n        reason: this.reason,\n        time: (_a = this.userValues.evaluation_time) !== null && _a !== void 0 ? _a : Date.now()\n      };\n    } else {\n      return {\n        reason: reasonOverride !== null && reasonOverride !== void 0 ? reasonOverride : this.reason == EvaluationReason.Uninitialized ? EvaluationReason.Uninitialized : EvaluationReason.Unrecognized,\n        time: Date.now()\n      };\n    }\n  };\n  StatsigStore.prototype.resetUserValues = function () {\n    this.userValues = {\n      feature_gates: {},\n      dynamic_configs: {},\n      sticky_experiments: {},\n      layer_configs: {},\n      time: 0,\n      evaluation_time: 0\n    };\n  };\n  StatsigStore.prototype.convertAPIDataToCacheValues = function (data, cacheKey) {\n    var _a, _b;\n    // Specifically pulling keys from data here to avoid pulling in unwanted keys\n    return {\n      feature_gates: data.feature_gates,\n      layer_configs: data.layer_configs,\n      dynamic_configs: data.dynamic_configs,\n      sticky_experiments: (_b = (_a = this.values[cacheKey]) === null || _a === void 0 ? void 0 : _a.sticky_experiments) !== null && _b !== void 0 ? _b : {},\n      time: data.time == null || isNaN(data.time) ? 0 : data.time,\n      evaluation_time: Date.now()\n    };\n  };\n  StatsigStore.prototype.setItemToStorage = function (key, value) {\n    if (StatsigAsyncStorage_1.default.asyncStorage) {\n      StatsigAsyncStorage_1.default.setItemAsync(key, value);\n    } else {\n      StatsigLocalStorage_1.default.setItem(key, value);\n    }\n  };\n  return StatsigStore;\n}();\nexports.default = StatsigStore;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","EvaluationReason","DynamicConfig_1","require","Layer_1","BootstrapValidator_1","Constants_1","Hashing_1","StatsigAsyncStorage_1","StatsigLocalStorage_1","MAX_USER_VALUE_CACHED","StatsigStore","sdkInternal","overrides","gates","configs","layers","userCacheKey","getCurrentUserCacheKey","values","userValues","feature_gates","dynamic_configs","sticky_experiments","layer_configs","has_updates","time","evaluation_time","stickyDeviceExperiments","loaded","reason","Uninitialized","loadFromLocalStorage","prototype","updateUser","isUserPrefetched","setUserValueFromCache","loadFromAsyncStorage","_a","_b","_c","parseCachedValues","default","getItemAsync","INTERNAL_STORE_KEY","STICKY_DEVICE_EXPERIMENTS_KEY","concat","bootstrap","stableID","initializeValues","key","user","getCurrentUser","isValid","Bootstrap","InvalidBootstrap","Date","now","loadOverrides","_e","asyncStorage","getItem","isLoaded","getLastUpdateTime","userHash","getHashValue","JSON","stringify","user_hash","allValues","deviceExperiments","parse","removeFromStorage","deviceExpParsed","cachedValues","resetUserValues","Prefetch","Cache","removeItemAsync","removeItem","OVERRIDES_STORE_KEY","save","jsonConfigs","requestedUserCacheKey","data","cacheKeys","_i","cacheKeys_1","prefetched","requestedUserValues","filteredValues","getUserCacheKey","getStatsigMetadata","prefetched_user_values","keys","convertAPIDataToCacheValues","Network","entries","sort","a","b","slice","fromEntries","setItemAsync","setItem","checkGate","gateName","ignoreOverrides","gateNameHash","gateValue","name","rule_id","secondary_exposures","details","getEvaluationDetails","LocalOverride","evaluationDetails","gate","getConfig","configName","configNameHash","configValue","rawConfigValue","createDynamicConfig","getExperiment","expName","keepDeviceValue","exp","latestValue","getLatestValue","finalValue","getPossiblyStickyValue","getLayer","logParameterFunction","layerName","_d","details_1","_create","undelegated_secondary_exposures","allocated_experiment_name","explicit_parameters","overrideConfig","console","warn","saveOverrides","overrideLayer","overrideGate","removeGateOverride","removeConfigOverride","removeLayerOverride","getAllOverrides","topLevelKey","_f","hash","isLayer","removeStickyValue","stickyValue","getStickyValue","attemptToSaveStickyValue","latestExperimentValue","is_experiment_active","Sticky","apiConfig","config","is_user_in_experiment","is_device_based","saveStickyValuesToStorage","setItemToStorage","getGlobalEvaluationDetails","valueExists","reasonOverride","Unrecognized","cacheKey","isNaN"],"sources":["/home/diep/freelance/interface/node_modules/statsig-js/dist/StatsigStore.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EvaluationReason = void 0;\nvar DynamicConfig_1 = __importDefault(require(\"./DynamicConfig\"));\nvar Layer_1 = __importDefault(require(\"./Layer\"));\nvar BootstrapValidator_1 = __importDefault(require(\"./utils/BootstrapValidator\"));\nvar Constants_1 = require(\"./utils/Constants\");\nvar Hashing_1 = require(\"./utils/Hashing\");\nvar StatsigAsyncStorage_1 = __importDefault(require(\"./utils/StatsigAsyncStorage\"));\nvar StatsigLocalStorage_1 = __importDefault(require(\"./utils/StatsigLocalStorage\"));\nvar EvaluationReason;\n(function (EvaluationReason) {\n    EvaluationReason[\"Network\"] = \"Network\";\n    EvaluationReason[\"Bootstrap\"] = \"Bootstrap\";\n    EvaluationReason[\"InvalidBootstrap\"] = \"InvalidBootstrap\";\n    EvaluationReason[\"Cache\"] = \"Cache\";\n    EvaluationReason[\"Prefetch\"] = \"Prefetch\";\n    EvaluationReason[\"Sticky\"] = \"Sticky\";\n    EvaluationReason[\"LocalOverride\"] = \"LocalOverride\";\n    EvaluationReason[\"Unrecognized\"] = \"Unrecognized\";\n    EvaluationReason[\"Uninitialized\"] = \"Uninitialized\";\n    EvaluationReason[\"Error\"] = \"Error\";\n})(EvaluationReason = exports.EvaluationReason || (exports.EvaluationReason = {}));\nvar MAX_USER_VALUE_CACHED = 10;\nvar StatsigStore = /** @class */ (function () {\n    function StatsigStore(sdkInternal) {\n        this.overrides = {\n            gates: {},\n            configs: {},\n            layers: {},\n        };\n        this.sdkInternal = sdkInternal;\n        this.userCacheKey = this.sdkInternal.getCurrentUserCacheKey();\n        this.values = {};\n        this.userValues = {\n            feature_gates: {},\n            dynamic_configs: {},\n            sticky_experiments: {},\n            layer_configs: {},\n            has_updates: false,\n            time: 0,\n            evaluation_time: 0,\n        };\n        this.stickyDeviceExperiments = {};\n        this.loaded = false;\n        this.reason = EvaluationReason.Uninitialized;\n        this.loadFromLocalStorage();\n    }\n    StatsigStore.prototype.updateUser = function (isUserPrefetched) {\n        this.userCacheKey = this.sdkInternal.getCurrentUserCacheKey();\n        return this.setUserValueFromCache(isUserPrefetched);\n    };\n    StatsigStore.prototype.loadFromAsyncStorage = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.parseCachedValues;\n                        return [4 /*yield*/, StatsigAsyncStorage_1.default.getItemAsync(Constants_1.INTERNAL_STORE_KEY)];\n                    case 1:\n                        _b = [_c.sent()];\n                        return [4 /*yield*/, StatsigAsyncStorage_1.default.getItemAsync(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY)];\n                    case 2:\n                        _a.apply(this, _b.concat([_c.sent()]));\n                        // triggered for react native, when async storage is setup.  Need to update the cache key\n                        // as the stableID is not available when this is set in the constructor (RN/async storage clients only)\n                        this.userCacheKey = this.sdkInternal.getCurrentUserCacheKey();\n                        this.loaded = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StatsigStore.prototype.bootstrap = function (stableID, initializeValues) {\n        var _a, _b, _c;\n        var key = this.sdkInternal.getCurrentUserCacheKey();\n        var user = this.sdkInternal.getCurrentUser();\n        var reason = BootstrapValidator_1.default.isValid(user, initializeValues)\n            ? EvaluationReason.Bootstrap\n            : EvaluationReason.InvalidBootstrap;\n        // clients are going to assume that the SDK is bootstraped after this method runs\n        // if we fail to parse, we will fall back to defaults, but we dont want to throw\n        // when clients try to check gates/configs/etc after this point\n        this.loaded = true;\n        try {\n            this.userValues.feature_gates = (_a = initializeValues.feature_gates) !== null && _a !== void 0 ? _a : {};\n            this.userValues.dynamic_configs = (_b = initializeValues.dynamic_configs) !== null && _b !== void 0 ? _b : {};\n            this.userValues.layer_configs = (_c = initializeValues.layer_configs) !== null && _c !== void 0 ? _c : {};\n            this.userValues.evaluation_time = Date.now();\n            this.userValues.time = Date.now();\n            this.values[key] = this.userValues;\n            this.reason = reason;\n            this.loadOverrides();\n        }\n        catch (_e) {\n            return;\n        }\n    };\n    StatsigStore.prototype.loadFromLocalStorage = function () {\n        if (StatsigAsyncStorage_1.default.asyncStorage) {\n            return;\n        }\n        this.parseCachedValues(StatsigLocalStorage_1.default.getItem(Constants_1.INTERNAL_STORE_KEY), StatsigLocalStorage_1.default.getItem(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY));\n        this.loaded = true;\n    };\n    StatsigStore.prototype.isLoaded = function () {\n        return this.loaded;\n    };\n    StatsigStore.prototype.getLastUpdateTime = function (user) {\n        var userHash = (0, Hashing_1.getHashValue)(JSON.stringify(user));\n        if (this.userValues.user_hash == userHash) {\n            return this.userValues.time;\n        }\n        return null;\n    };\n    StatsigStore.prototype.parseCachedValues = function (allValues, deviceExperiments) {\n        try {\n            this.values = allValues ? JSON.parse(allValues) : this.values;\n            this.setUserValueFromCache();\n        }\n        catch (e) {\n            // Cached value corrupted, remove cache\n            this.removeFromStorage(Constants_1.INTERNAL_STORE_KEY);\n        }\n        try {\n            var deviceExpParsed = deviceExperiments\n                ? JSON.parse(deviceExperiments)\n                : null;\n            if (deviceExpParsed) {\n                this.stickyDeviceExperiments = deviceExpParsed;\n            }\n        }\n        catch (e) {\n            this.removeFromStorage(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY);\n        }\n        this.loadOverrides();\n    };\n    StatsigStore.prototype.setUserValueFromCache = function (isUserPrefetched) {\n        if (isUserPrefetched === void 0) { isUserPrefetched = false; }\n        var cachedValues = this.values[this.userCacheKey];\n        if (cachedValues == null) {\n            this.resetUserValues();\n            this.reason = EvaluationReason.Uninitialized;\n            return false;\n        }\n        this.userValues = cachedValues;\n        this.reason = isUserPrefetched\n            ? EvaluationReason.Prefetch\n            : EvaluationReason.Cache;\n        return true;\n    };\n    StatsigStore.prototype.removeFromStorage = function (key) {\n        StatsigAsyncStorage_1.default.removeItemAsync(key);\n        StatsigLocalStorage_1.default.removeItem(key);\n    };\n    StatsigStore.prototype.loadOverrides = function () {\n        var overrides = StatsigLocalStorage_1.default.getItem(Constants_1.OVERRIDES_STORE_KEY);\n        if (overrides != null) {\n            try {\n                this.overrides = JSON.parse(overrides);\n            }\n            catch (e) {\n                StatsigLocalStorage_1.default.removeItem(Constants_1.OVERRIDES_STORE_KEY);\n            }\n        }\n    };\n    StatsigStore.prototype.save = function (user, jsonConfigs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var requestedUserCacheKey, data, cacheKeys, _i, cacheKeys_1, key, prefetched, requestedUserValues, userHash, filteredValues;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        requestedUserCacheKey = (0, Hashing_1.getUserCacheKey)(this.sdkInternal.getStatsigMetadata().stableID, user);\n                        data = jsonConfigs;\n                        if (data.prefetched_user_values) {\n                            cacheKeys = Object.keys(data.prefetched_user_values);\n                            for (_i = 0, cacheKeys_1 = cacheKeys; _i < cacheKeys_1.length; _i++) {\n                                key = cacheKeys_1[_i];\n                                prefetched = data.prefetched_user_values[key];\n                                this.values[key] = this.convertAPIDataToCacheValues(prefetched, key);\n                            }\n                        }\n                        if (requestedUserCacheKey) {\n                            requestedUserValues = this.convertAPIDataToCacheValues(data, requestedUserCacheKey);\n                            if (data.has_updates && data.time) {\n                                userHash = (0, Hashing_1.getHashValue)(JSON.stringify(user));\n                                requestedUserValues.user_hash = userHash;\n                            }\n                            this.values[requestedUserCacheKey] = requestedUserValues;\n                            if (requestedUserCacheKey == this.userCacheKey) {\n                                this.userValues = requestedUserValues;\n                                this.reason = EvaluationReason.Network;\n                            }\n                        }\n                        filteredValues = Object.entries(this.values)\n                            .sort(function (_a, _b) {\n                            var a = _a[1];\n                            var b = _b[1];\n                            if (a == null) {\n                                return 1;\n                            }\n                            if (b == null) {\n                                return -1;\n                            }\n                            return (b === null || b === void 0 ? void 0 : b.time) - (a === null || a === void 0 ? void 0 : a.time);\n                        })\n                            .slice(0, MAX_USER_VALUE_CACHED);\n                        this.values = Object.fromEntries(filteredValues);\n                        if (!StatsigAsyncStorage_1.default.asyncStorage) return [3 /*break*/, 2];\n                        return [4 /*yield*/, StatsigAsyncStorage_1.default.setItemAsync(Constants_1.INTERNAL_STORE_KEY, JSON.stringify(this.values))];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        StatsigLocalStorage_1.default.setItem(Constants_1.INTERNAL_STORE_KEY, JSON.stringify(this.values));\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StatsigStore.prototype.checkGate = function (gateName, ignoreOverrides) {\n        var _a;\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        var gateNameHash = (0, Hashing_1.getHashValue)(gateName);\n        var gateValue = {\n            name: gateName,\n            value: false,\n            rule_id: '',\n            secondary_exposures: [],\n        };\n        var details;\n        if (!ignoreOverrides && this.overrides.gates[gateName] != null) {\n            gateValue = {\n                name: gateName,\n                value: this.overrides.gates[gateName],\n                rule_id: 'override',\n                secondary_exposures: [],\n            };\n            details = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n        }\n        else {\n            var value = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a.feature_gates[gateNameHash];\n            if (value) {\n                gateValue = value;\n            }\n            details = this.getEvaluationDetails(value != null);\n        }\n        return { evaluationDetails: details, gate: gateValue };\n    };\n    StatsigStore.prototype.getConfig = function (configName, ignoreOverrides) {\n        var _a, _b;\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        var configNameHash = (0, Hashing_1.getHashValue)(configName);\n        var configValue;\n        var details;\n        if (!ignoreOverrides && this.overrides.configs[configName] != null) {\n            details = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n            configValue = new DynamicConfig_1.default(configName, this.overrides.configs[configName], 'override', details);\n        }\n        else if (((_a = this.userValues) === null || _a === void 0 ? void 0 : _a.dynamic_configs[configNameHash]) != null) {\n            var rawConfigValue = (_b = this.userValues) === null || _b === void 0 ? void 0 : _b.dynamic_configs[configNameHash];\n            details = this.getEvaluationDetails(true);\n            configValue = this.createDynamicConfig(configName, rawConfigValue, details);\n        }\n        else {\n            details = this.getEvaluationDetails(false);\n            configValue = new DynamicConfig_1.default(configName, {}, '', details);\n        }\n        return configValue;\n    };\n    StatsigStore.prototype.getExperiment = function (expName, keepDeviceValue, ignoreOverrides) {\n        if (keepDeviceValue === void 0) { keepDeviceValue = false; }\n        if (ignoreOverrides === void 0) { ignoreOverrides = false; }\n        var exp;\n        var details;\n        if (!ignoreOverrides && this.overrides.configs[expName] != null) {\n            details = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n            exp = new DynamicConfig_1.default(expName, this.overrides.configs[expName], 'override', details);\n        }\n        else {\n            var latestValue = this.getLatestValue(expName, 'dynamic_configs');\n            details = this.getEvaluationDetails(latestValue != null);\n            var finalValue = this.getPossiblyStickyValue(expName, latestValue, keepDeviceValue, false /* isLayer */, details);\n            exp = this.createDynamicConfig(expName, finalValue, details);\n        }\n        return exp;\n    };\n    StatsigStore.prototype.getLayer = function (logParameterFunction, layerName, keepDeviceValue) {\n        var _a, _b, _c, _d;\n        if (this.overrides.layers[layerName] != null) {\n            var details_1 = this.getEvaluationDetails(false, EvaluationReason.LocalOverride);\n            return Layer_1.default._create(layerName, (_a = this.overrides.layers[layerName]) !== null && _a !== void 0 ? _a : {}, 'override', details_1, logParameterFunction);\n        }\n        var latestValue = this.getLatestValue(layerName, 'layer_configs');\n        var details = this.getEvaluationDetails(latestValue != null);\n        var finalValue = this.getPossiblyStickyValue(layerName, latestValue, keepDeviceValue, true /* isLayer */, details);\n        return Layer_1.default._create(layerName, (_b = finalValue === null || finalValue === void 0 ? void 0 : finalValue.value) !== null && _b !== void 0 ? _b : {}, (_c = finalValue === null || finalValue === void 0 ? void 0 : finalValue.rule_id) !== null && _c !== void 0 ? _c : '', details, logParameterFunction, finalValue === null || finalValue === void 0 ? void 0 : finalValue.secondary_exposures, finalValue === null || finalValue === void 0 ? void 0 : finalValue.undelegated_secondary_exposures, (_d = finalValue === null || finalValue === void 0 ? void 0 : finalValue.allocated_experiment_name) !== null && _d !== void 0 ? _d : '', finalValue === null || finalValue === void 0 ? void 0 : finalValue.explicit_parameters);\n    };\n    StatsigStore.prototype.overrideConfig = function (configName, value) {\n        try {\n            JSON.stringify(value);\n        }\n        catch (e) {\n            console.warn('Failed to stringify given config override.  Dropping', e);\n            return;\n        }\n        this.overrides.configs[configName] = value;\n        this.saveOverrides();\n    };\n    StatsigStore.prototype.overrideLayer = function (layerName, value) {\n        try {\n            JSON.stringify(value);\n        }\n        catch (e) {\n            console.warn('Failed to stringify given layer override.  Dropping', e);\n            return;\n        }\n        this.overrides.layers[layerName] = value;\n        this.saveOverrides();\n    };\n    StatsigStore.prototype.overrideGate = function (gateName, value) {\n        this.overrides.gates[gateName] = value;\n        this.saveOverrides();\n    };\n    StatsigStore.prototype.removeGateOverride = function (gateName) {\n        if (gateName == null) {\n            this.overrides.gates = {};\n        }\n        else {\n            delete this.overrides.gates[gateName];\n        }\n        this.saveOverrides();\n    };\n    StatsigStore.prototype.removeConfigOverride = function (configName) {\n        if (configName == null) {\n            this.overrides.configs = {};\n        }\n        else {\n            delete this.overrides.configs[configName];\n        }\n        this.saveOverrides();\n    };\n    StatsigStore.prototype.removeLayerOverride = function (layerName) {\n        if (layerName == null) {\n            this.overrides.layers = {};\n        }\n        else {\n            delete this.overrides.layers[layerName];\n        }\n        this.saveOverrides();\n    };\n    StatsigStore.prototype.getAllOverrides = function () {\n        return this.overrides;\n    };\n    StatsigStore.prototype.saveOverrides = function () {\n        try {\n            StatsigLocalStorage_1.default.setItem(Constants_1.OVERRIDES_STORE_KEY, JSON.stringify(this.overrides));\n        }\n        catch (e) {\n            console.warn('Failed to persist gate/config overrides');\n        }\n    };\n    StatsigStore.prototype.getLatestValue = function (name, topLevelKey) {\n        var _a, _b, _c, _d, _f;\n        var hash = (0, Hashing_1.getHashValue)(name);\n        return ((_c = (_b = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a[topLevelKey]) === null || _b === void 0 ? void 0 : _b[hash]) !== null && _c !== void 0 ? _c : (_f = (_d = this.userValues) === null || _d === void 0 ? void 0 : _d[topLevelKey]) === null || _f === void 0 ? void 0 : _f[name]);\n    };\n    // Sticky Logic: https://gist.github.com/daniel-statsig/3d8dfc9bdee531cffc96901c1a06a402\n    StatsigStore.prototype.getPossiblyStickyValue = function (name, latestValue, keepDeviceValue, isLayer, details) {\n        var _a;\n        // We don't want sticky behavior. Clear any sticky values and return latest.\n        if (!keepDeviceValue) {\n            this.removeStickyValue(name);\n            return latestValue;\n        }\n        // If there is no sticky value, save latest as sticky and return latest.\n        var stickyValue = this.getStickyValue(name);\n        if (!stickyValue) {\n            this.attemptToSaveStickyValue(name, latestValue);\n            return latestValue;\n        }\n        // Get the latest config value. Layers require a lookup by allocated_experiment_name.\n        var latestExperimentValue = null;\n        if (isLayer) {\n            latestExperimentValue = this.getLatestValue((_a = stickyValue === null || stickyValue === void 0 ? void 0 : stickyValue.allocated_experiment_name) !== null && _a !== void 0 ? _a : '', 'dynamic_configs');\n        }\n        else {\n            latestExperimentValue = latestValue;\n        }\n        if ((latestExperimentValue === null || latestExperimentValue === void 0 ? void 0 : latestExperimentValue.is_experiment_active) == true) {\n            details.reason = EvaluationReason.Sticky;\n            return stickyValue;\n        }\n        if ((latestValue === null || latestValue === void 0 ? void 0 : latestValue.is_experiment_active) == true) {\n            this.attemptToSaveStickyValue(name, latestValue);\n        }\n        else {\n            this.removeStickyValue(name);\n        }\n        return latestValue;\n    };\n    StatsigStore.prototype.createDynamicConfig = function (name, apiConfig, details) {\n        var _a, _b, _c;\n        return new DynamicConfig_1.default(name, (_a = apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.value) !== null && _a !== void 0 ? _a : {}, (_b = apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.rule_id) !== null && _b !== void 0 ? _b : '', details, apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.secondary_exposures, (_c = apiConfig === null || apiConfig === void 0 ? void 0 : apiConfig.allocated_experiment_name) !== null && _c !== void 0 ? _c : '');\n    };\n    StatsigStore.prototype.getStickyValue = function (name) {\n        var _a, _b;\n        var key = (0, Hashing_1.getHashValue)(name);\n        return ((_b = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a.sticky_experiments[key]) !== null && _b !== void 0 ? _b : this.stickyDeviceExperiments[key]);\n    };\n    StatsigStore.prototype.attemptToSaveStickyValue = function (name, config) {\n        var _a;\n        if (!config ||\n            !config.is_user_in_experiment ||\n            !config.is_experiment_active) {\n            return;\n        }\n        var key = (0, Hashing_1.getHashValue)(name);\n        if (config.is_device_based === true) {\n            // save sticky values in memory\n            this.stickyDeviceExperiments[key] = config;\n        }\n        else if ((_a = this.userValues) === null || _a === void 0 ? void 0 : _a.sticky_experiments) {\n            this.userValues.sticky_experiments[key] = config;\n        }\n        // also save to persistent storage\n        this.saveStickyValuesToStorage();\n    };\n    StatsigStore.prototype.removeStickyValue = function (name) {\n        var _a, _b, _c, _d;\n        if (Object.keys((_b = (_a = this.userValues) === null || _a === void 0 ? void 0 : _a.sticky_experiments) !== null && _b !== void 0 ? _b : {}).length === 0 &&\n            Object.keys((_c = this.stickyDeviceExperiments) !== null && _c !== void 0 ? _c : {}).length === 0) {\n            return;\n        }\n        var key = (0, Hashing_1.getHashValue)(name);\n        (_d = this.userValues) === null || _d === void 0 ? true : delete _d.sticky_experiments[key];\n        delete this.stickyDeviceExperiments[key];\n        this.saveStickyValuesToStorage();\n    };\n    StatsigStore.prototype.saveStickyValuesToStorage = function () {\n        this.values[this.userCacheKey] = this.userValues;\n        this.setItemToStorage(Constants_1.INTERNAL_STORE_KEY, JSON.stringify(this.values));\n        this.setItemToStorage(Constants_1.STICKY_DEVICE_EXPERIMENTS_KEY, JSON.stringify(this.stickyDeviceExperiments));\n    };\n    StatsigStore.prototype.getGlobalEvaluationDetails = function () {\n        var _a, _b;\n        return {\n            reason: (_a = this.reason) !== null && _a !== void 0 ? _a : EvaluationReason.Uninitialized,\n            time: (_b = this.userValues.evaluation_time) !== null && _b !== void 0 ? _b : 0,\n        };\n    };\n    StatsigStore.prototype.getEvaluationDetails = function (valueExists, reasonOverride) {\n        var _a;\n        if (valueExists) {\n            return {\n                reason: this.reason,\n                time: (_a = this.userValues.evaluation_time) !== null && _a !== void 0 ? _a : Date.now(),\n            };\n        }\n        else {\n            return {\n                reason: reasonOverride !== null && reasonOverride !== void 0 ? reasonOverride : (this.reason == EvaluationReason.Uninitialized\n                    ? EvaluationReason.Uninitialized\n                    : EvaluationReason.Unrecognized),\n                time: Date.now(),\n            };\n        }\n    };\n    StatsigStore.prototype.resetUserValues = function () {\n        this.userValues = {\n            feature_gates: {},\n            dynamic_configs: {},\n            sticky_experiments: {},\n            layer_configs: {},\n            time: 0,\n            evaluation_time: 0,\n        };\n    };\n    StatsigStore.prototype.convertAPIDataToCacheValues = function (data, cacheKey) {\n        var _a, _b;\n        // Specifically pulling keys from data here to avoid pulling in unwanted keys\n        return {\n            feature_gates: data.feature_gates,\n            layer_configs: data.layer_configs,\n            dynamic_configs: data.dynamic_configs,\n            sticky_experiments: (_b = (_a = this.values[cacheKey]) === null || _a === void 0 ? void 0 : _a.sticky_experiments) !== null && _b !== void 0 ? _b : {},\n            time: data.time == null || isNaN(data.time) ? 0 : data.time,\n            evaluation_time: Date.now(),\n        };\n    };\n    StatsigStore.prototype.setItemToStorage = function (key, value) {\n        if (StatsigAsyncStorage_1.default.asyncStorage) {\n            StatsigAsyncStorage_1.default.setItemAsync(key, value);\n        }\n        else {\n            StatsigLocalStorage_1.default.setItem(key, value);\n        }\n    };\n    return StatsigStore;\n}());\nexports.default = StatsigStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}