{"ast":null,"code":"import { BagItemStatus, BagStatus } from 'nft/types';\nimport { compareAssetsWithTransactionRoute } from './txRoute/combineItemsWithTxRoute';\nimport { filterUpdatedAssetsByState } from './updatedAssets';\nexport function getPurchasableAssets(itemsInBag) {\n  return itemsInBag.filter(item => item.status !== BagItemStatus.UNAVAILABLE).map(item => item.asset);\n}\nfunction createBagFromUpdatedAssets(unavailable, priceChanged, unchanged) {\n  return [...unavailable.map(unavailableAsset => ({\n    asset: unavailableAsset,\n    status: BagItemStatus.UNAVAILABLE\n  })), ...priceChanged.map(changedAsset => ({\n    asset: changedAsset,\n    status: BagItemStatus.REVIEWING_PRICE_CHANGE\n  })), ...unchanged.map(unchangedAsset => ({\n    asset: unchangedAsset,\n    status: BagItemStatus.REVIEWED\n  }))];\n}\nfunction evaluateNextBagState(hasAssets, shouldReview, hasAssetsInReview, shouldRefetchCalldata) {\n  if (!hasAssets) {\n    return BagStatus.ADDING_TO_BAG;\n  }\n  if (shouldReview) {\n    if (hasAssetsInReview) {\n      return BagStatus.IN_REVIEW;\n    }\n    return BagStatus.CONFIRM_REVIEW;\n  }\n  if (shouldRefetchCalldata) {\n    return BagStatus.CONFIRM_QUOTE;\n  }\n  return BagStatus.CONFIRMING_IN_WALLET;\n}\nexport function getNextBagState(wishAssetsToBuy, route, purchasingWithErc20) {\n  const {\n    hasPriceAdjustment,\n    updatedAssets\n  } = compareAssetsWithTransactionRoute(wishAssetsToBuy, route);\n  const shouldRefetchCalldata = hasPriceAdjustment && purchasingWithErc20;\n  const {\n    unchanged,\n    priceChanged,\n    unavailable\n  } = filterUpdatedAssetsByState(updatedAssets);\n  const hasAssets = updatedAssets.length > 0;\n  const hasAssetsInReview = priceChanged.length > 0;\n  const hasUnavailableAssets = unavailable.length > 0;\n  const shouldReview = hasAssetsInReview || hasUnavailableAssets;\n  const newBagItems = createBagFromUpdatedAssets(unavailable, priceChanged, unchanged);\n  const nextBagStatus = evaluateNextBagState(hasAssets, shouldReview, hasAssetsInReview, shouldRefetchCalldata);\n  return {\n    newBagItems,\n    nextBagStatus\n  };\n}","map":{"version":3,"names":["BagItemStatus","BagStatus","compareAssetsWithTransactionRoute","filterUpdatedAssetsByState","getPurchasableAssets","itemsInBag","filter","item","status","UNAVAILABLE","map","asset","createBagFromUpdatedAssets","unavailable","priceChanged","unchanged","unavailableAsset","changedAsset","REVIEWING_PRICE_CHANGE","unchangedAsset","REVIEWED","evaluateNextBagState","hasAssets","shouldReview","hasAssetsInReview","shouldRefetchCalldata","ADDING_TO_BAG","IN_REVIEW","CONFIRM_REVIEW","CONFIRM_QUOTE","CONFIRMING_IN_WALLET","getNextBagState","wishAssetsToBuy","route","purchasingWithErc20","hasPriceAdjustment","updatedAssets","length","hasUnavailableAssets","newBagItems","nextBagStatus"],"sources":["/home/diep/freelance/interface/src/nft/utils/bag.ts"],"sourcesContent":["import { BagItem, BagItemStatus, BagStatus, RoutingItem, UpdatedGenieAsset } from 'nft/types'\n\nimport { compareAssetsWithTransactionRoute } from './txRoute/combineItemsWithTxRoute'\nimport { filterUpdatedAssetsByState } from './updatedAssets'\n\nexport function getPurchasableAssets(itemsInBag: BagItem[]): UpdatedGenieAsset[] {\n  return itemsInBag.filter((item) => item.status !== BagItemStatus.UNAVAILABLE).map((item) => item.asset)\n}\n\nfunction createBagFromUpdatedAssets(\n  unavailable: UpdatedGenieAsset[],\n  priceChanged: UpdatedGenieAsset[],\n  unchanged: UpdatedGenieAsset[]\n): BagItem[] {\n  return [\n    ...unavailable.map((unavailableAsset) => ({\n      asset: unavailableAsset,\n      status: BagItemStatus.UNAVAILABLE,\n    })),\n    ...priceChanged.map((changedAsset) => ({\n      asset: changedAsset,\n      status: BagItemStatus.REVIEWING_PRICE_CHANGE,\n    })),\n    ...unchanged.map((unchangedAsset) => ({\n      asset: unchangedAsset,\n      status: BagItemStatus.REVIEWED,\n    })),\n  ]\n}\n\nfunction evaluateNextBagState(\n  hasAssets: boolean,\n  shouldReview: boolean,\n  hasAssetsInReview: boolean,\n  shouldRefetchCalldata: boolean\n): BagStatus {\n  if (!hasAssets) {\n    return BagStatus.ADDING_TO_BAG\n  }\n\n  if (shouldReview) {\n    if (hasAssetsInReview) {\n      return BagStatus.IN_REVIEW\n    }\n\n    return BagStatus.CONFIRM_REVIEW\n  }\n\n  if (shouldRefetchCalldata) {\n    return BagStatus.CONFIRM_QUOTE\n  }\n\n  return BagStatus.CONFIRMING_IN_WALLET\n}\n\nexport function getNextBagState(\n  wishAssetsToBuy: UpdatedGenieAsset[],\n  route: RoutingItem[],\n  purchasingWithErc20: boolean\n): { newBagItems: BagItem[]; nextBagStatus: BagStatus } {\n  const { hasPriceAdjustment, updatedAssets } = compareAssetsWithTransactionRoute(wishAssetsToBuy, route)\n  const shouldRefetchCalldata = hasPriceAdjustment && purchasingWithErc20\n\n  const { unchanged, priceChanged, unavailable } = filterUpdatedAssetsByState(updatedAssets)\n\n  const hasAssets = updatedAssets.length > 0\n  const hasAssetsInReview = priceChanged.length > 0\n  const hasUnavailableAssets = unavailable.length > 0\n  const shouldReview = hasAssetsInReview || hasUnavailableAssets\n\n  const newBagItems = createBagFromUpdatedAssets(unavailable, priceChanged, unchanged)\n  const nextBagStatus = evaluateNextBagState(hasAssets, shouldReview, hasAssetsInReview, shouldRefetchCalldata)\n\n  return { newBagItems, nextBagStatus }\n}\n"],"mappings":"AAAA,SAAkBA,aAAa,EAAEC,SAAS,QAAwC,WAAW;AAE7F,SAASC,iCAAiC,QAAQ,mCAAmC;AACrF,SAASC,0BAA0B,QAAQ,iBAAiB;AAE5D,OAAO,SAASC,oBAAoB,CAACC,UAAqB,EAAuB;EAC/E,OAAOA,UAAU,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKR,aAAa,CAACS,WAAW,CAAC,CAACC,GAAG,CAAEH,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;AACzG;AAEA,SAASC,0BAA0B,CACjCC,WAAgC,EAChCC,YAAiC,EACjCC,SAA8B,EACnB;EACX,OAAO,CACL,GAAGF,WAAW,CAACH,GAAG,CAAEM,gBAAgB,KAAM;IACxCL,KAAK,EAAEK,gBAAgB;IACvBR,MAAM,EAAER,aAAa,CAACS;EACxB,CAAC,CAAC,CAAC,EACH,GAAGK,YAAY,CAACJ,GAAG,CAAEO,YAAY,KAAM;IACrCN,KAAK,EAAEM,YAAY;IACnBT,MAAM,EAAER,aAAa,CAACkB;EACxB,CAAC,CAAC,CAAC,EACH,GAAGH,SAAS,CAACL,GAAG,CAAES,cAAc,KAAM;IACpCR,KAAK,EAAEQ,cAAc;IACrBX,MAAM,EAAER,aAAa,CAACoB;EACxB,CAAC,CAAC,CAAC,CACJ;AACH;AAEA,SAASC,oBAAoB,CAC3BC,SAAkB,EAClBC,YAAqB,EACrBC,iBAA0B,EAC1BC,qBAA8B,EACnB;EACX,IAAI,CAACH,SAAS,EAAE;IACd,OAAOrB,SAAS,CAACyB,aAAa;EAChC;EAEA,IAAIH,YAAY,EAAE;IAChB,IAAIC,iBAAiB,EAAE;MACrB,OAAOvB,SAAS,CAAC0B,SAAS;IAC5B;IAEA,OAAO1B,SAAS,CAAC2B,cAAc;EACjC;EAEA,IAAIH,qBAAqB,EAAE;IACzB,OAAOxB,SAAS,CAAC4B,aAAa;EAChC;EAEA,OAAO5B,SAAS,CAAC6B,oBAAoB;AACvC;AAEA,OAAO,SAASC,eAAe,CAC7BC,eAAoC,EACpCC,KAAoB,EACpBC,mBAA4B,EAC0B;EACtD,MAAM;IAAEC,kBAAkB;IAAEC;EAAc,CAAC,GAAGlC,iCAAiC,CAAC8B,eAAe,EAAEC,KAAK,CAAC;EACvG,MAAMR,qBAAqB,GAAGU,kBAAkB,IAAID,mBAAmB;EAEvE,MAAM;IAAEnB,SAAS;IAAED,YAAY;IAAED;EAAY,CAAC,GAAGV,0BAA0B,CAACiC,aAAa,CAAC;EAE1F,MAAMd,SAAS,GAAGc,aAAa,CAACC,MAAM,GAAG,CAAC;EAC1C,MAAMb,iBAAiB,GAAGV,YAAY,CAACuB,MAAM,GAAG,CAAC;EACjD,MAAMC,oBAAoB,GAAGzB,WAAW,CAACwB,MAAM,GAAG,CAAC;EACnD,MAAMd,YAAY,GAAGC,iBAAiB,IAAIc,oBAAoB;EAE9D,MAAMC,WAAW,GAAG3B,0BAA0B,CAACC,WAAW,EAAEC,YAAY,EAAEC,SAAS,CAAC;EACpF,MAAMyB,aAAa,GAAGnB,oBAAoB,CAACC,SAAS,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,qBAAqB,CAAC;EAE7G,OAAO;IAAEc,WAAW;IAAEC;EAAc,CAAC;AACvC"},"metadata":{},"sourceType":"module"}