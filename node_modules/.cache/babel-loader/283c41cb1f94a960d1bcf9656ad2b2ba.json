{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/components/Widget/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { sendAnalyticsEvent, useTrace } from '@uniswap/analytics';\nimport { InterfaceEventName, InterfaceSectionName, SwapEventName, SwapPriceUpdateUserResponse } from '@uniswap/analytics-events';\nimport { DialogAnimationType, EMPTY_TOKEN_LIST, SwapWidget, SwapWidgetSkeleton } from '@uniswap/widgets';\nimport { useWeb3React } from '@web3-react/core';\nimport { useToggleAccountDrawer } from 'components/AccountDrawer';\nimport { useActiveLocale } from 'hooks/useActiveLocale';\nimport { formatPercentInBasisPointsNumber, formatSwapQuoteReceivedEventProperties, formatToDecimal, getDurationFromDateMilliseconds, getPriceUpdateBasisPoints, getTokenAddress } from 'lib/utils/analytics';\nimport { useCallback, useState } from 'react';\nimport { useIsDarkMode } from 'theme/components/ThemeToggle';\nimport { computeRealizedPriceImpact } from 'utils/prices';\nimport { switchChain } from 'utils/switchChain';\nimport { useSyncWidgetInputs } from './inputs';\nimport { useSyncWidgetSettings } from './settings';\nimport { DARK_THEME, LIGHT_THEME } from './theme';\nimport { useSyncWidgetTransactions } from './transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DEFAULT_WIDGET_WIDTH = 360;\nconst WIDGET_ROUTER_URL = 'https://api.uniswap.org/v1/';\nfunction useWidgetTheme() {\n  _s();\n  return useIsDarkMode() ? DARK_THEME : LIGHT_THEME;\n}\n_s(useWidgetTheme, \"09tjfaQ63nJ2jBilWS1Xf2Mi97Y=\", false, function () {\n  return [useIsDarkMode];\n});\nexport default function Widget(_ref) {\n  _s2();\n  let {\n    defaultTokens,\n    width = DEFAULT_WIDGET_WIDTH,\n    onDefaultTokenChange,\n    onReviewSwapClick\n  } = _ref;\n  const {\n    connector,\n    provider,\n    chainId\n  } = useWeb3React();\n  const locale = useActiveLocale();\n  const theme = useWidgetTheme();\n  const {\n    inputs,\n    tokenSelector\n  } = useSyncWidgetInputs({\n    defaultTokens,\n    onDefaultTokenChange\n  });\n  const {\n    settings\n  } = useSyncWidgetSettings();\n  const {\n    transactions\n  } = useSyncWidgetTransactions();\n  const toggleWalletDrawer = useToggleAccountDrawer();\n  const onConnectWalletClick = useCallback(() => {\n    toggleWalletDrawer();\n    return false; // prevents the in-widget wallet modal from opening\n  }, [toggleWalletDrawer]);\n  const onSwitchChain = useCallback(\n  // TODO(WEB-1757): Widget should not break if this rejects - upstream the catch to ignore it.\n  _ref2 => {\n    let {\n      chainId\n    } = _ref2;\n    return switchChain(connector, Number(chainId)).catch(() => undefined);\n  }, [connector]);\n  const trace = useTrace({\n    section: InterfaceSectionName.WIDGET\n  });\n  const [initialQuoteDate, setInitialQuoteDate] = useState();\n  const onInitialSwapQuote = useCallback(trade => {\n    setInitialQuoteDate(new Date());\n    const eventProperties = {\n      // TODO(1416): Include undefined values.\n      ...formatSwapQuoteReceivedEventProperties(trade, /* gasUseEstimateUSD= */undefined, /* fetchingSwapQuoteStartTime= */undefined),\n      ...trace\n    };\n    sendAnalyticsEvent(SwapEventName.SWAP_QUOTE_RECEIVED, eventProperties);\n  }, [trace]);\n  const onApproveToken = useCallback(() => {\n    const input = inputs.value.INPUT;\n    if (!input) return;\n    const eventProperties = {\n      chain_id: input.chainId,\n      token_symbol: input.symbol,\n      token_address: getTokenAddress(input),\n      ...trace\n    };\n    sendAnalyticsEvent(InterfaceEventName.APPROVE_TOKEN_TXN_SUBMITTED, eventProperties);\n  }, [inputs.value.INPUT, trace]);\n  const onExpandSwapDetails = useCallback(() => {\n    sendAnalyticsEvent(SwapEventName.SWAP_DETAILS_EXPANDED, {\n      ...trace\n    });\n  }, [trace]);\n  const onSwapPriceUpdateAck = useCallback((stale, update) => {\n    const eventProperties = {\n      chain_id: update.inputAmount.currency.chainId,\n      response: SwapPriceUpdateUserResponse.ACCEPTED,\n      token_in_symbol: update.inputAmount.currency.symbol,\n      token_out_symbol: update.outputAmount.currency.symbol,\n      price_update_basis_points: getPriceUpdateBasisPoints(stale.executionPrice, update.executionPrice),\n      ...trace\n    };\n    sendAnalyticsEvent(SwapEventName.SWAP_PRICE_UPDATE_ACKNOWLEDGED, eventProperties);\n  }, [trace]);\n  const onSubmitSwapClick = useCallback(trade => {\n    const eventProperties = {\n      // TODO(1416): Include undefined values.\n      estimated_network_fee_usd: undefined,\n      transaction_deadline_seconds: undefined,\n      token_in_address: getTokenAddress(trade.inputAmount.currency),\n      token_out_address: getTokenAddress(trade.outputAmount.currency),\n      token_in_symbol: trade.inputAmount.currency.symbol,\n      token_out_symbol: trade.outputAmount.currency.symbol,\n      token_in_amount: formatToDecimal(trade.inputAmount, trade.inputAmount.currency.decimals),\n      token_out_amount: formatToDecimal(trade.outputAmount, trade.outputAmount.currency.decimals),\n      token_in_amount_usd: undefined,\n      token_out_amount_usd: undefined,\n      price_impact_basis_points: formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)),\n      allowed_slippage_basis_points: undefined,\n      is_auto_router_api: undefined,\n      is_auto_slippage: undefined,\n      chain_id: trade.inputAmount.currency.chainId,\n      duration_from_first_quote_to_swap_submission_milliseconds: getDurationFromDateMilliseconds(initialQuoteDate),\n      swap_quote_block_number: undefined,\n      ...trace\n    };\n    sendAnalyticsEvent(SwapEventName.SWAP_SUBMITTED_BUTTON_CLICKED, eventProperties);\n  }, [initialQuoteDate, trace]);\n  if (!(inputs.value.INPUT || inputs.value.OUTPUT)) {\n    return /*#__PURE__*/_jsxDEV(WidgetSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: 1,\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(SwapWidget, {\n        hideConnectionUI: true,\n        brandedFooter: false,\n        permit2: true,\n        routerUrl: WIDGET_ROUTER_URL,\n        locale: locale,\n        theme: theme,\n        width: width,\n        defaultChainId: chainId,\n        onConnectWalletClick: onConnectWalletClick,\n        provider: provider,\n        onSwitchChain: onSwitchChain,\n        tokenList: EMPTY_TOKEN_LIST // prevents loading the default token list, as we use our own token selector UI\n        ,\n        ...inputs,\n        ...settings,\n        ...transactions,\n        onExpandSwapDetails: onExpandSwapDetails,\n        onReviewSwapClick: onReviewSwapClick,\n        onSubmitSwapClick: onSubmitSwapClick,\n        onSwapApprove: onApproveToken,\n        onInitialSwapQuote: onInitialSwapQuote,\n        onSwapPriceUpdateAck: onSwapPriceUpdateAck,\n        dialogOptions: {\n          pageCentered: true,\n          animationType: DialogAnimationType.FADE\n        },\n        onError: (error, errorInfo) => {\n          sendAnalyticsEvent(SwapEventName.SWAP_ERROR, {\n            error,\n            errorInfo,\n            ...trace\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), tokenSelector]\n  }, void 0, true);\n}\n_s2(Widget, \"2mH58hxDFFEZK3xYSsPUvK56mzg=\", false, function () {\n  return [useWeb3React, useActiveLocale, useWidgetTheme, useSyncWidgetInputs, useSyncWidgetSettings, useSyncWidgetTransactions, useToggleAccountDrawer, useTrace];\n});\n_c = Widget;\nexport function WidgetSkeleton(_ref3) {\n  _s3();\n  let {\n    width = DEFAULT_WIDGET_WIDTH\n  } = _ref3;\n  const theme = useWidgetTheme();\n  return /*#__PURE__*/_jsxDEV(SwapWidgetSkeleton, {\n    theme: theme,\n    width: width\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 10\n  }, this);\n}\n_s3(WidgetSkeleton, \"P5gV22jOk50C+/SAwPE3ug7c6ds=\", false, function () {\n  return [useWidgetTheme];\n});\n_c2 = WidgetSkeleton;\nvar _c, _c2;\n$RefreshReg$(_c, \"Widget\");\n$RefreshReg$(_c2, \"WidgetSkeleton\");","map":{"version":3,"names":["sendAnalyticsEvent","useTrace","InterfaceEventName","InterfaceSectionName","SwapEventName","SwapPriceUpdateUserResponse","DialogAnimationType","EMPTY_TOKEN_LIST","SwapWidget","SwapWidgetSkeleton","useWeb3React","useToggleAccountDrawer","useActiveLocale","formatPercentInBasisPointsNumber","formatSwapQuoteReceivedEventProperties","formatToDecimal","getDurationFromDateMilliseconds","getPriceUpdateBasisPoints","getTokenAddress","useCallback","useState","useIsDarkMode","computeRealizedPriceImpact","switchChain","useSyncWidgetInputs","useSyncWidgetSettings","DARK_THEME","LIGHT_THEME","useSyncWidgetTransactions","DEFAULT_WIDGET_WIDTH","WIDGET_ROUTER_URL","useWidgetTheme","Widget","defaultTokens","width","onDefaultTokenChange","onReviewSwapClick","connector","provider","chainId","locale","theme","inputs","tokenSelector","settings","transactions","toggleWalletDrawer","onConnectWalletClick","onSwitchChain","Number","catch","undefined","trace","section","WIDGET","initialQuoteDate","setInitialQuoteDate","onInitialSwapQuote","trade","Date","eventProperties","SWAP_QUOTE_RECEIVED","onApproveToken","input","value","INPUT","chain_id","token_symbol","symbol","token_address","APPROVE_TOKEN_TXN_SUBMITTED","onExpandSwapDetails","SWAP_DETAILS_EXPANDED","onSwapPriceUpdateAck","stale","update","inputAmount","currency","response","ACCEPTED","token_in_symbol","token_out_symbol","outputAmount","price_update_basis_points","executionPrice","SWAP_PRICE_UPDATE_ACKNOWLEDGED","onSubmitSwapClick","estimated_network_fee_usd","transaction_deadline_seconds","token_in_address","token_out_address","token_in_amount","decimals","token_out_amount","token_in_amount_usd","token_out_amount_usd","price_impact_basis_points","allowed_slippage_basis_points","is_auto_router_api","is_auto_slippage","duration_from_first_quote_to_swap_submission_milliseconds","swap_quote_block_number","SWAP_SUBMITTED_BUTTON_CLICKED","OUTPUT","zIndex","position","pageCentered","animationType","FADE","error","errorInfo","SWAP_ERROR","WidgetSkeleton"],"sources":["/home/diep/freelance/interface/src/components/Widget/index.tsx"],"sourcesContent":["import { sendAnalyticsEvent, useTrace } from '@uniswap/analytics'\nimport {\n  InterfaceEventName,\n  InterfaceSectionName,\n  SwapEventName,\n  SwapPriceUpdateUserResponse,\n} from '@uniswap/analytics-events'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, TradeType } from '@uniswap/sdk-core'\nimport {\n  AddEthereumChainParameter,\n  DialogAnimationType,\n  EMPTY_TOKEN_LIST,\n  OnReviewSwapClick,\n  SwapWidget,\n  SwapWidgetSkeleton,\n} from '@uniswap/widgets'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport { useActiveLocale } from 'hooks/useActiveLocale'\nimport {\n  formatPercentInBasisPointsNumber,\n  formatSwapQuoteReceivedEventProperties,\n  formatToDecimal,\n  getDurationFromDateMilliseconds,\n  getPriceUpdateBasisPoints,\n  getTokenAddress,\n} from 'lib/utils/analytics'\nimport { useCallback, useState } from 'react'\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\nimport { computeRealizedPriceImpact } from 'utils/prices'\nimport { switchChain } from 'utils/switchChain'\n\nimport { DefaultTokens, SwapTokens, useSyncWidgetInputs } from './inputs'\nimport { useSyncWidgetSettings } from './settings'\nimport { DARK_THEME, LIGHT_THEME } from './theme'\nimport { useSyncWidgetTransactions } from './transactions'\n\nexport const DEFAULT_WIDGET_WIDTH = 360\n\nconst WIDGET_ROUTER_URL = 'https://api.uniswap.org/v1/'\n\nfunction useWidgetTheme() {\n  return useIsDarkMode() ? DARK_THEME : LIGHT_THEME\n}\n\ninterface WidgetProps {\n  defaultTokens: DefaultTokens\n  width?: number | string\n  onDefaultTokenChange?: (tokens: SwapTokens) => void\n  onReviewSwapClick?: OnReviewSwapClick\n}\n\nexport default function Widget({\n  defaultTokens,\n  width = DEFAULT_WIDGET_WIDTH,\n  onDefaultTokenChange,\n  onReviewSwapClick,\n}: WidgetProps) {\n  const { connector, provider, chainId } = useWeb3React()\n  const locale = useActiveLocale()\n  const theme = useWidgetTheme()\n  const { inputs, tokenSelector } = useSyncWidgetInputs({\n    defaultTokens,\n    onDefaultTokenChange,\n  })\n  const { settings } = useSyncWidgetSettings()\n  const { transactions } = useSyncWidgetTransactions()\n\n  const toggleWalletDrawer = useToggleAccountDrawer()\n  const onConnectWalletClick = useCallback(() => {\n    toggleWalletDrawer()\n    return false // prevents the in-widget wallet modal from opening\n  }, [toggleWalletDrawer])\n\n  const onSwitchChain = useCallback(\n    // TODO(WEB-1757): Widget should not break if this rejects - upstream the catch to ignore it.\n    ({ chainId }: AddEthereumChainParameter) => switchChain(connector, Number(chainId)).catch(() => undefined),\n    [connector]\n  )\n\n  const trace = useTrace({ section: InterfaceSectionName.WIDGET })\n  const [initialQuoteDate, setInitialQuoteDate] = useState<Date>()\n  const onInitialSwapQuote = useCallback(\n    (trade: Trade<Currency, Currency, TradeType>) => {\n      setInitialQuoteDate(new Date())\n      const eventProperties = {\n        // TODO(1416): Include undefined values.\n        ...formatSwapQuoteReceivedEventProperties(\n          trade,\n          /* gasUseEstimateUSD= */ undefined,\n          /* fetchingSwapQuoteStartTime= */ undefined\n        ),\n        ...trace,\n      }\n      sendAnalyticsEvent(SwapEventName.SWAP_QUOTE_RECEIVED, eventProperties)\n    },\n    [trace]\n  )\n  const onApproveToken = useCallback(() => {\n    const input = inputs.value.INPUT\n    if (!input) return\n    const eventProperties = {\n      chain_id: input.chainId,\n      token_symbol: input.symbol,\n      token_address: getTokenAddress(input),\n      ...trace,\n    }\n    sendAnalyticsEvent(InterfaceEventName.APPROVE_TOKEN_TXN_SUBMITTED, eventProperties)\n  }, [inputs.value.INPUT, trace])\n  const onExpandSwapDetails = useCallback(() => {\n    sendAnalyticsEvent(SwapEventName.SWAP_DETAILS_EXPANDED, { ...trace })\n  }, [trace])\n  const onSwapPriceUpdateAck = useCallback(\n    (stale: Trade<Currency, Currency, TradeType>, update: Trade<Currency, Currency, TradeType>) => {\n      const eventProperties = {\n        chain_id: update.inputAmount.currency.chainId,\n        response: SwapPriceUpdateUserResponse.ACCEPTED,\n        token_in_symbol: update.inputAmount.currency.symbol,\n        token_out_symbol: update.outputAmount.currency.symbol,\n        price_update_basis_points: getPriceUpdateBasisPoints(stale.executionPrice, update.executionPrice),\n        ...trace,\n      }\n      sendAnalyticsEvent(SwapEventName.SWAP_PRICE_UPDATE_ACKNOWLEDGED, eventProperties)\n    },\n    [trace]\n  )\n  const onSubmitSwapClick = useCallback(\n    (trade: Trade<Currency, Currency, TradeType>) => {\n      const eventProperties = {\n        // TODO(1416): Include undefined values.\n        estimated_network_fee_usd: undefined,\n        transaction_deadline_seconds: undefined,\n        token_in_address: getTokenAddress(trade.inputAmount.currency),\n        token_out_address: getTokenAddress(trade.outputAmount.currency),\n        token_in_symbol: trade.inputAmount.currency.symbol,\n        token_out_symbol: trade.outputAmount.currency.symbol,\n        token_in_amount: formatToDecimal(trade.inputAmount, trade.inputAmount.currency.decimals),\n        token_out_amount: formatToDecimal(trade.outputAmount, trade.outputAmount.currency.decimals),\n        token_in_amount_usd: undefined,\n        token_out_amount_usd: undefined,\n        price_impact_basis_points: formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)),\n        allowed_slippage_basis_points: undefined,\n        is_auto_router_api: undefined,\n        is_auto_slippage: undefined,\n        chain_id: trade.inputAmount.currency.chainId,\n        duration_from_first_quote_to_swap_submission_milliseconds: getDurationFromDateMilliseconds(initialQuoteDate),\n        swap_quote_block_number: undefined,\n        ...trace,\n      }\n      sendAnalyticsEvent(SwapEventName.SWAP_SUBMITTED_BUTTON_CLICKED, eventProperties)\n    },\n    [initialQuoteDate, trace]\n  )\n\n  if (!(inputs.value.INPUT || inputs.value.OUTPUT)) {\n    return <WidgetSkeleton />\n  }\n\n  return (\n    <>\n      <div style={{ zIndex: 1, position: 'relative' }}>\n        <SwapWidget\n          hideConnectionUI\n          brandedFooter={false}\n          permit2\n          routerUrl={WIDGET_ROUTER_URL}\n          locale={locale}\n          theme={theme}\n          width={width}\n          defaultChainId={chainId}\n          onConnectWalletClick={onConnectWalletClick}\n          provider={provider}\n          onSwitchChain={onSwitchChain}\n          tokenList={EMPTY_TOKEN_LIST} // prevents loading the default token list, as we use our own token selector UI\n          {...inputs}\n          {...settings}\n          {...transactions}\n          onExpandSwapDetails={onExpandSwapDetails}\n          onReviewSwapClick={onReviewSwapClick}\n          onSubmitSwapClick={onSubmitSwapClick}\n          onSwapApprove={onApproveToken}\n          onInitialSwapQuote={onInitialSwapQuote}\n          onSwapPriceUpdateAck={onSwapPriceUpdateAck}\n          dialogOptions={{\n            pageCentered: true,\n            animationType: DialogAnimationType.FADE,\n          }}\n          onError={(error, errorInfo) => {\n            sendAnalyticsEvent(SwapEventName.SWAP_ERROR, { error, errorInfo, ...trace })\n          }}\n        />\n      </div>\n      {tokenSelector}\n    </>\n  )\n}\n\nexport function WidgetSkeleton({ width = DEFAULT_WIDGET_WIDTH }: { width?: number | string }) {\n  const theme = useWidgetTheme()\n  return <SwapWidgetSkeleton theme={theme} width={width} />\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}