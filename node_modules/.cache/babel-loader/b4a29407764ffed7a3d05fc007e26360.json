{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/theme/components/ThemeToggle.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport Row from 'components/Row';\nimport { atom, useAtom } from 'jotai';\nimport { atomWithStorage, useAtomValue, useUpdateAtom } from 'jotai/utils';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { Moon, Sun } from 'react-feather';\nimport { Segment, SegmentedControl } from './SegmentedControl';\nimport { ThemedText } from './text';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THEME_UPDATE_DELAY = 100;\nconst DARKMODE_MEDIA_QUERY = window.matchMedia('(prefers-color-scheme: dark)');\nexport let ThemeMode;\n\n// Tracks the device theme\n(function (ThemeMode) {\n  ThemeMode[ThemeMode[\"LIGHT\"] = 0] = \"LIGHT\";\n  ThemeMode[ThemeMode[\"DARK\"] = 1] = \"DARK\";\n  ThemeMode[ThemeMode[\"AUTO\"] = 2] = \"AUTO\";\n})(ThemeMode || (ThemeMode = {}));\nconst systemThemeAtom = atom(DARKMODE_MEDIA_QUERY.matches ? ThemeMode.DARK : ThemeMode.LIGHT);\n\n// Tracks the user's selected theme mode\nconst themeModeAtom = atomWithStorage('interface_color_theme', ThemeMode.AUTO);\nexport function SystemThemeUpdater() {\n  _s();\n  const setSystemTheme = useUpdateAtom(systemThemeAtom);\n  useEffect(() => {\n    DARKMODE_MEDIA_QUERY.addEventListener('change', event => {\n      setSystemTheme(event.matches ? ThemeMode.DARK : ThemeMode.LIGHT);\n    });\n  }, [setSystemTheme]);\n  return null;\n}\n_s(SystemThemeUpdater, \"nTKLfKscDEYx6wQzhLgsma7i5jQ=\", false, function () {\n  return [useUpdateAtom];\n});\n_c = SystemThemeUpdater;\nexport function useIsDarkMode() {\n  _s2();\n  const mode = useAtomValue(themeModeAtom);\n  const systemTheme = useAtomValue(systemThemeAtom);\n  return (mode === ThemeMode.AUTO ? systemTheme : mode) === ThemeMode.DARK;\n}\n_s2(useIsDarkMode, \"U94vrmegF6A7PH0f/nwJhp4j8a0=\", false, function () {\n  return [useAtomValue, useAtomValue];\n});\nexport function useDarkModeManager() {\n  _s3();\n  const isDarkMode = useIsDarkMode();\n  const setMode = useUpdateAtom(themeModeAtom);\n  return useMemo(() => {\n    return [isDarkMode, setMode];\n  }, [isDarkMode, setMode]);\n}\n_s3(useDarkModeManager, \"Z9UAj9JYFgcjruHr9d6m4LDeWmQ=\", false, function () {\n  return [useIsDarkMode, useUpdateAtom];\n});\nexport default function ThemeToggle(_ref) {\n  _s4();\n  let {\n    disabled\n  } = _ref;\n  const [mode, setMode] = useAtom(themeModeAtom);\n  const switchMode = useCallback(mode => {\n    // Switch feels less jittery with short delay\n    !disabled && setTimeout(() => setMode(mode), THEME_UPDATE_DELAY);\n  }, [disabled, setMode]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      width: \"40%\",\n      children: /*#__PURE__*/_jsxDEV(ThemedText.SubHeaderSmall, {\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Theme\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      flexGrow: 1,\n      justify: \"flex-end\",\n      width: \"60%\",\n      children: /*#__PURE__*/_jsxDEV(SegmentedControl, {\n        selected: mode,\n        onSelect: switchMode,\n        children: [/*#__PURE__*/_jsxDEV(Segment, {\n          value: ThemeMode.AUTO,\n          testId: \"theme-auto\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Auto\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Segment, {\n          value: ThemeMode.LIGHT,\n          Icon: Sun,\n          testId: \"theme-lightmode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Segment, {\n          value: ThemeMode.DARK,\n          Icon: Moon,\n          testId: \"theme-darkmode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s4(ThemeToggle, \"h+KeIeS0+UL6SgtsQmU0LgSI/+U=\", false, function () {\n  return [useAtom];\n});\n_c2 = ThemeToggle;\nvar _c, _c2;\n$RefreshReg$(_c, \"SystemThemeUpdater\");\n$RefreshReg$(_c2, \"ThemeToggle\");","map":{"version":3,"names":["Row","atom","useAtom","atomWithStorage","useAtomValue","useUpdateAtom","useCallback","useEffect","useMemo","Moon","Sun","Segment","SegmentedControl","ThemedText","THEME_UPDATE_DELAY","DARKMODE_MEDIA_QUERY","window","matchMedia","ThemeMode","systemThemeAtom","matches","DARK","LIGHT","themeModeAtom","AUTO","SystemThemeUpdater","setSystemTheme","addEventListener","event","useIsDarkMode","mode","systemTheme","useDarkModeManager","isDarkMode","setMode","ThemeToggle","disabled","switchMode","setTimeout"],"sources":["/home/diep/freelance/interface/src/theme/components/ThemeToggle.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport Row from 'components/Row'\nimport { atom, useAtom } from 'jotai'\nimport { atomWithStorage, useAtomValue, useUpdateAtom } from 'jotai/utils'\nimport ms from 'ms.macro'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport { Moon, Sun } from 'react-feather'\n\nimport { Segment, SegmentedControl } from './SegmentedControl'\nimport { ThemedText } from './text'\n\nconst THEME_UPDATE_DELAY = ms`0.1s`\nconst DARKMODE_MEDIA_QUERY = window.matchMedia('(prefers-color-scheme: dark)')\n\nexport enum ThemeMode {\n  LIGHT,\n  DARK,\n  AUTO,\n}\n\n// Tracks the device theme\nconst systemThemeAtom = atom<ThemeMode.LIGHT | ThemeMode.DARK>(\n  DARKMODE_MEDIA_QUERY.matches ? ThemeMode.DARK : ThemeMode.LIGHT\n)\n\n// Tracks the user's selected theme mode\nconst themeModeAtom = atomWithStorage<ThemeMode>('interface_color_theme', ThemeMode.AUTO)\n\nexport function SystemThemeUpdater() {\n  const setSystemTheme = useUpdateAtom(systemThemeAtom)\n\n  useEffect(() => {\n    DARKMODE_MEDIA_QUERY.addEventListener('change', (event) => {\n      setSystemTheme(event.matches ? ThemeMode.DARK : ThemeMode.LIGHT)\n    })\n  }, [setSystemTheme])\n\n  return null\n}\n\nexport function useIsDarkMode(): boolean {\n  const mode = useAtomValue(themeModeAtom)\n  const systemTheme = useAtomValue(systemThemeAtom)\n\n  return (mode === ThemeMode.AUTO ? systemTheme : mode) === ThemeMode.DARK\n}\n\nexport function useDarkModeManager(): [boolean, (mode: ThemeMode) => void] {\n  const isDarkMode = useIsDarkMode()\n  const setMode = useUpdateAtom(themeModeAtom)\n\n  return useMemo(() => {\n    return [isDarkMode, setMode]\n  }, [isDarkMode, setMode])\n}\n\nexport default function ThemeToggle({ disabled }: { disabled?: boolean }) {\n  const [mode, setMode] = useAtom(themeModeAtom)\n  const switchMode = useCallback(\n    (mode: ThemeMode) => {\n      // Switch feels less jittery with short delay\n      !disabled && setTimeout(() => setMode(mode), THEME_UPDATE_DELAY)\n    },\n    [disabled, setMode]\n  )\n\n  return (\n    <Row align=\"center\">\n      <Row width=\"40%\">\n        <ThemedText.SubHeaderSmall color=\"primary\">\n          <Trans>Theme</Trans>\n        </ThemedText.SubHeaderSmall>\n      </Row>\n      <Row flexGrow={1} justify=\"flex-end\" width=\"60%\">\n        <SegmentedControl selected={mode} onSelect={switchMode}>\n          <Segment value={ThemeMode.AUTO} testId=\"theme-auto\">\n            <Trans>Auto</Trans>\n          </Segment>\n          <Segment value={ThemeMode.LIGHT} Icon={Sun} testId=\"theme-lightmode\" />\n          <Segment value={ThemeMode.DARK} Icon={Moon} testId=\"theme-darkmode\" />\n        </SegmentedControl>\n      </Row>\n    </Row>\n  )\n}\n"],"mappings":";;;;;;AACA,OAAOA,GAAG,MAAM,gBAAgB;AAChC,SAASC,IAAI,EAAEC,OAAO,QAAQ,OAAO;AACrC,SAASC,eAAe,EAAEC,YAAY,EAAEC,aAAa,QAAQ,aAAa;AAE1E,SAASC,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACvD,SAASC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AAEzC,SAASC,OAAO,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC9D,SAASC,UAAU,QAAQ,QAAQ;AAAA;AAEnC,MAAMC,kBAAkB,MAAW;AACnC,MAAMC,oBAAoB,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;AAE9E,WAAYC,SAAS;;AAMrB;AAAA,WANYA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;AAAA,GAATA,SAAS,KAATA,SAAS;AAOrB,MAAMC,eAAe,GAAGlB,IAAI,CAC1Bc,oBAAoB,CAACK,OAAO,GAAGF,SAAS,CAACG,IAAI,GAAGH,SAAS,CAACI,KAAK,CAChE;;AAED;AACA,MAAMC,aAAa,GAAGpB,eAAe,CAAY,uBAAuB,EAAEe,SAAS,CAACM,IAAI,CAAC;AAEzF,OAAO,SAASC,kBAAkB,GAAG;EAAA;EACnC,MAAMC,cAAc,GAAGrB,aAAa,CAACc,eAAe,CAAC;EAErDZ,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAACY,gBAAgB,CAAC,QAAQ,EAAGC,KAAK,IAAK;MACzDF,cAAc,CAACE,KAAK,CAACR,OAAO,GAAGF,SAAS,CAACG,IAAI,GAAGH,SAAS,CAACI,KAAK,CAAC;IAClE,CAAC,CAAC;EACJ,CAAC,EAAE,CAACI,cAAc,CAAC,CAAC;EAEpB,OAAO,IAAI;AACb;AAAC,GAVeD,kBAAkB;EAAA,QACTpB,aAAa;AAAA;AAAA,KADtBoB,kBAAkB;AAYlC,OAAO,SAASI,aAAa,GAAY;EAAA;EACvC,MAAMC,IAAI,GAAG1B,YAAY,CAACmB,aAAa,CAAC;EACxC,MAAMQ,WAAW,GAAG3B,YAAY,CAACe,eAAe,CAAC;EAEjD,OAAO,CAACW,IAAI,KAAKZ,SAAS,CAACM,IAAI,GAAGO,WAAW,GAAGD,IAAI,MAAMZ,SAAS,CAACG,IAAI;AAC1E;AAAC,IALeQ,aAAa;EAAA,QACdzB,YAAY,EACLA,YAAY;AAAA;AAKlC,OAAO,SAAS4B,kBAAkB,GAAyC;EAAA;EACzE,MAAMC,UAAU,GAAGJ,aAAa,EAAE;EAClC,MAAMK,OAAO,GAAG7B,aAAa,CAACkB,aAAa,CAAC;EAE5C,OAAOf,OAAO,CAAC,MAAM;IACnB,OAAO,CAACyB,UAAU,EAAEC,OAAO,CAAC;EAC9B,CAAC,EAAE,CAACD,UAAU,EAAEC,OAAO,CAAC,CAAC;AAC3B;AAAC,IAPeF,kBAAkB;EAAA,QACbH,aAAa,EAChBxB,aAAa;AAAA;AAO/B,eAAe,SAAS8B,WAAW,OAAuC;EAAA;EAAA,IAAtC;IAAEC;EAAiC,CAAC;EACtE,MAAM,CAACN,IAAI,EAAEI,OAAO,CAAC,GAAGhC,OAAO,CAACqB,aAAa,CAAC;EAC9C,MAAMc,UAAU,GAAG/B,WAAW,CAC3BwB,IAAe,IAAK;IACnB;IACA,CAACM,QAAQ,IAAIE,UAAU,CAAC,MAAMJ,OAAO,CAACJ,IAAI,CAAC,EAAEhB,kBAAkB,CAAC;EAClE,CAAC,EACD,CAACsB,QAAQ,EAAEF,OAAO,CAAC,CACpB;EAED,oBACE,QAAC,GAAG;IAAC,KAAK,EAAC,QAAQ;IAAA,wBACjB,QAAC,GAAG;MAAC,KAAK,EAAC,KAAK;MAAA,uBACd,QAAC,UAAU,CAAC,cAAc;QAAC,KAAK,EAAC,SAAS;QAAA,uBACxC;UAAA;QAAA;MAAoB;QAAA;QAAA;QAAA;MAAA;IACM;MAAA;MAAA;MAAA;IAAA,QACxB,eACN,QAAC,GAAG;MAAC,QAAQ,EAAE,CAAE;MAAC,OAAO,EAAC,UAAU;MAAC,KAAK,EAAC,KAAK;MAAA,uBAC9C,QAAC,gBAAgB;QAAC,QAAQ,EAAEJ,IAAK;QAAC,QAAQ,EAAEO,UAAW;QAAA,wBACrD,QAAC,OAAO;UAAC,KAAK,EAAEnB,SAAS,CAACM,IAAK;UAAC,MAAM,EAAC,YAAY;UAAA,uBACjD;YAAA;UAAA;QAAmB;UAAA;UAAA;UAAA;QAAA,QACX,eACV,QAAC,OAAO;UAAC,KAAK,EAAEN,SAAS,CAACI,KAAM;UAAC,IAAI,EAAEZ,GAAI;UAAC,MAAM,EAAC;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAG,eACvE,QAAC,OAAO;UAAC,KAAK,EAAEQ,SAAS,CAACG,IAAK;UAAC,IAAI,EAAEZ,IAAK;UAAC,MAAM,EAAC;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACrD;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,IA5BuB0B,WAAW;EAAA,QACTjC,OAAO;AAAA;AAAA,MADTiC,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}