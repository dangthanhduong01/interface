{"ast":null,"code":"var _jsxFileName = \"/home/diep/freelance/interface/src/components/Widget/inputs.tsx\",\n  _s = $RefreshSig$();\nimport { sendAnalyticsEvent, useTrace } from '@uniswap/analytics';\nimport { InterfaceSectionName, SwapEventName } from '@uniswap/analytics-events';\nimport { Field, TradeType } from '@uniswap/widgets';\nimport { useWeb3React } from '@web3-react/core';\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal';\nimport { isSupportedChain } from 'constants/chains';\nimport usePrevious from 'hooks/usePrevious';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMPTY_AMOUNT = '';\nfunction missingDefaultToken(tokens) {\n  var _tokens$Field$INPUT, _tokens$Field$OUTPUT;\n  if (!tokens.default) return false;\n  return !((_tokens$Field$INPUT = tokens[Field.INPUT]) === null || _tokens$Field$INPUT === void 0 ? void 0 : _tokens$Field$INPUT.equals(tokens.default)) && !((_tokens$Field$OUTPUT = tokens[Field.OUTPUT]) === null || _tokens$Field$OUTPUT === void 0 ? void 0 : _tokens$Field$OUTPUT.equals(tokens.default));\n}\nfunction currenciesEqual(a, b) {\n  if (a && b) {\n    return a.equals(b);\n  } else {\n    return !a && !b;\n  }\n}\nfunction tokensEqual(a, b) {\n  if (!a || !b) {\n    return !a && !b;\n  }\n  return currenciesEqual(a[Field.INPUT], b[Field.INPUT]) && currenciesEqual(a[Field.OUTPUT], b[Field.OUTPUT]) && currenciesEqual(a.default, b.default);\n}\n\n/**\n * Integrates the Widget's inputs.\n * Treats the Widget as a controlled component, using the app's own token selector for selection.\n * Enforces that token is a part of the returned value.\n */\nexport function useSyncWidgetInputs(_ref) {\n  _s();\n  var _defaultTokens$Field$;\n  let {\n    defaultTokens,\n    onDefaultTokenChange\n  } = _ref;\n  const trace = useTrace({\n    section: InterfaceSectionName.WIDGET\n  });\n  const {\n    chainId\n  } = useWeb3React();\n  const previousChainId = usePrevious(chainId);\n  const [type, setType] = useState(TradeType.EXACT_INPUT);\n  const [amount, setAmount] = useState(EMPTY_AMOUNT);\n  const [tokens, setTokens] = useState({\n    ...defaultTokens,\n    [Field.OUTPUT]: (_defaultTokens$Field$ = defaultTokens[Field.OUTPUT]) !== null && _defaultTokens$Field$ !== void 0 ? _defaultTokens$Field$ : defaultTokens.default\n  });\n\n  // The most recent set of defaults, which can be used to check when the defaults are actually changing.\n  const baseTokens = usePrevious(defaultTokens);\n  useEffect(() => {\n    if (!tokensEqual(baseTokens, defaultTokens)) {\n      var _defaultTokens$Field$2;\n      const input = defaultTokens[Field.INPUT];\n      const output = (_defaultTokens$Field$2 = defaultTokens[Field.OUTPUT]) !== null && _defaultTokens$Field$2 !== void 0 ? _defaultTokens$Field$2 : defaultTokens.default;\n      setTokens({\n        ...defaultTokens,\n        [Field.OUTPUT]: currenciesEqual(output, input) ? undefined : output\n      });\n    }\n  }, [baseTokens, defaultTokens]);\n\n  /**\n   * Clear the tokens if the chain changes.\n   */\n  useEffect(() => {\n    if (chainId !== previousChainId && !!previousChainId && isSupportedChain(chainId)) {\n      var _defaultTokens$Field$3;\n      setTokens({\n        ...defaultTokens,\n        [Field.OUTPUT]: (_defaultTokens$Field$3 = defaultTokens[Field.OUTPUT]) !== null && _defaultTokens$Field$3 !== void 0 ? _defaultTokens$Field$3 : defaultTokens.default\n      });\n      setAmount(EMPTY_AMOUNT);\n    }\n  }, [chainId, defaultTokens, previousChainId, tokens]);\n  const onAmountChange = useCallback((field, amount, origin) => {\n    if (origin === 'max') {\n      sendAnalyticsEvent(SwapEventName.SWAP_MAX_TOKEN_AMOUNT_SELECTED, {\n        ...trace\n      });\n    }\n    setType(field === Field.INPUT ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT);\n    setAmount(amount);\n  }, [trace]);\n  const onSwitchTokens = useCallback(() => {\n    sendAnalyticsEvent(SwapEventName.SWAP_TOKENS_REVERSED, {\n      ...trace\n    });\n    setType(type => invertTradeType(type));\n    setTokens(tokens => ({\n      [Field.INPUT]: tokens[Field.OUTPUT],\n      [Field.OUTPUT]: tokens[Field.INPUT],\n      default: tokens.default\n    }));\n  }, [trace]);\n  const [selectingField, setSelectingField] = useState();\n  const onTokenSelectorClick = useCallback(field => {\n    setSelectingField(field);\n    return false;\n  }, []);\n  const onTokenSelect = useCallback(selectingToken => {\n    var _tokens$otherField;\n    if (selectingField === undefined) return;\n    const otherField = invertField(selectingField);\n    const isFlip = (_tokens$otherField = tokens[otherField]) === null || _tokens$otherField === void 0 ? void 0 : _tokens$otherField.equals(selectingToken);\n    const update = {\n      [selectingField]: selectingToken,\n      [otherField]: isFlip ? tokens[selectingField] : tokens[otherField],\n      default: tokens.default\n    };\n    setType(type => {\n      // If flipping the tokens, also flip the type/amount.\n      if (isFlip) {\n        return invertTradeType(type);\n      }\n\n      // Setting a new token should clear its amount, if it is set.\n      const activeField = type === TradeType.EXACT_INPUT ? Field.INPUT : Field.OUTPUT;\n      if (selectingField === activeField) {\n        setAmount(() => EMPTY_AMOUNT);\n      }\n      return type;\n    });\n    if (missingDefaultToken(update)) {\n      var _update$Field$OUTPUT;\n      onDefaultTokenChange === null || onDefaultTokenChange === void 0 ? void 0 : onDefaultTokenChange({\n        ...update,\n        default: (_update$Field$OUTPUT = update[Field.OUTPUT]) !== null && _update$Field$OUTPUT !== void 0 ? _update$Field$OUTPUT : selectingToken\n      });\n      return;\n    }\n    setTokens(update);\n  }, [onDefaultTokenChange, selectingField, tokens]);\n  const tokenSelector = /*#__PURE__*/_jsxDEV(CurrencySearchModal, {\n    isOpen: selectingField !== undefined,\n    onDismiss: () => setSelectingField(undefined),\n    selectedCurrency: selectingField && tokens[selectingField],\n    otherSelectedCurrency: selectingField && tokens[invertField(selectingField)],\n    onCurrencySelect: onTokenSelect,\n    showCommonBases: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n  const value = useMemo(() => ({\n    type,\n    amount,\n    // If the initial state has not yet been set, preemptively disable the widget by passing no tokens. Effectively,\n    // this resets the widget - avoiding rendering stale state - because with no tokens the skeleton will be rendered.\n    ...(tokens[Field.INPUT] || tokens[Field.OUTPUT] ? tokens : undefined)\n  }), [amount, tokens, type]);\n  const valueHandlers = useMemo(() => ({\n    onAmountChange,\n    onSwitchTokens,\n    onTokenSelectorClick\n  }), [onAmountChange, onSwitchTokens, onTokenSelectorClick]);\n  return {\n    inputs: {\n      value,\n      ...valueHandlers\n    },\n    tokenSelector\n  };\n}\n\n// TODO(zzmp): Move to @uniswap/widgets.\n_s(useSyncWidgetInputs, \"rA6oOQThmnjXPY6DDTtQK/YCis8=\", false, function () {\n  return [useTrace, useWeb3React, usePrevious, usePrevious];\n});\nfunction invertField(field) {\n  switch (field) {\n    case Field.INPUT:\n      return Field.OUTPUT;\n    case Field.OUTPUT:\n      return Field.INPUT;\n  }\n}\n\n// TODO(zzmp): Include in @uniswap/sdk-core (on TradeType, if possible).\nfunction invertTradeType(tradeType) {\n  switch (tradeType) {\n    case TradeType.EXACT_INPUT:\n      return TradeType.EXACT_OUTPUT;\n    case TradeType.EXACT_OUTPUT:\n      return TradeType.EXACT_INPUT;\n  }\n}","map":{"version":3,"names":["sendAnalyticsEvent","useTrace","InterfaceSectionName","SwapEventName","Field","TradeType","useWeb3React","CurrencySearchModal","isSupportedChain","usePrevious","useCallback","useEffect","useMemo","useState","EMPTY_AMOUNT","missingDefaultToken","tokens","default","INPUT","equals","OUTPUT","currenciesEqual","a","b","tokensEqual","useSyncWidgetInputs","defaultTokens","onDefaultTokenChange","trace","section","WIDGET","chainId","previousChainId","type","setType","EXACT_INPUT","amount","setAmount","setTokens","baseTokens","input","output","undefined","onAmountChange","field","origin","SWAP_MAX_TOKEN_AMOUNT_SELECTED","EXACT_OUTPUT","onSwitchTokens","SWAP_TOKENS_REVERSED","invertTradeType","selectingField","setSelectingField","onTokenSelectorClick","onTokenSelect","selectingToken","otherField","invertField","isFlip","update","activeField","tokenSelector","value","valueHandlers","inputs","tradeType"],"sources":["/home/diep/freelance/interface/src/components/Widget/inputs.tsx"],"sourcesContent":["import { sendAnalyticsEvent, useTrace } from '@uniswap/analytics'\nimport { InterfaceSectionName, SwapEventName } from '@uniswap/analytics-events'\nimport { Currency, Field, SwapController, SwapEventHandlers, TradeType } from '@uniswap/widgets'\nimport { useWeb3React } from '@web3-react/core'\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\nimport { isSupportedChain } from 'constants/chains'\nimport usePrevious from 'hooks/usePrevious'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\n\nconst EMPTY_AMOUNT = ''\n\ntype SwapValue = Required<SwapController>['value']\nexport type SwapTokens = Pick<SwapValue, Field.INPUT | Field.OUTPUT> & { default?: Currency }\nexport type DefaultTokens = Partial<SwapTokens>\n\nfunction missingDefaultToken(tokens: SwapTokens) {\n  if (!tokens.default) return false\n  return !tokens[Field.INPUT]?.equals(tokens.default) && !tokens[Field.OUTPUT]?.equals(tokens.default)\n}\n\nfunction currenciesEqual(a: Currency | undefined, b: Currency | undefined) {\n  if (a && b) {\n    return a.equals(b)\n  } else {\n    return !a && !b\n  }\n}\n\nfunction tokensEqual(a: SwapTokens | undefined, b: SwapTokens | undefined) {\n  if (!a || !b) {\n    return !a && !b\n  }\n  return (\n    currenciesEqual(a[Field.INPUT], b[Field.INPUT]) &&\n    currenciesEqual(a[Field.OUTPUT], b[Field.OUTPUT]) &&\n    currenciesEqual(a.default, b.default)\n  )\n}\n\n/**\n * Integrates the Widget's inputs.\n * Treats the Widget as a controlled component, using the app's own token selector for selection.\n * Enforces that token is a part of the returned value.\n */\nexport function useSyncWidgetInputs({\n  defaultTokens,\n  onDefaultTokenChange,\n}: {\n  defaultTokens: DefaultTokens\n  onDefaultTokenChange?: (tokens: SwapTokens) => void\n}) {\n  const trace = useTrace({ section: InterfaceSectionName.WIDGET })\n\n  const { chainId } = useWeb3React()\n  const previousChainId = usePrevious(chainId)\n\n  const [type, setType] = useState<SwapValue['type']>(TradeType.EXACT_INPUT)\n  const [amount, setAmount] = useState<SwapValue['amount']>(EMPTY_AMOUNT)\n  const [tokens, setTokens] = useState<SwapTokens>({\n    ...defaultTokens,\n    [Field.OUTPUT]: defaultTokens[Field.OUTPUT] ?? defaultTokens.default,\n  })\n\n  // The most recent set of defaults, which can be used to check when the defaults are actually changing.\n  const baseTokens = usePrevious(defaultTokens)\n  useEffect(() => {\n    if (!tokensEqual(baseTokens, defaultTokens)) {\n      const input = defaultTokens[Field.INPUT]\n      const output = defaultTokens[Field.OUTPUT] ?? defaultTokens.default\n      setTokens({\n        ...defaultTokens,\n        [Field.OUTPUT]: currenciesEqual(output, input) ? undefined : output,\n      })\n    }\n  }, [baseTokens, defaultTokens])\n\n  /**\n   * Clear the tokens if the chain changes.\n   */\n  useEffect(() => {\n    if (chainId !== previousChainId && !!previousChainId && isSupportedChain(chainId)) {\n      setTokens({\n        ...defaultTokens,\n        [Field.OUTPUT]: defaultTokens[Field.OUTPUT] ?? defaultTokens.default,\n      })\n      setAmount(EMPTY_AMOUNT)\n    }\n  }, [chainId, defaultTokens, previousChainId, tokens])\n\n  const onAmountChange = useCallback(\n    (field: Field, amount: string, origin?: 'max') => {\n      if (origin === 'max') {\n        sendAnalyticsEvent(SwapEventName.SWAP_MAX_TOKEN_AMOUNT_SELECTED, { ...trace })\n      }\n      setType(field === Field.INPUT ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT)\n      setAmount(amount)\n    },\n    [trace]\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    sendAnalyticsEvent(SwapEventName.SWAP_TOKENS_REVERSED, { ...trace })\n    setType((type) => invertTradeType(type))\n    setTokens((tokens) => ({\n      [Field.INPUT]: tokens[Field.OUTPUT],\n      [Field.OUTPUT]: tokens[Field.INPUT],\n      default: tokens.default,\n    }))\n  }, [trace])\n\n  const [selectingField, setSelectingField] = useState<Field>()\n  const onTokenSelectorClick = useCallback((field: Field) => {\n    setSelectingField(field)\n    return false\n  }, [])\n\n  const onTokenSelect = useCallback(\n    (selectingToken: Currency) => {\n      if (selectingField === undefined) return\n\n      const otherField = invertField(selectingField)\n      const isFlip = tokens[otherField]?.equals(selectingToken)\n      const update: SwapTokens = {\n        [selectingField]: selectingToken,\n        [otherField]: isFlip ? tokens[selectingField] : tokens[otherField],\n        default: tokens.default,\n      }\n\n      setType((type) => {\n        // If flipping the tokens, also flip the type/amount.\n        if (isFlip) {\n          return invertTradeType(type)\n        }\n\n        // Setting a new token should clear its amount, if it is set.\n        const activeField = type === TradeType.EXACT_INPUT ? Field.INPUT : Field.OUTPUT\n        if (selectingField === activeField) {\n          setAmount(() => EMPTY_AMOUNT)\n        }\n\n        return type\n      })\n\n      if (missingDefaultToken(update)) {\n        onDefaultTokenChange?.({\n          ...update,\n          default: update[Field.OUTPUT] ?? selectingToken,\n        })\n        return\n      }\n      setTokens(update)\n    },\n    [onDefaultTokenChange, selectingField, tokens]\n  )\n\n  const tokenSelector = (\n    <CurrencySearchModal\n      isOpen={selectingField !== undefined}\n      onDismiss={() => setSelectingField(undefined)}\n      selectedCurrency={selectingField && tokens[selectingField]}\n      otherSelectedCurrency={selectingField && tokens[invertField(selectingField)]}\n      onCurrencySelect={onTokenSelect}\n      showCommonBases\n    />\n  )\n\n  const value: SwapValue = useMemo(\n    () => ({\n      type,\n      amount,\n      // If the initial state has not yet been set, preemptively disable the widget by passing no tokens. Effectively,\n      // this resets the widget - avoiding rendering stale state - because with no tokens the skeleton will be rendered.\n      ...(tokens[Field.INPUT] || tokens[Field.OUTPUT] ? tokens : undefined),\n    }),\n    [amount, tokens, type]\n  )\n  const valueHandlers: SwapEventHandlers = useMemo(\n    () => ({ onAmountChange, onSwitchTokens, onTokenSelectorClick }),\n    [onAmountChange, onSwitchTokens, onTokenSelectorClick]\n  )\n  return { inputs: { value, ...valueHandlers }, tokenSelector }\n}\n\n// TODO(zzmp): Move to @uniswap/widgets.\nfunction invertField(field: Field) {\n  switch (field) {\n    case Field.INPUT:\n      return Field.OUTPUT\n    case Field.OUTPUT:\n      return Field.INPUT\n  }\n}\n\n// TODO(zzmp): Include in @uniswap/sdk-core (on TradeType, if possible).\nfunction invertTradeType(tradeType: TradeType) {\n  switch (tradeType) {\n    case TradeType.EXACT_INPUT:\n      return TradeType.EXACT_OUTPUT\n    case TradeType.EXACT_OUTPUT:\n      return TradeType.EXACT_INPUT\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}