{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/diep/freelance/interface/src/nft/components/explore/TrendingCollections.tsx\",\n  _s = $RefreshSig$();\nimport { OpacityHoverState } from 'components/Common';\nimport { useNftGraphqlEnabled } from 'featureFlags/flags/nftlGraphql';\nimport { HistoryDuration } from 'graphql/data/__generated__/types-and-hooks';\nimport { useTrendingCollections } from 'graphql/data/nft/TrendingCollections';\nimport { Denomination, TimePeriod } from 'nft/types';\nimport { fetchPrice } from 'nft/utils';\nimport { useMemo, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { ThemedText } from 'theme';\nimport { fetchTrendingCollections } from '../../queries';\nimport CollectionTable from './CollectionTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timeOptions = [{\n  label: '1D',\n  value: TimePeriod.OneDay\n}, {\n  label: '1W',\n  value: TimePeriod.SevenDays\n}, {\n  label: '1M',\n  value: TimePeriod.ThirtyDays\n}, {\n  label: 'All',\n  value: TimePeriod.AllTime\n}];\nconst ExploreContainer = _styled.div.withConfig({\n  displayName: \"TrendingCollections__ExploreContainer\",\n  componentId: \"sc-1dnk851-0\"\n})([\"display:flex;flex-direction:column;width:100%;max-width:\", \";padding:0 16px;\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.maxWidth;\n});\nconst StyledHeader = _styled.div.withConfig({\n  displayName: \"TrendingCollections__StyledHeader\",\n  componentId: \"sc-1dnk851-1\"\n})([\"color:\", \";font-size:36px;line-height:44px;font-weight:500;@media only screen and (max-width:\", \"){font-size:20px;line-height:28px;}\"], _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.textPrimary;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return `${theme.breakpoint.sm}px`;\n});\nconst FiltersRow = _styled.div.withConfig({\n  displayName: \"TrendingCollections__FiltersRow\",\n  componentId: \"sc-1dnk851-2\"\n})([\"display:flex;justify-content:space-between;margin-top:36px;margin-bottom:20px;@media only screen and (max-width:\", \"){margin-bottom:16px;margin-top:16px;}\"], _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return `${theme.breakpoint.sm}px`;\n});\nconst Filter = _styled.div.withConfig({\n  displayName: \"TrendingCollections__Filter\",\n  componentId: \"sc-1dnk851-3\"\n})([\"display:flex;border:1px solid \", \";border-radius:16px;padding:4px;\"], _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.backgroundOutline;\n});\nconst Selector = _styled.div.withConfig({\n  displayName: \"TrendingCollections__Selector\",\n  componentId: \"sc-1dnk851-4\"\n})([\"padding:8px 12px;border-radius:12px;background:\", \";cursor:pointer;\", \"\"], _ref6 => {\n  let {\n    active,\n    theme\n  } = _ref6;\n  return active ? theme.backgroundInteractive : 'none';\n}, OpacityHoverState);\nconst StyledSelectorText = _styled(ThemedText.SubHeader).withConfig({\n  displayName: \"TrendingCollections__StyledSelectorText\",\n  componentId: \"sc-1dnk851-5\"\n})([\"color:\", \";\"], _ref7 => {\n  let {\n    theme,\n    active\n  } = _ref7;\n  return active ? theme.textPrimary : theme.textSecondary;\n});\nfunction convertTimePeriodToHistoryDuration(timePeriod) {\n  switch (timePeriod) {\n    case TimePeriod.OneDay:\n      return HistoryDuration.Day;\n    case TimePeriod.SevenDays:\n      return HistoryDuration.Week;\n    case TimePeriod.ThirtyDays:\n      return HistoryDuration.Month;\n    case TimePeriod.AllTime:\n      return HistoryDuration.Max;\n    default:\n      return HistoryDuration.Day;\n  }\n}\nconst TrendingCollections = () => {\n  _s();\n  const [timePeriod, setTimePeriod] = useState(TimePeriod.OneDay);\n  const [isEthToggled, setEthToggled] = useState(true);\n  const isNftGraphqlEnabled = useNftGraphqlEnabled();\n  const {\n    isSuccess,\n    data\n  } = useQuery(['trendingCollections', timePeriod], () => {\n    return fetchTrendingCollections({\n      volumeType: 'eth',\n      timePeriod,\n      size: 100\n    });\n  }, {\n    refetchOnReconnect: false,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    refetchInterval: 5000\n  });\n  const {\n    data: gqlData,\n    loading\n  } = useTrendingCollections(100, convertTimePeriodToHistoryDuration(timePeriod));\n  const {\n    data: usdPrice\n  } = useQuery(['fetchPrice', {}], () => fetchPrice(), {\n    refetchOnReconnect: false,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    refetchInterval: 60000\n  });\n  const trendingCollections = useMemo(() => {\n    const gatedData = isNftGraphqlEnabled ? gqlData : data;\n    const dataLoaded = isNftGraphqlEnabled ? !loading : isSuccess;\n    if (dataLoaded && gatedData) {\n      return gatedData.map(d => ({\n        ...d,\n        collection: {\n          name: d.name,\n          logo: d.imageUrl,\n          address: d.address,\n          isVerified: d.isVerified\n        },\n        volume: {\n          value: d.volume,\n          change: d.volumeChange,\n          type: 'eth'\n        },\n        floor: {\n          value: d.floor,\n          change: d.floorChange\n        },\n        owners: {\n          value: d.owners\n        },\n        sales: d.sales,\n        totalSupply: d.totalSupply,\n        denomination: isEthToggled ? Denomination.ETH : Denomination.USD,\n        usdPrice\n      }));\n    } else return [];\n  }, [isNftGraphqlEnabled, gqlData, data, loading, isSuccess, isEthToggled, usdPrice]);\n  return /*#__PURE__*/_jsxDEV(ExploreContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n      children: \"Trending NFT collections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FiltersRow, {\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        children: timeOptions.map(timeOption => {\n          return /*#__PURE__*/_jsxDEV(Selector, {\n            active: timeOption.value === timePeriod,\n            onClick: () => setTimePeriod(timeOption.value),\n            children: /*#__PURE__*/_jsxDEV(StyledSelectorText, {\n              lineHeight: \"20px\",\n              active: timeOption.value === timePeriod,\n              children: timeOption.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, timeOption.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onClick: () => setEthToggled(!isEthToggled),\n        children: [/*#__PURE__*/_jsxDEV(Selector, {\n          active: isEthToggled,\n          children: /*#__PURE__*/_jsxDEV(StyledSelectorText, {\n            lineHeight: \"20px\",\n            active: isEthToggled,\n            children: \"ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Selector, {\n          active: !isEthToggled,\n          children: /*#__PURE__*/_jsxDEV(StyledSelectorText, {\n            lineHeight: \"20px\",\n            active: !isEthToggled,\n            children: \"USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollectionTable, {\n      data: trendingCollections,\n      timePeriod: timePeriod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(TrendingCollections, \"Q6AQQi/zbvEXw2PCvSHn8dA6Kag=\", false, function () {\n  return [useNftGraphqlEnabled, useQuery, useTrendingCollections, useQuery];\n});\n_c = TrendingCollections;\nexport default TrendingCollections;\nvar _c;\n$RefreshReg$(_c, \"TrendingCollections\");","map":{"version":3,"names":["OpacityHoverState","useNftGraphqlEnabled","HistoryDuration","useTrendingCollections","Denomination","TimePeriod","fetchPrice","useMemo","useState","useQuery","ThemedText","fetchTrendingCollections","CollectionTable","timeOptions","label","value","OneDay","SevenDays","ThirtyDays","AllTime","ExploreContainer","styled","div","theme","maxWidth","StyledHeader","textPrimary","breakpoint","sm","FiltersRow","Filter","backgroundOutline","Selector","active","backgroundInteractive","StyledSelectorText","SubHeader","textSecondary","convertTimePeriodToHistoryDuration","timePeriod","Day","Week","Month","Max","TrendingCollections","setTimePeriod","isEthToggled","setEthToggled","isNftGraphqlEnabled","isSuccess","data","volumeType","size","refetchOnReconnect","refetchOnWindowFocus","refetchOnMount","refetchInterval","gqlData","loading","usdPrice","trendingCollections","gatedData","dataLoaded","map","d","collection","name","logo","imageUrl","address","isVerified","volume","change","volumeChange","type","floor","floorChange","owners","sales","totalSupply","denomination","ETH","USD","timeOption"],"sources":["/home/diep/freelance/interface/src/nft/components/explore/TrendingCollections.tsx"],"sourcesContent":["import { OpacityHoverState } from 'components/Common'\nimport { useNftGraphqlEnabled } from 'featureFlags/flags/nftlGraphql'\nimport { HistoryDuration } from 'graphql/data/__generated__/types-and-hooks'\nimport { useTrendingCollections } from 'graphql/data/nft/TrendingCollections'\nimport ms from 'ms.macro'\nimport { CollectionTableColumn, Denomination, TimePeriod, VolumeType } from 'nft/types'\nimport { fetchPrice } from 'nft/utils'\nimport { useMemo, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nimport { fetchTrendingCollections } from '../../queries'\nimport CollectionTable from './CollectionTable'\n\nconst timeOptions: { label: string; value: TimePeriod }[] = [\n  { label: '1D', value: TimePeriod.OneDay },\n  { label: '1W', value: TimePeriod.SevenDays },\n  { label: '1M', value: TimePeriod.ThirtyDays },\n  { label: 'All', value: TimePeriod.AllTime },\n]\n\nconst ExploreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: ${({ theme }) => theme.maxWidth};\n  padding: 0 16px;\n`\n\nconst StyledHeader = styled.div`\n  color: ${({ theme }) => theme.textPrimary};\n  font-size: 36px;\n  line-height: 44px;\n  font-weight: 500;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`\n\nconst FiltersRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 36px;\n  margin-bottom: 20px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    margin-bottom: 16px;\n    margin-top: 16px;\n  }\n`\n\nconst Filter = styled.div`\n  display: flex;\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n  border-radius: 16px;\n  padding: 4px;\n`\n\nconst Selector = styled.div<{ active: boolean }>`\n  padding: 8px 12px;\n  border-radius: 12px;\n  background: ${({ active, theme }) => (active ? theme.backgroundInteractive : 'none')};\n  cursor: pointer;\n\n  ${OpacityHoverState}\n`\n\nconst StyledSelectorText = styled(ThemedText.SubHeader)<{ active: boolean }>`\n  color: ${({ theme, active }) => (active ? theme.textPrimary : theme.textSecondary)};\n`\n\nfunction convertTimePeriodToHistoryDuration(timePeriod: TimePeriod): HistoryDuration {\n  switch (timePeriod) {\n    case TimePeriod.OneDay:\n      return HistoryDuration.Day\n    case TimePeriod.SevenDays:\n      return HistoryDuration.Week\n    case TimePeriod.ThirtyDays:\n      return HistoryDuration.Month\n    case TimePeriod.AllTime:\n      return HistoryDuration.Max\n    default:\n      return HistoryDuration.Day\n  }\n}\n\nconst TrendingCollections = () => {\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>(TimePeriod.OneDay)\n  const [isEthToggled, setEthToggled] = useState(true)\n  const isNftGraphqlEnabled = useNftGraphqlEnabled()\n\n  const { isSuccess, data } = useQuery(\n    ['trendingCollections', timePeriod],\n    () => {\n      return fetchTrendingCollections({ volumeType: 'eth', timePeriod, size: 100 })\n    },\n    {\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchInterval: 5000,\n    }\n  )\n\n  const { data: gqlData, loading } = useTrendingCollections(100, convertTimePeriodToHistoryDuration(timePeriod))\n\n  const { data: usdPrice } = useQuery(['fetchPrice', {}], () => fetchPrice(), {\n    refetchOnReconnect: false,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    refetchInterval: ms`1m`,\n  })\n\n  const trendingCollections = useMemo(() => {\n    const gatedData = isNftGraphqlEnabled ? gqlData : data\n    const dataLoaded = isNftGraphqlEnabled ? !loading : isSuccess\n    if (dataLoaded && gatedData) {\n      return gatedData.map((d) => ({\n        ...d,\n        collection: {\n          name: d.name,\n          logo: d.imageUrl,\n          address: d.address,\n          isVerified: d.isVerified,\n        },\n        volume: {\n          value: d.volume,\n          change: d.volumeChange,\n          type: 'eth' as VolumeType,\n        },\n        floor: {\n          value: d.floor,\n          change: d.floorChange,\n        },\n        owners: {\n          value: d.owners,\n        },\n        sales: d.sales,\n        totalSupply: d.totalSupply,\n        denomination: isEthToggled ? Denomination.ETH : Denomination.USD,\n        usdPrice,\n      }))\n    } else return [] as CollectionTableColumn[]\n  }, [isNftGraphqlEnabled, gqlData, data, loading, isSuccess, isEthToggled, usdPrice])\n\n  return (\n    <ExploreContainer>\n      <StyledHeader>Trending NFT collections</StyledHeader>\n      <FiltersRow>\n        <Filter>\n          {timeOptions.map((timeOption) => {\n            return (\n              <Selector\n                key={timeOption.value}\n                active={timeOption.value === timePeriod}\n                onClick={() => setTimePeriod(timeOption.value)}\n              >\n                <StyledSelectorText lineHeight=\"20px\" active={timeOption.value === timePeriod}>\n                  {timeOption.label}\n                </StyledSelectorText>\n              </Selector>\n            )\n          })}\n        </Filter>\n        <Filter onClick={() => setEthToggled(!isEthToggled)}>\n          <Selector active={isEthToggled}>\n            <StyledSelectorText lineHeight=\"20px\" active={isEthToggled}>\n              ETH\n            </StyledSelectorText>\n          </Selector>\n          <Selector active={!isEthToggled}>\n            <StyledSelectorText lineHeight=\"20px\" active={!isEthToggled}>\n              USD\n            </StyledSelectorText>\n          </Selector>\n        </Filter>\n      </FiltersRow>\n      <CollectionTable data={trendingCollections} timePeriod={timePeriod} />\n    </ExploreContainer>\n  )\n}\n\nexport default TrendingCollections\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}